(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{2:function(t,n,e){"use strict";e.r(n);var r=function(t,n){return t<n?-1:t>n?1:t>=n?0:NaN},i=function(t){return 1===t.length&&(t=function(t){return function(n,e){return r(t(n),e)}}(t)),{left:function(n,e,r,i){for(null==r&&(r=0),null==i&&(i=n.length);r<i;){var u=r+i>>>1;t(n[u],e)<0?r=u+1:i=u}return r},right:function(n,e,r,i){for(null==r&&(r=0),null==i&&(i=n.length);r<i;){var u=r+i>>>1;t(n[u],e)>0?i=u:r=u+1}return r}}};var u=i(r),o=u.right,a=u.left,f=o,c=function(t,n){null==n&&(n=s);for(var e=0,r=t.length-1,i=t[0],u=new Array(r<0?0:r);e<r;)u[e]=n(i,i=t[++e]);return u};function s(t,n){return[t,n]}var l=function(t,n,e){var r,i,u,o,a=t.length,f=n.length,c=new Array(a*f);for(null==e&&(e=s),r=u=0;r<a;++r)for(o=t[r],i=0;i<f;++i,++u)c[u]=e(o,n[i]);return c},h=function(t,n){return n<t?-1:n>t?1:n>=t?0:NaN},d=function(t){return null===t?NaN:+t},p=function(t,n){var e,r,i=t.length,u=0,o=-1,a=0,f=0;if(null==n)for(;++o<i;)isNaN(e=d(t[o]))||(f+=(r=e-a)*(e-(a+=r/++u)));else for(;++o<i;)isNaN(e=d(n(t[o],o,t)))||(f+=(r=e-a)*(e-(a+=r/++u)));if(u>1)return f/(u-1)},v=function(t,n){var e=p(t,n);return e?Math.sqrt(e):e},g=function(t,n){var e,r,i,u=t.length,o=-1;if(null==n){for(;++o<u;)if(null!=(e=t[o])&&e>=e)for(r=i=e;++o<u;)null!=(e=t[o])&&(r>e&&(r=e),i<e&&(i=e))}else for(;++o<u;)if(null!=(e=n(t[o],o,t))&&e>=e)for(r=i=e;++o<u;)null!=(e=n(t[o],o,t))&&(r>e&&(r=e),i<e&&(i=e));return[r,i]},y=Array.prototype,_=y.slice,b=y.map,m=function(t){return function(){return t}},x=function(t){return t},w=function(t,n,e){t=+t,n=+n,e=(i=arguments.length)<2?(n=t,t=0,1):i<3?1:+e;for(var r=-1,i=0|Math.max(0,Math.ceil((n-t)/e)),u=new Array(i);++r<i;)u[r]=t+r*e;return u},M=Math.sqrt(50),A=Math.sqrt(10),T=Math.sqrt(2),N=function(t,n,e){var r,i,u,o,a=-1;if(e=+e,(t=+t)===(n=+n)&&e>0)return[t];if((r=n<t)&&(i=t,t=n,n=i),0===(o=S(t,n,e))||!isFinite(o))return[];if(o>0)for(t=Math.ceil(t/o),n=Math.floor(n/o),u=new Array(i=Math.ceil(n-t+1));++a<i;)u[a]=(t+a)*o;else for(t=Math.floor(t*o),n=Math.ceil(n*o),u=new Array(i=Math.ceil(t-n+1));++a<i;)u[a]=(t-a)/o;return r&&u.reverse(),u};function S(t,n,e){var r=(n-t)/Math.max(0,e),i=Math.floor(Math.log(r)/Math.LN10),u=r/Math.pow(10,i);return i>=0?(u>=M?10:u>=A?5:u>=T?2:1)*Math.pow(10,i):-Math.pow(10,-i)/(u>=M?10:u>=A?5:u>=T?2:1)}function E(t,n,e){var r=Math.abs(n-t)/Math.max(0,e),i=Math.pow(10,Math.floor(Math.log(r)/Math.LN10)),u=r/i;return u>=M?i*=10:u>=A?i*=5:u>=T&&(i*=2),n<t?-i:i}var k=function(t){return Math.ceil(Math.log(t.length)/Math.LN2)+1},C=function(){var t=x,n=g,e=k;function r(r){var i,u,o=r.length,a=new Array(o);for(i=0;i<o;++i)a[i]=t(r[i],i,r);var c=n(a),s=c[0],l=c[1],h=e(a,s,l);Array.isArray(h)||(h=E(s,l,h),h=w(Math.ceil(s/h)*h,l,h));for(var d=h.length;h[0]<=s;)h.shift(),--d;for(;h[d-1]>l;)h.pop(),--d;var p,v=new Array(d+1);for(i=0;i<=d;++i)(p=v[i]=[]).x0=i>0?h[i-1]:s,p.x1=i<d?h[i]:l;for(i=0;i<o;++i)s<=(u=a[i])&&u<=l&&v[f(h,u,0,d)].push(r[i]);return v}return r.value=function(n){return arguments.length?(t="function"==typeof n?n:m(n),r):t},r.domain=function(t){return arguments.length?(n="function"==typeof t?t:m([t[0],t[1]]),r):n},r.thresholds=function(t){return arguments.length?(e="function"==typeof t?t:Array.isArray(t)?m(_.call(t)):m(t),r):e},r},P=function(t,n,e){if(null==e&&(e=d),r=t.length){if((n=+n)<=0||r<2)return+e(t[0],0,t);if(n>=1)return+e(t[r-1],r-1,t);var r,i=(r-1)*n,u=Math.floor(i),o=+e(t[u],u,t);return o+(+e(t[u+1],u+1,t)-o)*(i-u)}},z=function(t,n,e){return t=b.call(t,d).sort(r),Math.ceil((e-n)/(2*(P(t,.75)-P(t,.25))*Math.pow(t.length,-1/3)))},R=function(t,n,e){return Math.ceil((e-n)/(3.5*v(t)*Math.pow(t.length,-1/3)))},L=function(t,n){var e,r,i=t.length,u=-1;if(null==n){for(;++u<i;)if(null!=(e=t[u])&&e>=e)for(r=e;++u<i;)null!=(e=t[u])&&e>r&&(r=e)}else for(;++u<i;)if(null!=(e=n(t[u],u,t))&&e>=e)for(r=e;++u<i;)null!=(e=n(t[u],u,t))&&e>r&&(r=e);return r},D=function(t,n){var e,r=t.length,i=r,u=-1,o=0;if(null==n)for(;++u<r;)isNaN(e=d(t[u]))?--i:o+=e;else for(;++u<r;)isNaN(e=d(n(t[u],u,t)))?--i:o+=e;if(i)return o/i},U=function(t,n){var e,i=t.length,u=-1,o=[];if(null==n)for(;++u<i;)isNaN(e=d(t[u]))||o.push(e);else for(;++u<i;)isNaN(e=d(n(t[u],u,t)))||o.push(e);return P(o.sort(r),.5)},q=function(t){for(var n,e,r,i=t.length,u=-1,o=0;++u<i;)o+=t[u].length;for(e=new Array(o);--i>=0;)for(n=(r=t[i]).length;--n>=0;)e[--o]=r[n];return e},O=function(t,n){var e,r,i=t.length,u=-1;if(null==n){for(;++u<i;)if(null!=(e=t[u])&&e>=e)for(r=e;++u<i;)null!=(e=t[u])&&r>e&&(r=e)}else for(;++u<i;)if(null!=(e=n(t[u],u,t))&&e>=e)for(r=e;++u<i;)null!=(e=n(t[u],u,t))&&r>e&&(r=e);return r},Y=function(t,n){for(var e=n.length,r=new Array(e);e--;)r[e]=t[n[e]];return r},B=function(t,n){if(e=t.length){var e,i,u=0,o=0,a=t[o];for(null==n&&(n=r);++u<e;)(n(i=t[u],a)<0||0!==n(a,a))&&(a=i,o=u);return 0===n(a,a)?o:void 0}},I=function(t,n,e){for(var r,i,u=(null==e?t.length:e)-(n=null==n?0:+n);u;)i=Math.random()*u--|0,r=t[u+n],t[u+n]=t[i+n],t[i+n]=r;return t},F=function(t,n){var e,r=t.length,i=-1,u=0;if(null==n)for(;++i<r;)(e=+t[i])&&(u+=e);else for(;++i<r;)(e=+n(t[i],i,t))&&(u+=e);return u},H=function(t){if(!(i=t.length))return[];for(var n=-1,e=O(t,j),r=new Array(e);++n<e;)for(var i,u=-1,o=r[n]=new Array(i);++u<i;)o[u]=t[u][n];return r};function j(t){return t.length}var X=function(){return H(arguments)},G=Array.prototype.slice,V=function(t){return t},$=1,W=2,Z=3,Q=4,J=1e-6;function K(t){return"translate("+(t+.5)+",0)"}function tt(t){return"translate(0,"+(t+.5)+")"}function nt(){return!this.__axis}function et(t,n){var e=[],r=null,i=null,u=6,o=6,a=3,f=t===$||t===Q?-1:1,c=t===Q||t===W?"x":"y",s=t===$||t===Z?K:tt;function l(l){var h=null==r?n.ticks?n.ticks.apply(n,e):n.domain():r,d=null==i?n.tickFormat?n.tickFormat.apply(n,e):V:i,p=Math.max(u,0)+a,v=n.range(),g=+v[0]+.5,y=+v[v.length-1]+.5,_=(n.bandwidth?function(t){var n=Math.max(0,t.bandwidth()-1)/2;return t.round()&&(n=Math.round(n)),function(e){return+t(e)+n}}:function(t){return function(n){return+t(n)}})(n.copy()),b=l.selection?l.selection():l,m=b.selectAll(".domain").data([null]),x=b.selectAll(".tick").data(h,n).order(),w=x.exit(),M=x.enter().append("g").attr("class","tick"),A=x.select("line"),T=x.select("text");m=m.merge(m.enter().insert("path",".tick").attr("class","domain").attr("stroke","currentColor")),x=x.merge(M),A=A.merge(M.append("line").attr("stroke","currentColor").attr(c+"2",f*u)),T=T.merge(M.append("text").attr("fill","currentColor").attr(c,f*p).attr("dy",t===$?"0em":t===Z?"0.71em":"0.32em")),l!==b&&(m=m.transition(l),x=x.transition(l),A=A.transition(l),T=T.transition(l),w=w.transition(l).attr("opacity",J).attr("transform",function(t){return isFinite(t=_(t))?s(t):this.getAttribute("transform")}),M.attr("opacity",J).attr("transform",function(t){var n=this.parentNode.__axis;return s(n&&isFinite(n=n(t))?n:_(t))})),w.remove(),m.attr("d",t===Q||t==W?o?"M"+f*o+","+g+"H0.5V"+y+"H"+f*o:"M0.5,"+g+"V"+y:o?"M"+g+","+f*o+"V0.5H"+y+"V"+f*o:"M"+g+",0.5H"+y),x.attr("opacity",1).attr("transform",function(t){return s(_(t))}),A.attr(c+"2",f*u),T.attr(c,f*p).text(d),b.filter(nt).attr("fill","none").attr("font-size",10).attr("font-family","sans-serif").attr("text-anchor",t===W?"start":t===Q?"end":"middle"),b.each(function(){this.__axis=_})}return l.scale=function(t){return arguments.length?(n=t,l):n},l.ticks=function(){return e=G.call(arguments),l},l.tickArguments=function(t){return arguments.length?(e=null==t?[]:G.call(t),l):e.slice()},l.tickValues=function(t){return arguments.length?(r=null==t?null:G.call(t),l):r&&r.slice()},l.tickFormat=function(t){return arguments.length?(i=t,l):i},l.tickSize=function(t){return arguments.length?(u=o=+t,l):u},l.tickSizeInner=function(t){return arguments.length?(u=+t,l):u},l.tickSizeOuter=function(t){return arguments.length?(o=+t,l):o},l.tickPadding=function(t){return arguments.length?(a=+t,l):a},l}function rt(t){return et($,t)}function it(t){return et(W,t)}function ut(t){return et(Z,t)}function ot(t){return et(Q,t)}var at={value:function(){}};function ft(){for(var t,n=0,e=arguments.length,r={};n<e;++n){if(!(t=arguments[n]+"")||t in r)throw new Error("illegal type: "+t);r[t]=[]}return new ct(r)}function ct(t){this._=t}function st(t,n){for(var e,r=0,i=t.length;r<i;++r)if((e=t[r]).name===n)return e.value}function lt(t,n,e){for(var r=0,i=t.length;r<i;++r)if(t[r].name===n){t[r]=at,t=t.slice(0,r).concat(t.slice(r+1));break}return null!=e&&t.push({name:n,value:e}),t}ct.prototype=ft.prototype={constructor:ct,on:function(t,n){var e,r=this._,i=function(t,n){return t.trim().split(/^|\s+/).map(function(t){var e="",r=t.indexOf(".");if(r>=0&&(e=t.slice(r+1),t=t.slice(0,r)),t&&!n.hasOwnProperty(t))throw new Error("unknown type: "+t);return{type:t,name:e}})}(t+"",r),u=-1,o=i.length;if(!(arguments.length<2)){if(null!=n&&"function"!=typeof n)throw new Error("invalid callback: "+n);for(;++u<o;)if(e=(t=i[u]).type)r[e]=lt(r[e],t.name,n);else if(null==n)for(e in r)r[e]=lt(r[e],t.name,null);return this}for(;++u<o;)if((e=(t=i[u]).type)&&(e=st(r[e],t.name)))return e},copy:function(){var t={},n=this._;for(var e in n)t[e]=n[e].slice();return new ct(t)},call:function(t,n){if((e=arguments.length-2)>0)for(var e,r,i=new Array(e),u=0;u<e;++u)i[u]=arguments[u+2];if(!this._.hasOwnProperty(t))throw new Error("unknown type: "+t);for(u=0,e=(r=this._[t]).length;u<e;++u)r[u].value.apply(n,i)},apply:function(t,n,e){if(!this._.hasOwnProperty(t))throw new Error("unknown type: "+t);for(var r=this._[t],i=0,u=r.length;i<u;++i)r[i].value.apply(n,e)}};var ht=ft,dt="http://www.w3.org/1999/xhtml",pt={svg:"http://www.w3.org/2000/svg",xhtml:dt,xlink:"http://www.w3.org/1999/xlink",xml:"http://www.w3.org/XML/1998/namespace",xmlns:"http://www.w3.org/2000/xmlns/"},vt=function(t){var n=t+="",e=n.indexOf(":");return e>=0&&"xmlns"!==(n=t.slice(0,e))&&(t=t.slice(e+1)),pt.hasOwnProperty(n)?{space:pt[n],local:t}:t};var gt=function(t){var n=vt(t);return(n.local?function(t){return function(){return this.ownerDocument.createElementNS(t.space,t.local)}}:function(t){return function(){var n=this.ownerDocument,e=this.namespaceURI;return e===dt&&n.documentElement.namespaceURI===dt?n.createElement(t):n.createElementNS(e,t)}})(n)};function yt(){}var _t=function(t){return null==t?yt:function(){return this.querySelector(t)}};function bt(){return[]}var mt=function(t){return null==t?bt:function(){return this.querySelectorAll(t)}},xt=function(t){return function(){return this.matches(t)}};if("undefined"!=typeof document){var wt=document.documentElement;if(!wt.matches){var Mt=wt.webkitMatchesSelector||wt.msMatchesSelector||wt.mozMatchesSelector||wt.oMatchesSelector;xt=function(t){return function(){return Mt.call(this,t)}}}}var At=xt,Tt=function(t){return new Array(t.length)};function Nt(t,n){this.ownerDocument=t.ownerDocument,this.namespaceURI=t.namespaceURI,this._next=null,this._parent=t,this.__data__=n}Nt.prototype={constructor:Nt,appendChild:function(t){return this._parent.insertBefore(t,this._next)},insertBefore:function(t,n){return this._parent.insertBefore(t,n)},querySelector:function(t){return this._parent.querySelector(t)},querySelectorAll:function(t){return this._parent.querySelectorAll(t)}};var St="$";function Et(t,n,e,r,i,u){for(var o,a=0,f=n.length,c=u.length;a<c;++a)(o=n[a])?(o.__data__=u[a],r[a]=o):e[a]=new Nt(t,u[a]);for(;a<f;++a)(o=n[a])&&(i[a]=o)}function kt(t,n,e,r,i,u,o){var a,f,c,s={},l=n.length,h=u.length,d=new Array(l);for(a=0;a<l;++a)(f=n[a])&&(d[a]=c=St+o.call(f,f.__data__,a,n),c in s?i[a]=f:s[c]=f);for(a=0;a<h;++a)(f=s[c=St+o.call(t,u[a],a,u)])?(r[a]=f,f.__data__=u[a],s[c]=null):e[a]=new Nt(t,u[a]);for(a=0;a<l;++a)(f=n[a])&&s[d[a]]===f&&(i[a]=f)}function Ct(t,n){return t<n?-1:t>n?1:t>=n?0:NaN}var Pt=function(t){return t.ownerDocument&&t.ownerDocument.defaultView||t.document&&t||t.defaultView};function zt(t,n){return t.style.getPropertyValue(n)||Pt(t).getComputedStyle(t,null).getPropertyValue(n)}function Rt(t){return t.trim().split(/^|\s+/)}function Lt(t){return t.classList||new Dt(t)}function Dt(t){this._node=t,this._names=Rt(t.getAttribute("class")||"")}function Ut(t,n){for(var e=Lt(t),r=-1,i=n.length;++r<i;)e.add(n[r])}function qt(t,n){for(var e=Lt(t),r=-1,i=n.length;++r<i;)e.remove(n[r])}Dt.prototype={add:function(t){this._names.indexOf(t)<0&&(this._names.push(t),this._node.setAttribute("class",this._names.join(" ")))},remove:function(t){var n=this._names.indexOf(t);n>=0&&(this._names.splice(n,1),this._node.setAttribute("class",this._names.join(" ")))},contains:function(t){return this._names.indexOf(t)>=0}};function Ot(){this.textContent=""}function Yt(){this.innerHTML=""}function Bt(){this.nextSibling&&this.parentNode.appendChild(this)}function It(){this.previousSibling&&this.parentNode.insertBefore(this,this.parentNode.firstChild)}function Ft(){return null}function Ht(){var t=this.parentNode;t&&t.removeChild(this)}function jt(){return this.parentNode.insertBefore(this.cloneNode(!1),this.nextSibling)}function Xt(){return this.parentNode.insertBefore(this.cloneNode(!0),this.nextSibling)}var Gt={},Vt=null;"undefined"!=typeof document&&("onmouseenter"in document.documentElement||(Gt={mouseenter:"mouseover",mouseleave:"mouseout"}));function $t(t,n,e){return t=Wt(t,n,e),function(n){var e=n.relatedTarget;e&&(e===this||8&e.compareDocumentPosition(this))||t.call(this,n)}}function Wt(t,n,e){return function(r){var i=Vt;Vt=r;try{t.call(this,this.__data__,n,e)}finally{Vt=i}}}function Zt(t){return function(){var n=this.__on;if(n){for(var e,r=0,i=-1,u=n.length;r<u;++r)e=n[r],t.type&&e.type!==t.type||e.name!==t.name?n[++i]=e:this.removeEventListener(e.type,e.listener,e.capture);++i?n.length=i:delete this.__on}}}function Qt(t,n,e){var r=Gt.hasOwnProperty(t.type)?$t:Wt;return function(i,u,o){var a,f=this.__on,c=r(n,u,o);if(f)for(var s=0,l=f.length;s<l;++s)if((a=f[s]).type===t.type&&a.name===t.name)return this.removeEventListener(a.type,a.listener,a.capture),this.addEventListener(a.type,a.listener=c,a.capture=e),void(a.value=n);this.addEventListener(t.type,c,e),a={type:t.type,name:t.name,value:n,listener:c,capture:e},f?f.push(a):this.__on=[a]}}function Jt(t,n,e,r){var i=Vt;t.sourceEvent=Vt,Vt=t;try{return n.apply(e,r)}finally{Vt=i}}function Kt(t,n,e){var r=Pt(t),i=r.CustomEvent;"function"==typeof i?i=new i(n,e):(i=r.document.createEvent("Event"),e?(i.initEvent(n,e.bubbles,e.cancelable),i.detail=e.detail):i.initEvent(n,!1,!1)),t.dispatchEvent(i)}var tn=[null];function nn(t,n){this._groups=t,this._parents=n}function en(){return new nn([[document.documentElement]],tn)}nn.prototype=en.prototype={constructor:nn,select:function(t){"function"!=typeof t&&(t=_t(t));for(var n=this._groups,e=n.length,r=new Array(e),i=0;i<e;++i)for(var u,o,a=n[i],f=a.length,c=r[i]=new Array(f),s=0;s<f;++s)(u=a[s])&&(o=t.call(u,u.__data__,s,a))&&("__data__"in u&&(o.__data__=u.__data__),c[s]=o);return new nn(r,this._parents)},selectAll:function(t){"function"!=typeof t&&(t=mt(t));for(var n=this._groups,e=n.length,r=[],i=[],u=0;u<e;++u)for(var o,a=n[u],f=a.length,c=0;c<f;++c)(o=a[c])&&(r.push(t.call(o,o.__data__,c,a)),i.push(o));return new nn(r,i)},filter:function(t){"function"!=typeof t&&(t=At(t));for(var n=this._groups,e=n.length,r=new Array(e),i=0;i<e;++i)for(var u,o=n[i],a=o.length,f=r[i]=[],c=0;c<a;++c)(u=o[c])&&t.call(u,u.__data__,c,o)&&f.push(u);return new nn(r,this._parents)},data:function(t,n){if(!t)return d=new Array(this.size()),c=-1,this.each(function(t){d[++c]=t}),d;var e=n?kt:Et,r=this._parents,i=this._groups;"function"!=typeof t&&(t=function(t){return function(){return t}}(t));for(var u=i.length,o=new Array(u),a=new Array(u),f=new Array(u),c=0;c<u;++c){var s=r[c],l=i[c],h=l.length,d=t.call(s,s&&s.__data__,c,r),p=d.length,v=a[c]=new Array(p),g=o[c]=new Array(p);e(s,l,v,g,f[c]=new Array(h),d,n);for(var y,_,b=0,m=0;b<p;++b)if(y=v[b]){for(b>=m&&(m=b+1);!(_=g[m])&&++m<p;);y._next=_||null}}return(o=new nn(o,r))._enter=a,o._exit=f,o},enter:function(){return new nn(this._enter||this._groups.map(Tt),this._parents)},exit:function(){return new nn(this._exit||this._groups.map(Tt),this._parents)},merge:function(t){for(var n=this._groups,e=t._groups,r=n.length,i=e.length,u=Math.min(r,i),o=new Array(r),a=0;a<u;++a)for(var f,c=n[a],s=e[a],l=c.length,h=o[a]=new Array(l),d=0;d<l;++d)(f=c[d]||s[d])&&(h[d]=f);for(;a<r;++a)o[a]=n[a];return new nn(o,this._parents)},order:function(){for(var t=this._groups,n=-1,e=t.length;++n<e;)for(var r,i=t[n],u=i.length-1,o=i[u];--u>=0;)(r=i[u])&&(o&&o!==r.nextSibling&&o.parentNode.insertBefore(r,o),o=r);return this},sort:function(t){function n(n,e){return n&&e?t(n.__data__,e.__data__):!n-!e}t||(t=Ct);for(var e=this._groups,r=e.length,i=new Array(r),u=0;u<r;++u){for(var o,a=e[u],f=a.length,c=i[u]=new Array(f),s=0;s<f;++s)(o=a[s])&&(c[s]=o);c.sort(n)}return new nn(i,this._parents).order()},call:function(){var t=arguments[0];return arguments[0]=this,t.apply(null,arguments),this},nodes:function(){var t=new Array(this.size()),n=-1;return this.each(function(){t[++n]=this}),t},node:function(){for(var t=this._groups,n=0,e=t.length;n<e;++n)for(var r=t[n],i=0,u=r.length;i<u;++i){var o=r[i];if(o)return o}return null},size:function(){var t=0;return this.each(function(){++t}),t},empty:function(){return!this.node()},each:function(t){for(var n=this._groups,e=0,r=n.length;e<r;++e)for(var i,u=n[e],o=0,a=u.length;o<a;++o)(i=u[o])&&t.call(i,i.__data__,o,u);return this},attr:function(t,n){var e=vt(t);if(arguments.length<2){var r=this.node();return e.local?r.getAttributeNS(e.space,e.local):r.getAttribute(e)}return this.each((null==n?e.local?function(t){return function(){this.removeAttributeNS(t.space,t.local)}}:function(t){return function(){this.removeAttribute(t)}}:"function"==typeof n?e.local?function(t,n){return function(){var e=n.apply(this,arguments);null==e?this.removeAttributeNS(t.space,t.local):this.setAttributeNS(t.space,t.local,e)}}:function(t,n){return function(){var e=n.apply(this,arguments);null==e?this.removeAttribute(t):this.setAttribute(t,e)}}:e.local?function(t,n){return function(){this.setAttributeNS(t.space,t.local,n)}}:function(t,n){return function(){this.setAttribute(t,n)}})(e,n))},style:function(t,n,e){return arguments.length>1?this.each((null==n?function(t){return function(){this.style.removeProperty(t)}}:"function"==typeof n?function(t,n,e){return function(){var r=n.apply(this,arguments);null==r?this.style.removeProperty(t):this.style.setProperty(t,r,e)}}:function(t,n,e){return function(){this.style.setProperty(t,n,e)}})(t,n,null==e?"":e)):zt(this.node(),t)},property:function(t,n){return arguments.length>1?this.each((null==n?function(t){return function(){delete this[t]}}:"function"==typeof n?function(t,n){return function(){var e=n.apply(this,arguments);null==e?delete this[t]:this[t]=e}}:function(t,n){return function(){this[t]=n}})(t,n)):this.node()[t]},classed:function(t,n){var e=Rt(t+"");if(arguments.length<2){for(var r=Lt(this.node()),i=-1,u=e.length;++i<u;)if(!r.contains(e[i]))return!1;return!0}return this.each(("function"==typeof n?function(t,n){return function(){(n.apply(this,arguments)?Ut:qt)(this,t)}}:n?function(t){return function(){Ut(this,t)}}:function(t){return function(){qt(this,t)}})(e,n))},text:function(t){return arguments.length?this.each(null==t?Ot:("function"==typeof t?function(t){return function(){var n=t.apply(this,arguments);this.textContent=null==n?"":n}}:function(t){return function(){this.textContent=t}})(t)):this.node().textContent},html:function(t){return arguments.length?this.each(null==t?Yt:("function"==typeof t?function(t){return function(){var n=t.apply(this,arguments);this.innerHTML=null==n?"":n}}:function(t){return function(){this.innerHTML=t}})(t)):this.node().innerHTML},raise:function(){return this.each(Bt)},lower:function(){return this.each(It)},append:function(t){var n="function"==typeof t?t:gt(t);return this.select(function(){return this.appendChild(n.apply(this,arguments))})},insert:function(t,n){var e="function"==typeof t?t:gt(t),r=null==n?Ft:"function"==typeof n?n:_t(n);return this.select(function(){return this.insertBefore(e.apply(this,arguments),r.apply(this,arguments)||null)})},remove:function(){return this.each(Ht)},clone:function(t){return this.select(t?Xt:jt)},datum:function(t){return arguments.length?this.property("__data__",t):this.node().__data__},on:function(t,n,e){var r,i,u=function(t){return t.trim().split(/^|\s+/).map(function(t){var n="",e=t.indexOf(".");return e>=0&&(n=t.slice(e+1),t=t.slice(0,e)),{type:t,name:n}})}(t+""),o=u.length;if(!(arguments.length<2)){for(a=n?Qt:Zt,null==e&&(e=!1),r=0;r<o;++r)this.each(a(u[r],n,e));return this}var a=this.node().__on;if(a)for(var f,c=0,s=a.length;c<s;++c)for(r=0,f=a[c];r<o;++r)if((i=u[r]).type===f.type&&i.name===f.name)return f.value},dispatch:function(t,n){return this.each(("function"==typeof n?function(t,n){return function(){return Kt(this,t,n.apply(this,arguments))}}:function(t,n){return function(){return Kt(this,t,n)}})(t,n))}};var rn=en,un=function(t){return"string"==typeof t?new nn([[document.querySelector(t)]],[document.documentElement]):new nn([[t]],tn)},on=function(t){return un(gt(t).call(document.documentElement))},an=0;function fn(){return new cn}function cn(){this._="@"+(++an).toString(36)}cn.prototype=fn.prototype={constructor:cn,get:function(t){for(var n=this._;!(n in t);)if(!(t=t.parentNode))return;return t[n]},set:function(t,n){return t[this._]=n},remove:function(t){return this._ in t&&delete t[this._]},toString:function(){return this._}};var sn=function(){for(var t,n=Vt;t=n.sourceEvent;)n=t;return n},ln=function(t,n){var e=t.ownerSVGElement||t;if(e.createSVGPoint){var r=e.createSVGPoint();return r.x=n.clientX,r.y=n.clientY,[(r=r.matrixTransform(t.getScreenCTM().inverse())).x,r.y]}var i=t.getBoundingClientRect();return[n.clientX-i.left-t.clientLeft,n.clientY-i.top-t.clientTop]},hn=function(t){var n=sn();return n.changedTouches&&(n=n.changedTouches[0]),ln(t,n)},dn=function(t){return"string"==typeof t?new nn([document.querySelectorAll(t)],[document.documentElement]):new nn([null==t?[]:t],tn)},pn=function(t,n,e){arguments.length<3&&(e=n,n=sn().changedTouches);for(var r,i=0,u=n?n.length:0;i<u;++i)if((r=n[i]).identifier===e)return ln(t,r);return null},vn=function(t,n){null==n&&(n=sn().touches);for(var e=0,r=n?n.length:0,i=new Array(r);e<r;++e)i[e]=ln(t,n[e]);return i};function gn(){Vt.stopImmediatePropagation()}var yn=function(){Vt.preventDefault(),Vt.stopImmediatePropagation()},_n=function(t){var n=t.document.documentElement,e=un(t).on("dragstart.drag",yn,!0);"onselectstart"in n?e.on("selectstart.drag",yn,!0):(n.__noselect=n.style.MozUserSelect,n.style.MozUserSelect="none")};function bn(t,n){var e=t.document.documentElement,r=un(t).on("dragstart.drag",null);n&&(r.on("click.drag",yn,!0),setTimeout(function(){r.on("click.drag",null)},0)),"onselectstart"in e?r.on("selectstart.drag",null):(e.style.MozUserSelect=e.__noselect,delete e.__noselect)}var mn=function(t){return function(){return t}};function xn(t,n,e,r,i,u,o,a,f,c){this.target=t,this.type=n,this.subject=e,this.identifier=r,this.active=i,this.x=u,this.y=o,this.dx=a,this.dy=f,this._=c}function wn(){return!Vt.button}function Mn(){return this.parentNode}function An(t){return null==t?{x:Vt.x,y:Vt.y}:t}function Tn(){return"ontouchstart"in this}xn.prototype.on=function(){var t=this._.on.apply(this._,arguments);return t===this._?this:t};var Nn=function(){var t,n,e,r,i=wn,u=Mn,o=An,a=Tn,f={},c=ht("start","drag","end"),s=0,l=0;function h(t){t.on("mousedown.drag",d).filter(a).on("touchstart.drag",g).on("touchmove.drag",y).on("touchend.drag touchcancel.drag",_).style("touch-action","none").style("-webkit-tap-highlight-color","rgba(0,0,0,0)")}function d(){if(!r&&i.apply(this,arguments)){var o=b("mouse",u.apply(this,arguments),hn,this,arguments);o&&(un(Vt.view).on("mousemove.drag",p,!0).on("mouseup.drag",v,!0),_n(Vt.view),gn(),e=!1,t=Vt.clientX,n=Vt.clientY,o("start"))}}function p(){if(yn(),!e){var r=Vt.clientX-t,i=Vt.clientY-n;e=r*r+i*i>l}f.mouse("drag")}function v(){un(Vt.view).on("mousemove.drag mouseup.drag",null),bn(Vt.view,e),yn(),f.mouse("end")}function g(){if(i.apply(this,arguments)){var t,n,e=Vt.changedTouches,r=u.apply(this,arguments),o=e.length;for(t=0;t<o;++t)(n=b(e[t].identifier,r,pn,this,arguments))&&(gn(),n("start"))}}function y(){var t,n,e=Vt.changedTouches,r=e.length;for(t=0;t<r;++t)(n=f[e[t].identifier])&&(yn(),n("drag"))}function _(){var t,n,e=Vt.changedTouches,i=e.length;for(r&&clearTimeout(r),r=setTimeout(function(){r=null},500),t=0;t<i;++t)(n=f[e[t].identifier])&&(gn(),n("end"))}function b(t,n,e,r,i){var u,a,l,d=e(n,t),p=c.copy();if(Jt(new xn(h,"beforestart",u,t,s,d[0],d[1],0,0,p),function(){return null!=(Vt.subject=u=o.apply(r,i))&&(a=u.x-d[0]||0,l=u.y-d[1]||0,!0)}))return function o(c){var v,g=d;switch(c){case"start":f[t]=o,v=s++;break;case"end":delete f[t],--s;case"drag":d=e(n,t),v=s}Jt(new xn(h,c,u,t,v,d[0]+a,d[1]+l,d[0]-g[0],d[1]-g[1],p),p.apply,p,[c,r,i])}}return h.filter=function(t){return arguments.length?(i="function"==typeof t?t:mn(!!t),h):i},h.container=function(t){return arguments.length?(u="function"==typeof t?t:mn(t),h):u},h.subject=function(t){return arguments.length?(o="function"==typeof t?t:mn(t),h):o},h.touchable=function(t){return arguments.length?(a="function"==typeof t?t:mn(!!t),h):a},h.on=function(){var t=c.on.apply(c,arguments);return t===c?h:t},h.clickDistance=function(t){return arguments.length?(l=(t=+t)*t,h):Math.sqrt(l)},h},Sn=function(t,n,e){t.prototype=n.prototype=e,e.constructor=t};function En(t,n){var e=Object.create(t.prototype);for(var r in n)e[r]=n[r];return e}function kn(){}var Cn="\\s*([+-]?\\d+)\\s*",Pn="\\s*([+-]?\\d*\\.?\\d+(?:[eE][+-]?\\d+)?)\\s*",zn="\\s*([+-]?\\d*\\.?\\d+(?:[eE][+-]?\\d+)?)%\\s*",Rn=/^#([0-9a-f]{3})$/,Ln=/^#([0-9a-f]{6})$/,Dn=new RegExp("^rgb\\("+[Cn,Cn,Cn]+"\\)$"),Un=new RegExp("^rgb\\("+[zn,zn,zn]+"\\)$"),qn=new RegExp("^rgba\\("+[Cn,Cn,Cn,Pn]+"\\)$"),On=new RegExp("^rgba\\("+[zn,zn,zn,Pn]+"\\)$"),Yn=new RegExp("^hsl\\("+[Pn,zn,zn]+"\\)$"),Bn=new RegExp("^hsla\\("+[Pn,zn,zn,Pn]+"\\)$"),In={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074};function Fn(t){var n;return t=(t+"").trim().toLowerCase(),(n=Rn.exec(t))?new Vn((n=parseInt(n[1],16))>>8&15|n>>4&240,n>>4&15|240&n,(15&n)<<4|15&n,1):(n=Ln.exec(t))?Hn(parseInt(n[1],16)):(n=Dn.exec(t))?new Vn(n[1],n[2],n[3],1):(n=Un.exec(t))?new Vn(255*n[1]/100,255*n[2]/100,255*n[3]/100,1):(n=qn.exec(t))?jn(n[1],n[2],n[3],n[4]):(n=On.exec(t))?jn(255*n[1]/100,255*n[2]/100,255*n[3]/100,n[4]):(n=Yn.exec(t))?Wn(n[1],n[2]/100,n[3]/100,1):(n=Bn.exec(t))?Wn(n[1],n[2]/100,n[3]/100,n[4]):In.hasOwnProperty(t)?Hn(In[t]):"transparent"===t?new Vn(NaN,NaN,NaN,0):null}function Hn(t){return new Vn(t>>16&255,t>>8&255,255&t,1)}function jn(t,n,e,r){return r<=0&&(t=n=e=NaN),new Vn(t,n,e,r)}function Xn(t){return t instanceof kn||(t=Fn(t)),t?new Vn((t=t.rgb()).r,t.g,t.b,t.opacity):new Vn}function Gn(t,n,e,r){return 1===arguments.length?Xn(t):new Vn(t,n,e,null==r?1:r)}function Vn(t,n,e,r){this.r=+t,this.g=+n,this.b=+e,this.opacity=+r}function $n(t){return((t=Math.max(0,Math.min(255,Math.round(t)||0)))<16?"0":"")+t.toString(16)}function Wn(t,n,e,r){return r<=0?t=n=e=NaN:e<=0||e>=1?t=n=NaN:n<=0&&(t=NaN),new Qn(t,n,e,r)}function Zn(t,n,e,r){return 1===arguments.length?function(t){if(t instanceof Qn)return new Qn(t.h,t.s,t.l,t.opacity);if(t instanceof kn||(t=Fn(t)),!t)return new Qn;if(t instanceof Qn)return t;var n=(t=t.rgb()).r/255,e=t.g/255,r=t.b/255,i=Math.min(n,e,r),u=Math.max(n,e,r),o=NaN,a=u-i,f=(u+i)/2;return a?(o=n===u?(e-r)/a+6*(e<r):e===u?(r-n)/a+2:(n-e)/a+4,a/=f<.5?u+i:2-u-i,o*=60):a=f>0&&f<1?0:o,new Qn(o,a,f,t.opacity)}(t):new Qn(t,n,e,null==r?1:r)}function Qn(t,n,e,r){this.h=+t,this.s=+n,this.l=+e,this.opacity=+r}function Jn(t,n,e){return 255*(t<60?n+(e-n)*t/60:t<180?e:t<240?n+(e-n)*(240-t)/60:n)}Sn(kn,Fn,{displayable:function(){return this.rgb().displayable()},hex:function(){return this.rgb().hex()},toString:function(){return this.rgb()+""}}),Sn(Vn,Gn,En(kn,{brighter:function(t){return t=null==t?1/.7:Math.pow(1/.7,t),new Vn(this.r*t,this.g*t,this.b*t,this.opacity)},darker:function(t){return t=null==t?.7:Math.pow(.7,t),new Vn(this.r*t,this.g*t,this.b*t,this.opacity)},rgb:function(){return this},displayable:function(){return 0<=this.r&&this.r<=255&&0<=this.g&&this.g<=255&&0<=this.b&&this.b<=255&&0<=this.opacity&&this.opacity<=1},hex:function(){return"#"+$n(this.r)+$n(this.g)+$n(this.b)},toString:function(){var t=this.opacity;return(1===(t=isNaN(t)?1:Math.max(0,Math.min(1,t)))?"rgb(":"rgba(")+Math.max(0,Math.min(255,Math.round(this.r)||0))+", "+Math.max(0,Math.min(255,Math.round(this.g)||0))+", "+Math.max(0,Math.min(255,Math.round(this.b)||0))+(1===t?")":", "+t+")")}})),Sn(Qn,Zn,En(kn,{brighter:function(t){return t=null==t?1/.7:Math.pow(1/.7,t),new Qn(this.h,this.s,this.l*t,this.opacity)},darker:function(t){return t=null==t?.7:Math.pow(.7,t),new Qn(this.h,this.s,this.l*t,this.opacity)},rgb:function(){var t=this.h%360+360*(this.h<0),n=isNaN(t)||isNaN(this.s)?0:this.s,e=this.l,r=e+(e<.5?e:1-e)*n,i=2*e-r;return new Vn(Jn(t>=240?t-240:t+120,i,r),Jn(t,i,r),Jn(t<120?t+240:t-120,i,r),this.opacity)},displayable:function(){return(0<=this.s&&this.s<=1||isNaN(this.s))&&0<=this.l&&this.l<=1&&0<=this.opacity&&this.opacity<=1}}));var Kn=Math.PI/180,te=180/Math.PI,ne=.96422,ee=1,re=.82521,ie=4/29,ue=6/29,oe=3*ue*ue,ae=ue*ue*ue;function fe(t){if(t instanceof le)return new le(t.l,t.a,t.b,t.opacity);if(t instanceof be){if(isNaN(t.h))return new le(t.l,0,0,t.opacity);var n=t.h*Kn;return new le(t.l,Math.cos(n)*t.c,Math.sin(n)*t.c,t.opacity)}t instanceof Vn||(t=Xn(t));var e,r,i=ve(t.r),u=ve(t.g),o=ve(t.b),a=he((.2225045*i+.7168786*u+.0606169*o)/ee);return i===u&&u===o?e=r=a:(e=he((.4360747*i+.3850649*u+.1430804*o)/ne),r=he((.0139322*i+.0971045*u+.7141733*o)/re)),new le(116*a-16,500*(e-a),200*(a-r),t.opacity)}function ce(t,n){return new le(t,0,0,null==n?1:n)}function se(t,n,e,r){return 1===arguments.length?fe(t):new le(t,n,e,null==r?1:r)}function le(t,n,e,r){this.l=+t,this.a=+n,this.b=+e,this.opacity=+r}function he(t){return t>ae?Math.pow(t,1/3):t/oe+ie}function de(t){return t>ue?t*t*t:oe*(t-ie)}function pe(t){return 255*(t<=.0031308?12.92*t:1.055*Math.pow(t,1/2.4)-.055)}function ve(t){return(t/=255)<=.04045?t/12.92:Math.pow((t+.055)/1.055,2.4)}function ge(t){if(t instanceof be)return new be(t.h,t.c,t.l,t.opacity);if(t instanceof le||(t=fe(t)),0===t.a&&0===t.b)return new be(NaN,0,t.l,t.opacity);var n=Math.atan2(t.b,t.a)*te;return new be(n<0?n+360:n,Math.sqrt(t.a*t.a+t.b*t.b),t.l,t.opacity)}function ye(t,n,e,r){return 1===arguments.length?ge(t):new be(e,n,t,null==r?1:r)}function _e(t,n,e,r){return 1===arguments.length?ge(t):new be(t,n,e,null==r?1:r)}function be(t,n,e,r){this.h=+t,this.c=+n,this.l=+e,this.opacity=+r}Sn(le,se,En(kn,{brighter:function(t){return new le(this.l+18*(null==t?1:t),this.a,this.b,this.opacity)},darker:function(t){return new le(this.l-18*(null==t?1:t),this.a,this.b,this.opacity)},rgb:function(){var t=(this.l+16)/116,n=isNaN(this.a)?t:t+this.a/500,e=isNaN(this.b)?t:t-this.b/200;return new Vn(pe(3.1338561*(n=ne*de(n))-1.6168667*(t=ee*de(t))-.4906146*(e=re*de(e))),pe(-.9787684*n+1.9161415*t+.033454*e),pe(.0719453*n-.2289914*t+1.4052427*e),this.opacity)}})),Sn(be,_e,En(kn,{brighter:function(t){return new be(this.h,this.c,this.l+18*(null==t?1:t),this.opacity)},darker:function(t){return new be(this.h,this.c,this.l-18*(null==t?1:t),this.opacity)},rgb:function(){return fe(this).rgb()}}));var me=-.29227,xe=-.90649,we=1.97294,Me=we*xe,Ae=1.78277*we,Te=1.78277*me- -.14861*xe;function Ne(t,n,e,r){return 1===arguments.length?function(t){if(t instanceof Se)return new Se(t.h,t.s,t.l,t.opacity);t instanceof Vn||(t=Xn(t));var n=t.r/255,e=t.g/255,r=t.b/255,i=(Te*r+Me*n-Ae*e)/(Te+Me-Ae),u=r-i,o=(we*(e-i)-me*u)/xe,a=Math.sqrt(o*o+u*u)/(we*i*(1-i)),f=a?Math.atan2(o,u)*te-120:NaN;return new Se(f<0?f+360:f,a,i,t.opacity)}(t):new Se(t,n,e,null==r?1:r)}function Se(t,n,e,r){this.h=+t,this.s=+n,this.l=+e,this.opacity=+r}function Ee(t,n,e,r,i){var u=t*t,o=u*t;return((1-3*t+3*u-o)*n+(4-6*u+3*o)*e+(1+3*t+3*u-3*o)*r+o*i)/6}Sn(Se,Ne,En(kn,{brighter:function(t){return t=null==t?1/.7:Math.pow(1/.7,t),new Se(this.h,this.s,this.l*t,this.opacity)},darker:function(t){return t=null==t?.7:Math.pow(.7,t),new Se(this.h,this.s,this.l*t,this.opacity)},rgb:function(){var t=isNaN(this.h)?0:(this.h+120)*Kn,n=+this.l,e=isNaN(this.s)?0:this.s*n*(1-n),r=Math.cos(t),i=Math.sin(t);return new Vn(255*(n+e*(-.14861*r+1.78277*i)),255*(n+e*(me*r+xe*i)),255*(n+e*(we*r)),this.opacity)}}));var ke=function(t){var n=t.length-1;return function(e){var r=e<=0?e=0:e>=1?(e=1,n-1):Math.floor(e*n),i=t[r],u=t[r+1],o=r>0?t[r-1]:2*i-u,a=r<n-1?t[r+2]:2*u-i;return Ee((e-r/n)*n,o,i,u,a)}},Ce=function(t){var n=t.length;return function(e){var r=Math.floor(((e%=1)<0?++e:e)*n),i=t[(r+n-1)%n],u=t[r%n],o=t[(r+1)%n],a=t[(r+2)%n];return Ee((e-r/n)*n,i,u,o,a)}},Pe=function(t){return function(){return t}};function ze(t,n){return function(e){return t+e*n}}function Re(t,n){var e=n-t;return e?ze(t,e>180||e<-180?e-360*Math.round(e/360):e):Pe(isNaN(t)?n:t)}function Le(t){return 1==(t=+t)?De:function(n,e){return e-n?function(t,n,e){return t=Math.pow(t,e),n=Math.pow(n,e)-t,e=1/e,function(r){return Math.pow(t+r*n,e)}}(n,e,t):Pe(isNaN(n)?e:n)}}function De(t,n){var e=n-t;return e?ze(t,e):Pe(isNaN(t)?n:t)}var Ue=function t(n){var e=Le(n);function r(t,n){var r=e((t=Gn(t)).r,(n=Gn(n)).r),i=e(t.g,n.g),u=e(t.b,n.b),o=De(t.opacity,n.opacity);return function(n){return t.r=r(n),t.g=i(n),t.b=u(n),t.opacity=o(n),t+""}}return r.gamma=t,r}(1);function qe(t){return function(n){var e,r,i=n.length,u=new Array(i),o=new Array(i),a=new Array(i);for(e=0;e<i;++e)r=Gn(n[e]),u[e]=r.r||0,o[e]=r.g||0,a[e]=r.b||0;return u=t(u),o=t(o),a=t(a),r.opacity=1,function(t){return r.r=u(t),r.g=o(t),r.b=a(t),r+""}}}var Oe=qe(ke),Ye=qe(Ce),Be=function(t,n){var e,r=n?n.length:0,i=t?Math.min(r,t.length):0,u=new Array(i),o=new Array(r);for(e=0;e<i;++e)u[e]=Qe(t[e],n[e]);for(;e<r;++e)o[e]=n[e];return function(t){for(e=0;e<i;++e)o[e]=u[e](t);return o}},Ie=function(t,n){var e=new Date;return n-=t=+t,function(r){return e.setTime(t+n*r),e}},Fe=function(t,n){return n-=t=+t,function(e){return t+n*e}},He=function(t,n){var e,r={},i={};for(e in null!==t&&"object"==typeof t||(t={}),null!==n&&"object"==typeof n||(n={}),n)e in t?r[e]=Qe(t[e],n[e]):i[e]=n[e];return function(t){for(e in r)i[e]=r[e](t);return i}},je=/[-+]?(?:\d+\.?\d*|\.?\d+)(?:[eE][-+]?\d+)?/g,Xe=new RegExp(je.source,"g");var Ge,Ve,$e,We,Ze=function(t,n){var e,r,i,u=je.lastIndex=Xe.lastIndex=0,o=-1,a=[],f=[];for(t+="",n+="";(e=je.exec(t))&&(r=Xe.exec(n));)(i=r.index)>u&&(i=n.slice(u,i),a[o]?a[o]+=i:a[++o]=i),(e=e[0])===(r=r[0])?a[o]?a[o]+=r:a[++o]=r:(a[++o]=null,f.push({i:o,x:Fe(e,r)})),u=Xe.lastIndex;return u<n.length&&(i=n.slice(u),a[o]?a[o]+=i:a[++o]=i),a.length<2?f[0]?function(t){return function(n){return t(n)+""}}(f[0].x):function(t){return function(){return t}}(n):(n=f.length,function(t){for(var e,r=0;r<n;++r)a[(e=f[r]).i]=e.x(t);return a.join("")})},Qe=function(t,n){var e,r=typeof n;return null==n||"boolean"===r?Pe(n):("number"===r?Fe:"string"===r?(e=Fn(n))?(n=e,Ue):Ze:n instanceof Fn?Ue:n instanceof Date?Ie:Array.isArray(n)?Be:"function"!=typeof n.valueOf&&"function"!=typeof n.toString||isNaN(n)?He:Fe)(t,n)},Je=function(t){var n=t.length;return function(e){return t[Math.max(0,Math.min(n-1,Math.floor(e*n)))]}},Ke=function(t,n){var e=Re(+t,+n);return function(t){var n=e(t);return n-360*Math.floor(n/360)}},tr=function(t,n){return n-=t=+t,function(e){return Math.round(t+n*e)}},nr=180/Math.PI,er={translateX:0,translateY:0,rotate:0,skewX:0,scaleX:1,scaleY:1},rr=function(t,n,e,r,i,u){var o,a,f;return(o=Math.sqrt(t*t+n*n))&&(t/=o,n/=o),(f=t*e+n*r)&&(e-=t*f,r-=n*f),(a=Math.sqrt(e*e+r*r))&&(e/=a,r/=a,f/=a),t*r<n*e&&(t=-t,n=-n,f=-f,o=-o),{translateX:i,translateY:u,rotate:Math.atan2(n,t)*nr,skewX:Math.atan(f)*nr,scaleX:o,scaleY:a}};function ir(t,n,e,r){function i(t){return t.length?t.pop()+" ":""}return function(u,o){var a=[],f=[];return u=t(u),o=t(o),function(t,r,i,u,o,a){if(t!==i||r!==u){var f=o.push("translate(",null,n,null,e);a.push({i:f-4,x:Fe(t,i)},{i:f-2,x:Fe(r,u)})}else(i||u)&&o.push("translate("+i+n+u+e)}(u.translateX,u.translateY,o.translateX,o.translateY,a,f),function(t,n,e,u){t!==n?(t-n>180?n+=360:n-t>180&&(t+=360),u.push({i:e.push(i(e)+"rotate(",null,r)-2,x:Fe(t,n)})):n&&e.push(i(e)+"rotate("+n+r)}(u.rotate,o.rotate,a,f),function(t,n,e,u){t!==n?u.push({i:e.push(i(e)+"skewX(",null,r)-2,x:Fe(t,n)}):n&&e.push(i(e)+"skewX("+n+r)}(u.skewX,o.skewX,a,f),function(t,n,e,r,u,o){if(t!==e||n!==r){var a=u.push(i(u)+"scale(",null,",",null,")");o.push({i:a-4,x:Fe(t,e)},{i:a-2,x:Fe(n,r)})}else 1===e&&1===r||u.push(i(u)+"scale("+e+","+r+")")}(u.scaleX,u.scaleY,o.scaleX,o.scaleY,a,f),u=o=null,function(t){for(var n,e=-1,r=f.length;++e<r;)a[(n=f[e]).i]=n.x(t);return a.join("")}}}var ur=ir(function(t){return"none"===t?er:(Ge||(Ge=document.createElement("DIV"),Ve=document.documentElement,$e=document.defaultView),Ge.style.transform=t,t=$e.getComputedStyle(Ve.appendChild(Ge),null).getPropertyValue("transform"),Ve.removeChild(Ge),t=t.slice(7,-1).split(","),rr(+t[0],+t[1],+t[2],+t[3],+t[4],+t[5]))},"px, ","px)","deg)"),or=ir(function(t){return null==t?er:(We||(We=document.createElementNS("http://www.w3.org/2000/svg","g")),We.setAttribute("transform",t),(t=We.transform.baseVal.consolidate())?(t=t.matrix,rr(t.a,t.b,t.c,t.d,t.e,t.f)):er)},", ",")",")"),ar=Math.SQRT2;function fr(t){return((t=Math.exp(t))+1/t)/2}var cr=function(t,n){var e,r,i=t[0],u=t[1],o=t[2],a=n[0],f=n[1],c=n[2],s=a-i,l=f-u,h=s*s+l*l;if(h<1e-12)r=Math.log(c/o)/ar,e=function(t){return[i+t*s,u+t*l,o*Math.exp(ar*t*r)]};else{var d=Math.sqrt(h),p=(c*c-o*o+4*h)/(2*o*2*d),v=(c*c-o*o-4*h)/(2*c*2*d),g=Math.log(Math.sqrt(p*p+1)-p),y=Math.log(Math.sqrt(v*v+1)-v);r=(y-g)/ar,e=function(t){var n=t*r,e=fr(g),a=o/(2*d)*(e*function(t){return((t=Math.exp(2*t))-1)/(t+1)}(ar*n+g)-function(t){return((t=Math.exp(t))-1/t)/2}(g));return[i+a*s,u+a*l,o*e/fr(ar*n+g)]}}return e.duration=1e3*r,e};function sr(t){return function(n,e){var r=t((n=Zn(n)).h,(e=Zn(e)).h),i=De(n.s,e.s),u=De(n.l,e.l),o=De(n.opacity,e.opacity);return function(t){return n.h=r(t),n.s=i(t),n.l=u(t),n.opacity=o(t),n+""}}}var lr=sr(Re),hr=sr(De);function dr(t,n){var e=De((t=se(t)).l,(n=se(n)).l),r=De(t.a,n.a),i=De(t.b,n.b),u=De(t.opacity,n.opacity);return function(n){return t.l=e(n),t.a=r(n),t.b=i(n),t.opacity=u(n),t+""}}function pr(t){return function(n,e){var r=t((n=_e(n)).h,(e=_e(e)).h),i=De(n.c,e.c),u=De(n.l,e.l),o=De(n.opacity,e.opacity);return function(t){return n.h=r(t),n.c=i(t),n.l=u(t),n.opacity=o(t),n+""}}}var vr=pr(Re),gr=pr(De);function yr(t){return function n(e){function r(n,r){var i=t((n=Ne(n)).h,(r=Ne(r)).h),u=De(n.s,r.s),o=De(n.l,r.l),a=De(n.opacity,r.opacity);return function(t){return n.h=i(t),n.s=u(t),n.l=o(Math.pow(t,e)),n.opacity=a(t),n+""}}return e=+e,r.gamma=n,r}(1)}var _r=yr(Re),br=yr(De);function mr(t,n){for(var e=0,r=n.length-1,i=n[0],u=new Array(r<0?0:r);e<r;)u[e]=t(i,i=n[++e]);return function(t){var n=Math.max(0,Math.min(r-1,Math.floor(t*=r)));return u[n](t-n)}}var xr,wr,Mr=function(t,n){for(var e=new Array(n),r=0;r<n;++r)e[r]=t(r/(n-1));return e},Ar=0,Tr=0,Nr=0,Sr=1e3,Er=0,kr=0,Cr=0,Pr="object"==typeof performance&&performance.now?performance:Date,zr="object"==typeof window&&window.requestAnimationFrame?window.requestAnimationFrame.bind(window):function(t){setTimeout(t,17)};function Rr(){return kr||(zr(Lr),kr=Pr.now()+Cr)}function Lr(){kr=0}function Dr(){this._call=this._time=this._next=null}function Ur(t,n,e){var r=new Dr;return r.restart(t,n,e),r}function qr(){Rr(),++Ar;for(var t,n=xr;n;)(t=kr-n._time)>=0&&n._call.call(null,t),n=n._next;--Ar}function Or(){kr=(Er=Pr.now())+Cr,Ar=Tr=0;try{qr()}finally{Ar=0,function(){var t,n,e=xr,r=1/0;for(;e;)e._call?(r>e._time&&(r=e._time),t=e,e=e._next):(n=e._next,e._next=null,e=t?t._next=n:xr=n);wr=t,Br(r)}(),kr=0}}function Yr(){var t=Pr.now(),n=t-Er;n>Sr&&(Cr-=n,Er=t)}function Br(t){Ar||(Tr&&(Tr=clearTimeout(Tr)),t-kr>24?(t<1/0&&(Tr=setTimeout(Or,t-Pr.now()-Cr)),Nr&&(Nr=clearInterval(Nr))):(Nr||(Er=Pr.now(),Nr=setInterval(Yr,Sr)),Ar=1,zr(Or)))}Dr.prototype=Ur.prototype={constructor:Dr,restart:function(t,n,e){if("function"!=typeof t)throw new TypeError("callback is not a function");e=(null==e?Rr():+e)+(null==n?0:+n),this._next||wr===this||(wr?wr._next=this:xr=this,wr=this),this._call=t,this._time=e,Br()},stop:function(){this._call&&(this._call=null,this._time=1/0,Br())}};var Ir=function(t,n,e){var r=new Dr;return n=null==n?0:+n,r.restart(function(e){r.stop(),t(e+n)},n,e),r},Fr=function(t,n,e){var r=new Dr,i=n;return null==n?(r.restart(t,n,e),r):(n=+n,e=null==e?Rr():+e,r.restart(function u(o){o+=i,r.restart(u,i+=n,e),t(o)},n,e),r)},Hr=ht("start","end","interrupt"),jr=[],Xr=0,Gr=1,Vr=2,$r=3,Wr=4,Zr=5,Qr=6,Jr=function(t,n,e,r,i,u){var o=t.__transition;if(o){if(e in o)return}else t.__transition={};!function(t,n,e){var r,i=t.__transition;function u(f){var c,s,l,h;if(e.state!==Gr)return a();for(c in i)if((h=i[c]).name===e.name){if(h.state===$r)return Ir(u);h.state===Wr?(h.state=Qr,h.timer.stop(),h.on.call("interrupt",t,t.__data__,h.index,h.group),delete i[c]):+c<n&&(h.state=Qr,h.timer.stop(),delete i[c])}if(Ir(function(){e.state===$r&&(e.state=Wr,e.timer.restart(o,e.delay,e.time),o(f))}),e.state=Vr,e.on.call("start",t,t.__data__,e.index,e.group),e.state===Vr){for(e.state=$r,r=new Array(l=e.tween.length),c=0,s=-1;c<l;++c)(h=e.tween[c].value.call(t,t.__data__,e.index,e.group))&&(r[++s]=h);r.length=s+1}}function o(n){for(var i=n<e.duration?e.ease.call(null,n/e.duration):(e.timer.restart(a),e.state=Zr,1),u=-1,o=r.length;++u<o;)r[u].call(null,i);e.state===Zr&&(e.on.call("end",t,t.__data__,e.index,e.group),a())}function a(){for(var r in e.state=Qr,e.timer.stop(),delete i[n],i)return;delete t.__transition}i[n]=e,e.timer=Ur(function(t){e.state=Gr,e.timer.restart(u,e.delay,e.time),e.delay<=t&&u(t-e.delay)},0,e.time)}(t,e,{name:n,index:r,group:i,on:Hr,tween:jr,time:u.time,delay:u.delay,duration:u.duration,ease:u.ease,timer:null,state:Xr})};function Kr(t,n){var e=ni(t,n);if(e.state>Xr)throw new Error("too late; already scheduled");return e}function ti(t,n){var e=ni(t,n);if(e.state>Vr)throw new Error("too late; already started");return e}function ni(t,n){var e=t.__transition;if(!e||!(e=e[n]))throw new Error("transition not found");return e}var ei=function(t,n){var e,r,i,u=t.__transition,o=!0;if(u){for(i in n=null==n?null:n+"",u)(e=u[i]).name===n?(r=e.state>Vr&&e.state<Zr,e.state=Qr,e.timer.stop(),r&&e.on.call("interrupt",t,t.__data__,e.index,e.group),delete u[i]):o=!1;o&&delete t.__transition}};function ri(t,n,e){var r=t._id;return t.each(function(){var t=ti(this,r);(t.value||(t.value={}))[n]=e.apply(this,arguments)}),function(t){return ni(t,r).value[n]}}var ii=function(t,n){var e;return("number"==typeof n?Fe:n instanceof Fn?Ue:(e=Fn(n))?(n=e,Ue):Ze)(t,n)};var ui=rn.prototype.constructor;var oi=0;function ai(t,n,e,r){this._groups=t,this._parents=n,this._name=e,this._id=r}function fi(t){return rn().transition(t)}function ci(){return++oi}var si=rn.prototype;function li(t){return+t}function hi(t){return t*t}function di(t){return t*(2-t)}function pi(t){return((t*=2)<=1?t*t:--t*(2-t)+1)/2}function vi(t){return t*t*t}function gi(t){return--t*t*t+1}function yi(t){return((t*=2)<=1?t*t*t:(t-=2)*t*t+2)/2}ai.prototype=fi.prototype={constructor:ai,select:function(t){var n=this._name,e=this._id;"function"!=typeof t&&(t=_t(t));for(var r=this._groups,i=r.length,u=new Array(i),o=0;o<i;++o)for(var a,f,c=r[o],s=c.length,l=u[o]=new Array(s),h=0;h<s;++h)(a=c[h])&&(f=t.call(a,a.__data__,h,c))&&("__data__"in a&&(f.__data__=a.__data__),l[h]=f,Jr(l[h],n,e,h,l,ni(a,e)));return new ai(u,this._parents,n,e)},selectAll:function(t){var n=this._name,e=this._id;"function"!=typeof t&&(t=mt(t));for(var r=this._groups,i=r.length,u=[],o=[],a=0;a<i;++a)for(var f,c=r[a],s=c.length,l=0;l<s;++l)if(f=c[l]){for(var h,d=t.call(f,f.__data__,l,c),p=ni(f,e),v=0,g=d.length;v<g;++v)(h=d[v])&&Jr(h,n,e,v,d,p);u.push(d),o.push(f)}return new ai(u,o,n,e)},filter:function(t){"function"!=typeof t&&(t=At(t));for(var n=this._groups,e=n.length,r=new Array(e),i=0;i<e;++i)for(var u,o=n[i],a=o.length,f=r[i]=[],c=0;c<a;++c)(u=o[c])&&t.call(u,u.__data__,c,o)&&f.push(u);return new ai(r,this._parents,this._name,this._id)},merge:function(t){if(t._id!==this._id)throw new Error;for(var n=this._groups,e=t._groups,r=n.length,i=e.length,u=Math.min(r,i),o=new Array(r),a=0;a<u;++a)for(var f,c=n[a],s=e[a],l=c.length,h=o[a]=new Array(l),d=0;d<l;++d)(f=c[d]||s[d])&&(h[d]=f);for(;a<r;++a)o[a]=n[a];return new ai(o,this._parents,this._name,this._id)},selection:function(){return new ui(this._groups,this._parents)},transition:function(){for(var t=this._name,n=this._id,e=ci(),r=this._groups,i=r.length,u=0;u<i;++u)for(var o,a=r[u],f=a.length,c=0;c<f;++c)if(o=a[c]){var s=ni(o,n);Jr(o,t,e,c,a,{time:s.time+s.delay+s.duration,delay:0,duration:s.duration,ease:s.ease})}return new ai(r,this._parents,t,e)},call:si.call,nodes:si.nodes,node:si.node,size:si.size,empty:si.empty,each:si.each,on:function(t,n){var e=this._id;return arguments.length<2?ni(this.node(),e).on.on(t):this.each(function(t,n,e){var r,i,u=function(t){return(t+"").trim().split(/^|\s+/).every(function(t){var n=t.indexOf(".");return n>=0&&(t=t.slice(0,n)),!t||"start"===t})}(n)?Kr:ti;return function(){var o=u(this,t),a=o.on;a!==r&&(i=(r=a).copy()).on(n,e),o.on=i}}(e,t,n))},attr:function(t,n){var e=vt(t),r="transform"===e?or:ii;return this.attrTween(t,"function"==typeof n?(e.local?function(t,n,e){var r,i,u;return function(){var o,a=e(this);if(null!=a)return(o=this.getAttributeNS(t.space,t.local))===a?null:o===r&&a===i?u:u=n(r=o,i=a);this.removeAttributeNS(t.space,t.local)}}:function(t,n,e){var r,i,u;return function(){var o,a=e(this);if(null!=a)return(o=this.getAttribute(t))===a?null:o===r&&a===i?u:u=n(r=o,i=a);this.removeAttribute(t)}})(e,r,ri(this,"attr."+t,n)):null==n?(e.local?function(t){return function(){this.removeAttributeNS(t.space,t.local)}}:function(t){return function(){this.removeAttribute(t)}})(e):(e.local?function(t,n,e){var r,i;return function(){var u=this.getAttributeNS(t.space,t.local);return u===e?null:u===r?i:i=n(r=u,e)}}:function(t,n,e){var r,i;return function(){var u=this.getAttribute(t);return u===e?null:u===r?i:i=n(r=u,e)}})(e,r,n+""))},attrTween:function(t,n){var e="attr."+t;if(arguments.length<2)return(e=this.tween(e))&&e._value;if(null==n)return this.tween(e,null);if("function"!=typeof n)throw new Error;var r=vt(t);return this.tween(e,(r.local?function(t,n){function e(){var e=this,r=n.apply(e,arguments);return r&&function(n){e.setAttributeNS(t.space,t.local,r(n))}}return e._value=n,e}:function(t,n){function e(){var e=this,r=n.apply(e,arguments);return r&&function(n){e.setAttribute(t,r(n))}}return e._value=n,e})(r,n))},style:function(t,n,e){var r="transform"==(t+="")?ur:ii;return null==n?this.styleTween(t,function(t,n){var e,r,i;return function(){var u=zt(this,t),o=(this.style.removeProperty(t),zt(this,t));return u===o?null:u===e&&o===r?i:i=n(e=u,r=o)}}(t,r)).on("end.style."+t,function(t){return function(){this.style.removeProperty(t)}}(t)):this.styleTween(t,"function"==typeof n?function(t,n,e){var r,i,u;return function(){var o=zt(this,t),a=e(this);return null==a&&(this.style.removeProperty(t),a=zt(this,t)),o===a?null:o===r&&a===i?u:u=n(r=o,i=a)}}(t,r,ri(this,"style."+t,n)):function(t,n,e){var r,i;return function(){var u=zt(this,t);return u===e?null:u===r?i:i=n(r=u,e)}}(t,r,n+""),e)},styleTween:function(t,n,e){var r="style."+(t+="");if(arguments.length<2)return(r=this.tween(r))&&r._value;if(null==n)return this.tween(r,null);if("function"!=typeof n)throw new Error;return this.tween(r,function(t,n,e){function r(){var r=this,i=n.apply(r,arguments);return i&&function(n){r.style.setProperty(t,i(n),e)}}return r._value=n,r}(t,n,null==e?"":e))},text:function(t){return this.tween("text","function"==typeof t?function(t){return function(){var n=t(this);this.textContent=null==n?"":n}}(ri(this,"text",t)):function(t){return function(){this.textContent=t}}(null==t?"":t+""))},remove:function(){return this.on("end.remove",function(t){return function(){var n=this.parentNode;for(var e in this.__transition)if(+e!==t)return;n&&n.removeChild(this)}}(this._id))},tween:function(t,n){var e=this._id;if(t+="",arguments.length<2){for(var r,i=ni(this.node(),e).tween,u=0,o=i.length;u<o;++u)if((r=i[u]).name===t)return r.value;return null}return this.each((null==n?function(t,n){var e,r;return function(){var i=ti(this,t),u=i.tween;if(u!==e)for(var o=0,a=(r=e=u).length;o<a;++o)if(r[o].name===n){(r=r.slice()).splice(o,1);break}i.tween=r}}:function(t,n,e){var r,i;if("function"!=typeof e)throw new Error;return function(){var u=ti(this,t),o=u.tween;if(o!==r){i=(r=o).slice();for(var a={name:n,value:e},f=0,c=i.length;f<c;++f)if(i[f].name===n){i[f]=a;break}f===c&&i.push(a)}u.tween=i}})(e,t,n))},delay:function(t){var n=this._id;return arguments.length?this.each(("function"==typeof t?function(t,n){return function(){Kr(this,t).delay=+n.apply(this,arguments)}}:function(t,n){return n=+n,function(){Kr(this,t).delay=n}})(n,t)):ni(this.node(),n).delay},duration:function(t){var n=this._id;return arguments.length?this.each(("function"==typeof t?function(t,n){return function(){ti(this,t).duration=+n.apply(this,arguments)}}:function(t,n){return n=+n,function(){ti(this,t).duration=n}})(n,t)):ni(this.node(),n).duration},ease:function(t){var n=this._id;return arguments.length?this.each(function(t,n){if("function"!=typeof n)throw new Error;return function(){ti(this,t).ease=n}}(n,t)):ni(this.node(),n).ease}};var _i=function t(n){function e(t){return Math.pow(t,n)}return n=+n,e.exponent=t,e}(3),bi=function t(n){function e(t){return 1-Math.pow(1-t,n)}return n=+n,e.exponent=t,e}(3),mi=function t(n){function e(t){return((t*=2)<=1?Math.pow(t,n):2-Math.pow(2-t,n))/2}return n=+n,e.exponent=t,e}(3),xi=Math.PI,wi=xi/2;function Mi(t){return 1-Math.cos(t*wi)}function Ai(t){return Math.sin(t*wi)}function Ti(t){return(1-Math.cos(xi*t))/2}function Ni(t){return Math.pow(2,10*t-10)}function Si(t){return 1-Math.pow(2,-10*t)}function Ei(t){return((t*=2)<=1?Math.pow(2,10*t-10):2-Math.pow(2,10-10*t))/2}function ki(t){return 1-Math.sqrt(1-t*t)}function Ci(t){return Math.sqrt(1- --t*t)}function Pi(t){return((t*=2)<=1?1-Math.sqrt(1-t*t):Math.sqrt(1-(t-=2)*t)+1)/2}var zi=4/11,Ri=6/11,Li=8/11,Di=.75,Ui=9/11,qi=10/11,Oi=.9375,Yi=21/22,Bi=63/64,Ii=1/zi/zi;function Fi(t){return 1-Hi(1-t)}function Hi(t){return(t=+t)<zi?Ii*t*t:t<Li?Ii*(t-=Ri)*t+Di:t<qi?Ii*(t-=Ui)*t+Oi:Ii*(t-=Yi)*t+Bi}function ji(t){return((t*=2)<=1?1-Hi(1-t):Hi(t-1)+1)/2}var Xi=function t(n){function e(t){return t*t*((n+1)*t-n)}return n=+n,e.overshoot=t,e}(1.70158),Gi=function t(n){function e(t){return--t*t*((n+1)*t+n)+1}return n=+n,e.overshoot=t,e}(1.70158),Vi=function t(n){function e(t){return((t*=2)<1?t*t*((n+1)*t-n):(t-=2)*t*((n+1)*t+n)+2)/2}return n=+n,e.overshoot=t,e}(1.70158),$i=2*Math.PI,Wi=function t(n,e){var r=Math.asin(1/(n=Math.max(1,n)))*(e/=$i);function i(t){return n*Math.pow(2,10*--t)*Math.sin((r-t)/e)}return i.amplitude=function(n){return t(n,e*$i)},i.period=function(e){return t(n,e)},i}(1,.3),Zi=function t(n,e){var r=Math.asin(1/(n=Math.max(1,n)))*(e/=$i);function i(t){return 1-n*Math.pow(2,-10*(t=+t))*Math.sin((t+r)/e)}return i.amplitude=function(n){return t(n,e*$i)},i.period=function(e){return t(n,e)},i}(1,.3),Qi=function t(n,e){var r=Math.asin(1/(n=Math.max(1,n)))*(e/=$i);function i(t){return((t=2*t-1)<0?n*Math.pow(2,10*t)*Math.sin((r-t)/e):2-n*Math.pow(2,-10*t)*Math.sin((r+t)/e))/2}return i.amplitude=function(n){return t(n,e*$i)},i.period=function(e){return t(n,e)},i}(1,.3),Ji={time:null,delay:0,duration:250,ease:yi};function Ki(t,n){for(var e;!(e=t.__transition)||!(e=e[n]);)if(!(t=t.parentNode))return Ji.time=Rr(),Ji;return e}rn.prototype.interrupt=function(t){return this.each(function(){ei(this,t)})},rn.prototype.transition=function(t){var n,e;t instanceof ai?(n=t._id,t=t._name):(n=ci(),(e=Ji).time=Rr(),t=null==t?null:t+"");for(var r=this._groups,i=r.length,u=0;u<i;++u)for(var o,a=r[u],f=a.length,c=0;c<f;++c)(o=a[c])&&Jr(o,t,n,c,a,e||Ki(o,n));return new ai(r,this._parents,t,n)};var tu=[null],nu=function(t,n){var e,r,i=t.__transition;if(i)for(r in n=null==n?null:n+"",i)if((e=i[r]).state>Gr&&e.name===n)return new ai([[t]],tu,n,+r);return null},eu=function(t){return function(){return t}},ru=function(t,n,e){this.target=t,this.type=n,this.selection=e};function iu(){Vt.stopImmediatePropagation()}var uu=function(){Vt.preventDefault(),Vt.stopImmediatePropagation()},ou={name:"drag"},au={name:"space"},fu={name:"handle"},cu={name:"center"},su={name:"x",handles:["e","w"].map(_u),input:function(t,n){return t&&[[t[0],n[0][1]],[t[1],n[1][1]]]},output:function(t){return t&&[t[0][0],t[1][0]]}},lu={name:"y",handles:["n","s"].map(_u),input:function(t,n){return t&&[[n[0][0],t[0]],[n[1][0],t[1]]]},output:function(t){return t&&[t[0][1],t[1][1]]}},hu={name:"xy",handles:["n","e","s","w","nw","ne","se","sw"].map(_u),input:function(t){return t},output:function(t){return t}},du={overlay:"crosshair",selection:"move",n:"ns-resize",e:"ew-resize",s:"ns-resize",w:"ew-resize",nw:"nwse-resize",ne:"nesw-resize",se:"nwse-resize",sw:"nesw-resize"},pu={e:"w",w:"e",nw:"ne",ne:"nw",se:"sw",sw:"se"},vu={n:"s",s:"n",nw:"sw",ne:"se",se:"ne",sw:"nw"},gu={overlay:1,selection:1,n:null,e:1,s:null,w:-1,nw:-1,ne:1,se:1,sw:-1},yu={overlay:1,selection:1,n:-1,e:null,s:1,w:null,nw:-1,ne:-1,se:1,sw:1};function _u(t){return{type:t}}function bu(){return!Vt.button}function mu(){var t=this.ownerSVGElement||this;return[[0,0],[t.width.baseVal.value,t.height.baseVal.value]]}function xu(t){for(;!t.__brush;)if(!(t=t.parentNode))return;return t.__brush}function wu(t){return t[0][0]===t[1][0]||t[0][1]===t[1][1]}function Mu(t){var n=t.__brush;return n?n.dim.output(n.selection):null}function Au(){return Su(su)}function Tu(){return Su(lu)}var Nu=function(){return Su(hu)};function Su(t){var n,e=mu,r=bu,i=ht(o,"start","brush","end"),u=6;function o(n){var e=n.property("__brush",l).selectAll(".overlay").data([_u("overlay")]);e.enter().append("rect").attr("class","overlay").attr("pointer-events","all").attr("cursor",du.overlay).merge(e).each(function(){var t=xu(this).extent;un(this).attr("x",t[0][0]).attr("y",t[0][1]).attr("width",t[1][0]-t[0][0]).attr("height",t[1][1]-t[0][1])}),n.selectAll(".selection").data([_u("selection")]).enter().append("rect").attr("class","selection").attr("cursor",du.selection).attr("fill","#777").attr("fill-opacity",.3).attr("stroke","#fff").attr("shape-rendering","crispEdges");var r=n.selectAll(".handle").data(t.handles,function(t){return t.type});r.exit().remove(),r.enter().append("rect").attr("class",function(t){return"handle handle--"+t.type}).attr("cursor",function(t){return du[t.type]}),n.each(a).attr("fill","none").attr("pointer-events","all").style("-webkit-tap-highlight-color","rgba(0,0,0,0)").on("mousedown.brush touchstart.brush",s)}function a(){var t=un(this),n=xu(this).selection;n?(t.selectAll(".selection").style("display",null).attr("x",n[0][0]).attr("y",n[0][1]).attr("width",n[1][0]-n[0][0]).attr("height",n[1][1]-n[0][1]),t.selectAll(".handle").style("display",null).attr("x",function(t){return"e"===t.type[t.type.length-1]?n[1][0]-u/2:n[0][0]-u/2}).attr("y",function(t){return"s"===t.type[0]?n[1][1]-u/2:n[0][1]-u/2}).attr("width",function(t){return"n"===t.type||"s"===t.type?n[1][0]-n[0][0]+u:u}).attr("height",function(t){return"e"===t.type||"w"===t.type?n[1][1]-n[0][1]+u:u})):t.selectAll(".selection,.handle").style("display","none").attr("x",null).attr("y",null).attr("width",null).attr("height",null)}function f(t,n){return t.__brush.emitter||new c(t,n)}function c(t,n){this.that=t,this.args=n,this.state=t.__brush,this.active=0}function s(){if(Vt.touches){if(Vt.changedTouches.length<Vt.touches.length)return uu()}else if(n)return;if(r.apply(this,arguments)){var e,i,u,o,c,s,l,h,d,p,v,g,y,_=this,b=Vt.target.__data__.type,m="selection"===(Vt.metaKey?b="overlay":b)?ou:Vt.altKey?cu:fu,x=t===lu?null:gu[b],w=t===su?null:yu[b],M=xu(_),A=M.extent,T=M.selection,N=A[0][0],S=A[0][1],E=A[1][0],k=A[1][1],C=x&&w&&Vt.shiftKey,P=hn(_),z=P,R=f(_,arguments).beforestart();"overlay"===b?M.selection=T=[[e=t===lu?N:P[0],u=t===su?S:P[1]],[c=t===lu?E:e,l=t===su?k:u]]:(e=T[0][0],u=T[0][1],c=T[1][0],l=T[1][1]),i=e,o=u,s=c,h=l;var L=un(_).attr("pointer-events","none"),D=L.selectAll(".overlay").attr("cursor",du[b]);if(Vt.touches)L.on("touchmove.brush",q,!0).on("touchend.brush touchcancel.brush",Y,!0);else{var U=un(Vt.view).on("keydown.brush",function(){switch(Vt.keyCode){case 16:C=x&&w;break;case 18:m===fu&&(x&&(c=s-d*x,e=i+d*x),w&&(l=h-p*w,u=o+p*w),m=cu,O());break;case 32:m!==fu&&m!==cu||(x<0?c=s-d:x>0&&(e=i-d),w<0?l=h-p:w>0&&(u=o-p),m=au,D.attr("cursor",du.selection),O());break;default:return}uu()},!0).on("keyup.brush",function(){switch(Vt.keyCode){case 16:C&&(g=y=C=!1,O());break;case 18:m===cu&&(x<0?c=s:x>0&&(e=i),w<0?l=h:w>0&&(u=o),m=fu,O());break;case 32:m===au&&(Vt.altKey?(x&&(c=s-d*x,e=i+d*x),w&&(l=h-p*w,u=o+p*w),m=cu):(x<0?c=s:x>0&&(e=i),w<0?l=h:w>0&&(u=o),m=fu),D.attr("cursor",du[b]),O());break;default:return}uu()},!0).on("mousemove.brush",q,!0).on("mouseup.brush",Y,!0);_n(Vt.view)}iu(),ei(_),a.call(_),R.start()}function q(){var t=hn(_);!C||g||y||(Math.abs(t[0]-z[0])>Math.abs(t[1]-z[1])?y=!0:g=!0),z=t,v=!0,uu(),O()}function O(){var t;switch(d=z[0]-P[0],p=z[1]-P[1],m){case au:case ou:x&&(d=Math.max(N-e,Math.min(E-c,d)),i=e+d,s=c+d),w&&(p=Math.max(S-u,Math.min(k-l,p)),o=u+p,h=l+p);break;case fu:x<0?(d=Math.max(N-e,Math.min(E-e,d)),i=e+d,s=c):x>0&&(d=Math.max(N-c,Math.min(E-c,d)),i=e,s=c+d),w<0?(p=Math.max(S-u,Math.min(k-u,p)),o=u+p,h=l):w>0&&(p=Math.max(S-l,Math.min(k-l,p)),o=u,h=l+p);break;case cu:x&&(i=Math.max(N,Math.min(E,e-d*x)),s=Math.max(N,Math.min(E,c+d*x))),w&&(o=Math.max(S,Math.min(k,u-p*w)),h=Math.max(S,Math.min(k,l+p*w)))}s<i&&(x*=-1,t=e,e=c,c=t,t=i,i=s,s=t,b in pu&&D.attr("cursor",du[b=pu[b]])),h<o&&(w*=-1,t=u,u=l,l=t,t=o,o=h,h=t,b in vu&&D.attr("cursor",du[b=vu[b]])),M.selection&&(T=M.selection),g&&(i=T[0][0],s=T[1][0]),y&&(o=T[0][1],h=T[1][1]),T[0][0]===i&&T[0][1]===o&&T[1][0]===s&&T[1][1]===h||(M.selection=[[i,o],[s,h]],a.call(_),R.brush())}function Y(){if(iu(),Vt.touches){if(Vt.touches.length)return;n&&clearTimeout(n),n=setTimeout(function(){n=null},500),L.on("touchmove.brush touchend.brush touchcancel.brush",null)}else bn(Vt.view,v),U.on("keydown.brush keyup.brush mousemove.brush mouseup.brush",null);L.attr("pointer-events","all"),D.attr("cursor",du.overlay),M.selection&&(T=M.selection),wu(T)&&(M.selection=null,a.call(_)),R.end()}}function l(){var n=this.__brush||{selection:null};return n.extent=e.apply(this,arguments),n.dim=t,n}return o.move=function(n,e){n.selection?n.on("start.brush",function(){f(this,arguments).beforestart().start()}).on("interrupt.brush end.brush",function(){f(this,arguments).end()}).tween("brush",function(){var n=this,r=n.__brush,i=f(n,arguments),u=r.selection,o=t.input("function"==typeof e?e.apply(this,arguments):e,r.extent),c=Qe(u,o);function s(t){r.selection=1===t&&wu(o)?null:c(t),a.call(n),i.brush()}return u&&o?s:s(1)}):n.each(function(){var n=arguments,r=this.__brush,i=t.input("function"==typeof e?e.apply(this,n):e,r.extent),u=f(this,n).beforestart();ei(this),r.selection=null==i||wu(i)?null:i,a.call(this),u.start().brush().end()})},c.prototype={beforestart:function(){return 1==++this.active&&(this.state.emitter=this,this.starting=!0),this},start:function(){return this.starting&&(this.starting=!1,this.emit("start")),this},brush:function(){return this.emit("brush"),this},end:function(){return 0==--this.active&&(delete this.state.emitter,this.emit("end")),this},emit:function(n){Jt(new ru(o,n,t.output(this.state.selection)),i.apply,i,[n,this.that,this.args])}},o.extent=function(t){return arguments.length?(e="function"==typeof t?t:eu([[+t[0][0],+t[0][1]],[+t[1][0],+t[1][1]]]),o):e},o.filter=function(t){return arguments.length?(r="function"==typeof t?t:eu(!!t),o):r},o.handleSize=function(t){return arguments.length?(u=+t,o):u},o.on=function(){var t=i.on.apply(i,arguments);return t===i?o:t},o}var Eu=Math.cos,ku=Math.sin,Cu=Math.PI,Pu=Cu/2,zu=2*Cu,Ru=Math.max;var Lu=function(){var t=0,n=null,e=null,r=null;function i(i){var u,o,a,f,c,s,l=i.length,h=[],d=w(l),p=[],v=[],g=v.groups=new Array(l),y=new Array(l*l);for(u=0,c=-1;++c<l;){for(o=0,s=-1;++s<l;)o+=i[c][s];h.push(o),p.push(w(l)),u+=o}for(n&&d.sort(function(t,e){return n(h[t],h[e])}),e&&p.forEach(function(t,n){t.sort(function(t,r){return e(i[n][t],i[n][r])})}),f=(u=Ru(0,zu-t*l)/u)?t:zu/l,o=0,c=-1;++c<l;){for(a=o,s=-1;++s<l;){var _=d[c],b=p[_][s],m=i[_][b],x=o,M=o+=m*u;y[b*l+_]={index:_,subindex:b,startAngle:x,endAngle:M,value:m}}g[_]={index:_,startAngle:a,endAngle:o,value:h[_]},o+=f}for(c=-1;++c<l;)for(s=c-1;++s<l;){var A=y[s*l+c],T=y[c*l+s];(A.value||T.value)&&v.push(A.value<T.value?{source:T,target:A}:{source:A,target:T})}return r?v.sort(r):v}return i.padAngle=function(n){return arguments.length?(t=Ru(0,n),i):t},i.sortGroups=function(t){return arguments.length?(n=t,i):n},i.sortSubgroups=function(t){return arguments.length?(e=t,i):e},i.sortChords=function(t){return arguments.length?(null==t?r=null:(r=function(t){return function(n,e){return t(n.source.value+n.target.value,e.source.value+e.target.value)}}(t))._=t,i):r&&r._},i},Du=Array.prototype.slice,Uu=function(t){return function(){return t}},qu=Math.PI,Ou=2*qu,Yu=Ou-1e-6;function Bu(){this._x0=this._y0=this._x1=this._y1=null,this._=""}function Iu(){return new Bu}Bu.prototype=Iu.prototype={constructor:Bu,moveTo:function(t,n){this._+="M"+(this._x0=this._x1=+t)+","+(this._y0=this._y1=+n)},closePath:function(){null!==this._x1&&(this._x1=this._x0,this._y1=this._y0,this._+="Z")},lineTo:function(t,n){this._+="L"+(this._x1=+t)+","+(this._y1=+n)},quadraticCurveTo:function(t,n,e,r){this._+="Q"+ +t+","+ +n+","+(this._x1=+e)+","+(this._y1=+r)},bezierCurveTo:function(t,n,e,r,i,u){this._+="C"+ +t+","+ +n+","+ +e+","+ +r+","+(this._x1=+i)+","+(this._y1=+u)},arcTo:function(t,n,e,r,i){t=+t,n=+n,e=+e,r=+r,i=+i;var u=this._x1,o=this._y1,a=e-t,f=r-n,c=u-t,s=o-n,l=c*c+s*s;if(i<0)throw new Error("negative radius: "+i);if(null===this._x1)this._+="M"+(this._x1=t)+","+(this._y1=n);else if(l>1e-6)if(Math.abs(s*a-f*c)>1e-6&&i){var h=e-u,d=r-o,p=a*a+f*f,v=h*h+d*d,g=Math.sqrt(p),y=Math.sqrt(l),_=i*Math.tan((qu-Math.acos((p+l-v)/(2*g*y)))/2),b=_/y,m=_/g;Math.abs(b-1)>1e-6&&(this._+="L"+(t+b*c)+","+(n+b*s)),this._+="A"+i+","+i+",0,0,"+ +(s*h>c*d)+","+(this._x1=t+m*a)+","+(this._y1=n+m*f)}else this._+="L"+(this._x1=t)+","+(this._y1=n);else;},arc:function(t,n,e,r,i,u){t=+t,n=+n;var o=(e=+e)*Math.cos(r),a=e*Math.sin(r),f=t+o,c=n+a,s=1^u,l=u?r-i:i-r;if(e<0)throw new Error("negative radius: "+e);null===this._x1?this._+="M"+f+","+c:(Math.abs(this._x1-f)>1e-6||Math.abs(this._y1-c)>1e-6)&&(this._+="L"+f+","+c),e&&(l<0&&(l=l%Ou+Ou),l>Yu?this._+="A"+e+","+e+",0,1,"+s+","+(t-o)+","+(n-a)+"A"+e+","+e+",0,1,"+s+","+(this._x1=f)+","+(this._y1=c):l>1e-6&&(this._+="A"+e+","+e+",0,"+ +(l>=qu)+","+s+","+(this._x1=t+e*Math.cos(i))+","+(this._y1=n+e*Math.sin(i))))},rect:function(t,n,e,r){this._+="M"+(this._x0=this._x1=+t)+","+(this._y0=this._y1=+n)+"h"+ +e+"v"+ +r+"h"+-e+"Z"},toString:function(){return this._}};var Fu=Iu;function Hu(t){return t.source}function ju(t){return t.target}function Xu(t){return t.radius}function Gu(t){return t.startAngle}function Vu(t){return t.endAngle}var $u=function(){var t=Hu,n=ju,e=Xu,r=Gu,i=Vu,u=null;function o(){var o,a=Du.call(arguments),f=t.apply(this,a),c=n.apply(this,a),s=+e.apply(this,(a[0]=f,a)),l=r.apply(this,a)-Pu,h=i.apply(this,a)-Pu,d=s*Eu(l),p=s*ku(l),v=+e.apply(this,(a[0]=c,a)),g=r.apply(this,a)-Pu,y=i.apply(this,a)-Pu;if(u||(u=o=Fu()),u.moveTo(d,p),u.arc(0,0,s,l,h),l===g&&h===y||(u.quadraticCurveTo(0,0,v*Eu(g),v*ku(g)),u.arc(0,0,v,g,y)),u.quadraticCurveTo(0,0,d,p),u.closePath(),o)return u=null,o+""||null}return o.radius=function(t){return arguments.length?(e="function"==typeof t?t:Uu(+t),o):e},o.startAngle=function(t){return arguments.length?(r="function"==typeof t?t:Uu(+t),o):r},o.endAngle=function(t){return arguments.length?(i="function"==typeof t?t:Uu(+t),o):i},o.source=function(n){return arguments.length?(t=n,o):t},o.target=function(t){return arguments.length?(n=t,o):n},o.context=function(t){return arguments.length?(u=null==t?null:t,o):u},o};function Wu(){}function Zu(t,n){var e=new Wu;if(t instanceof Wu)t.each(function(t,n){e.set(n,t)});else if(Array.isArray(t)){var r,i=-1,u=t.length;if(null==n)for(;++i<u;)e.set(i,t[i]);else for(;++i<u;)e.set(n(r=t[i],i,t),r)}else if(t)for(var o in t)e.set(o,t[o]);return e}Wu.prototype=Zu.prototype={constructor:Wu,has:function(t){return"$"+t in this},get:function(t){return this["$"+t]},set:function(t,n){return this["$"+t]=n,this},remove:function(t){var n="$"+t;return n in this&&delete this[n]},clear:function(){for(var t in this)"$"===t[0]&&delete this[t]},keys:function(){var t=[];for(var n in this)"$"===n[0]&&t.push(n.slice(1));return t},values:function(){var t=[];for(var n in this)"$"===n[0]&&t.push(this[n]);return t},entries:function(){var t=[];for(var n in this)"$"===n[0]&&t.push({key:n.slice(1),value:this[n]});return t},size:function(){var t=0;for(var n in this)"$"===n[0]&&++t;return t},empty:function(){for(var t in this)if("$"===t[0])return!1;return!0},each:function(t){for(var n in this)"$"===n[0]&&t(this[n],n.slice(1),this)}};var Qu=Zu,Ju=function(){var t,n,e,r=[],i=[];function u(e,i,o,a){if(i>=r.length)return null!=t&&e.sort(t),null!=n?n(e):e;for(var f,c,s,l=-1,h=e.length,d=r[i++],p=Qu(),v=o();++l<h;)(s=p.get(f=d(c=e[l])+""))?s.push(c):p.set(f,[c]);return p.each(function(t,n){a(v,n,u(t,i,o,a))}),v}return e={object:function(t){return u(t,0,Ku,to)},map:function(t){return u(t,0,no,eo)},entries:function(t){return function t(e,u){if(++u>r.length)return e;var o,a=i[u-1];return null!=n&&u>=r.length?o=e.entries():(o=[],e.each(function(n,e){o.push({key:e,values:t(n,u)})})),null!=a?o.sort(function(t,n){return a(t.key,n.key)}):o}(u(t,0,no,eo),0)},key:function(t){return r.push(t),e},sortKeys:function(t){return i[r.length-1]=t,e},sortValues:function(n){return t=n,e},rollup:function(t){return n=t,e}}};function Ku(){return{}}function to(t,n,e){t[n]=e}function no(){return Qu()}function eo(t,n,e){t.set(n,e)}function ro(){}var io=Qu.prototype;function uo(t,n){var e=new ro;if(t instanceof ro)t.each(function(t){e.add(t)});else if(t){var r=-1,i=t.length;if(null==n)for(;++r<i;)e.add(t[r]);else for(;++r<i;)e.add(n(t[r],r,t))}return e}ro.prototype=uo.prototype={constructor:ro,has:io.has,add:function(t){return this["$"+(t+="")]=t,this},remove:io.remove,clear:io.clear,values:io.keys,size:io.size,empty:io.empty,each:io.each};var oo=uo,ao=function(t){var n=[];for(var e in t)n.push(e);return n},fo=function(t){var n=[];for(var e in t)n.push(t[e]);return n},co=function(t){var n=[];for(var e in t)n.push({key:e,value:t[e]});return n},so=Array.prototype.slice,lo=function(t,n){return t-n},ho=function(t){for(var n=0,e=t.length,r=t[e-1][1]*t[0][0]-t[e-1][0]*t[0][1];++n<e;)r+=t[n-1][1]*t[n][0]-t[n-1][0]*t[n][1];return r},po=function(t){return function(){return t}},vo=function(t,n){for(var e,r=-1,i=n.length;++r<i;)if(e=go(t,n[r]))return e;return 0};function go(t,n){for(var e=n[0],r=n[1],i=-1,u=0,o=t.length,a=o-1;u<o;a=u++){var f=t[u],c=f[0],s=f[1],l=t[a],h=l[0],d=l[1];if(yo(f,l,n))return 0;s>r!=d>r&&e<(h-c)*(r-s)/(d-s)+c&&(i=-i)}return i}function yo(t,n,e){var r;return function(t,n,e){return(n[0]-t[0])*(e[1]-t[1])==(e[0]-t[0])*(n[1]-t[1])}(t,n,e)&&function(t,n,e){return t<=n&&n<=e||e<=n&&n<=t}(t[r=+(t[0]===n[0])],e[r],n[r])}var _o=function(){},bo=[[],[[[1,1.5],[.5,1]]],[[[1.5,1],[1,1.5]]],[[[1.5,1],[.5,1]]],[[[1,.5],[1.5,1]]],[[[1,1.5],[.5,1]],[[1,.5],[1.5,1]]],[[[1,.5],[1,1.5]]],[[[1,.5],[.5,1]]],[[[.5,1],[1,.5]]],[[[1,1.5],[1,.5]]],[[[.5,1],[1,.5]],[[1.5,1],[1,1.5]]],[[[1.5,1],[1,.5]]],[[[.5,1],[1.5,1]]],[[[1,1.5],[1.5,1]]],[[[.5,1],[1,1.5]]],[]],mo=function(){var t=1,n=1,e=k,r=a;function i(t){var n=e(t);if(Array.isArray(n))n=n.slice().sort(lo);else{var r=g(t),i=r[0],o=r[1];n=E(i,o,n),n=w(Math.floor(i/n)*n,Math.floor(o/n)*n,n)}return n.map(function(n){return u(t,n)})}function u(e,i){var u=[],a=[];return function(e,r,i){var u,a,f,c,s,l,h=new Array,d=new Array;u=a=-1,c=e[0]>=r,bo[c<<1].forEach(p);for(;++u<t-1;)f=c,c=e[u+1]>=r,bo[f|c<<1].forEach(p);bo[c<<0].forEach(p);for(;++a<n-1;){for(u=-1,c=e[a*t+t]>=r,s=e[a*t]>=r,bo[c<<1|s<<2].forEach(p);++u<t-1;)f=c,c=e[a*t+t+u+1]>=r,l=s,s=e[a*t+u+1]>=r,bo[f|c<<1|s<<2|l<<3].forEach(p);bo[c|s<<3].forEach(p)}u=-1,s=e[a*t]>=r,bo[s<<2].forEach(p);for(;++u<t-1;)l=s,s=e[a*t+u+1]>=r,bo[s<<2|l<<3].forEach(p);function p(t){var n,e,r=[t[0][0]+u,t[0][1]+a],f=[t[1][0]+u,t[1][1]+a],c=o(r),s=o(f);(n=d[c])?(e=h[s])?(delete d[n.end],delete h[e.start],n===e?(n.ring.push(f),i(n.ring)):h[n.start]=d[e.end]={start:n.start,end:e.end,ring:n.ring.concat(e.ring)}):(delete d[n.end],n.ring.push(f),d[n.end=s]=n):(n=h[s])?(e=d[c])?(delete h[n.start],delete d[e.end],n===e?(n.ring.push(f),i(n.ring)):h[e.start]=d[n.end]={start:e.start,end:n.end,ring:e.ring.concat(n.ring)}):(delete h[n.start],n.ring.unshift(r),h[n.start=c]=n):h[c]=d[s]={start:c,end:s,ring:[r,f]}}bo[s<<3].forEach(p)}(e,i,function(t){r(t,e,i),ho(t)>0?u.push([t]):a.push(t)}),a.forEach(function(t){for(var n,e=0,r=u.length;e<r;++e)if(-1!==vo((n=u[e])[0],t))return void n.push(t)}),{type:"MultiPolygon",value:i,coordinates:u}}function o(n){return 2*n[0]+n[1]*(t+1)*4}function a(e,r,i){e.forEach(function(e){var u,o=e[0],a=e[1],f=0|o,c=0|a,s=r[c*t+f];o>0&&o<t&&f===o&&(u=r[c*t+f-1],e[0]=o+(i-u)/(s-u)-.5),a>0&&a<n&&c===a&&(u=r[(c-1)*t+f],e[1]=a+(i-u)/(s-u)-.5)})}return i.contour=u,i.size=function(e){if(!arguments.length)return[t,n];var r=Math.ceil(e[0]),u=Math.ceil(e[1]);if(!(r>0&&u>0))throw new Error("invalid size");return t=r,n=u,i},i.thresholds=function(t){return arguments.length?(e="function"==typeof t?t:Array.isArray(t)?po(so.call(t)):po(t),i):e},i.smooth=function(t){return arguments.length?(r=t?a:_o,i):r===a},i};function xo(t,n,e){for(var r=t.width,i=t.height,u=1+(e<<1),o=0;o<i;++o)for(var a=0,f=0;a<r+e;++a)a<r&&(f+=t.data[a+o*r]),a>=e&&(a>=u&&(f-=t.data[a-u+o*r]),n.data[a-e+o*r]=f/Math.min(a+1,r-1+u-a,u))}function wo(t,n,e){for(var r=t.width,i=t.height,u=1+(e<<1),o=0;o<r;++o)for(var a=0,f=0;a<i+e;++a)a<i&&(f+=t.data[o+a*r]),a>=e&&(a>=u&&(f-=t.data[o+(a-u)*r]),n.data[o+(a-e)*r]=f/Math.min(a+1,i-1+u-a,u))}function Mo(t){return t[0]}function Ao(t){return t[1]}function To(){return 1}var No=function(){var t=Mo,n=Ao,e=To,r=960,i=500,u=20,o=2,a=3*u,f=r+2*a>>o,c=i+2*a>>o,s=po(20);function l(r){var i=new Float32Array(f*c),l=new Float32Array(f*c);r.forEach(function(r,u,s){var l=+t(r,u,s)+a>>o,h=+n(r,u,s)+a>>o,d=+e(r,u,s);l>=0&&l<f&&h>=0&&h<c&&(i[l+h*f]+=d)}),xo({width:f,height:c,data:i},{width:f,height:c,data:l},u>>o),wo({width:f,height:c,data:l},{width:f,height:c,data:i},u>>o),xo({width:f,height:c,data:i},{width:f,height:c,data:l},u>>o),wo({width:f,height:c,data:l},{width:f,height:c,data:i},u>>o),xo({width:f,height:c,data:i},{width:f,height:c,data:l},u>>o),wo({width:f,height:c,data:l},{width:f,height:c,data:i},u>>o);var d=s(i);if(!Array.isArray(d)){var p=L(i);d=E(0,p,d),(d=w(0,Math.floor(p/d)*d,d)).shift()}return mo().thresholds(d).size([f,c])(i).map(h)}function h(t){return t.value*=Math.pow(2,-2*o),t.coordinates.forEach(d),t}function d(t){t.forEach(p)}function p(t){t.forEach(v)}function v(t){t[0]=t[0]*Math.pow(2,o)-a,t[1]=t[1]*Math.pow(2,o)-a}function g(){return f=r+2*(a=3*u)>>o,c=i+2*a>>o,l}return l.x=function(n){return arguments.length?(t="function"==typeof n?n:po(+n),l):t},l.y=function(t){return arguments.length?(n="function"==typeof t?t:po(+t),l):n},l.weight=function(t){return arguments.length?(e="function"==typeof t?t:po(+t),l):e},l.size=function(t){if(!arguments.length)return[r,i];var n=Math.ceil(t[0]),e=Math.ceil(t[1]);if(!(n>=0||n>=0))throw new Error("invalid size");return r=n,i=e,g()},l.cellSize=function(t){if(!arguments.length)return 1<<o;if(!((t=+t)>=1))throw new Error("invalid cell size");return o=Math.floor(Math.log(t)/Math.LN2),g()},l.thresholds=function(t){return arguments.length?(s="function"==typeof t?t:Array.isArray(t)?po(so.call(t)):po(t),l):s},l.bandwidth=function(t){if(!arguments.length)return Math.sqrt(u*(u+1));if(!((t=+t)>=0))throw new Error("invalid bandwidth");return u=Math.round((Math.sqrt(4*t*t+1)-1)/2),g()},l},So={},Eo={},ko=34,Co=10,Po=13;function zo(t){return new Function("d","return {"+t.map(function(t,n){return JSON.stringify(t)+": d["+n+"]"}).join(",")+"}")}var Ro=function(t){var n=new RegExp('["'+t+"\n\r]"),e=t.charCodeAt(0);function r(t,n){var r,i=[],u=t.length,o=0,a=0,f=u<=0,c=!1;function s(){if(f)return Eo;if(c)return c=!1,So;var n,r,i=o;if(t.charCodeAt(i)===ko){for(;o++<u&&t.charCodeAt(o)!==ko||t.charCodeAt(++o)===ko;);return(n=o)>=u?f=!0:(r=t.charCodeAt(o++))===Co?c=!0:r===Po&&(c=!0,t.charCodeAt(o)===Co&&++o),t.slice(i+1,n-1).replace(/""/g,'"')}for(;o<u;){if((r=t.charCodeAt(n=o++))===Co)c=!0;else if(r===Po)c=!0,t.charCodeAt(o)===Co&&++o;else if(r!==e)continue;return t.slice(i,n)}return f=!0,t.slice(i,u)}for(t.charCodeAt(u-1)===Co&&--u,t.charCodeAt(u-1)===Po&&--u;(r=s())!==Eo;){for(var l=[];r!==So&&r!==Eo;)l.push(r),r=s();n&&null==(l=n(l,a++))||i.push(l)}return i}function i(n){return n.map(u).join(t)}function u(t){return null==t?"":n.test(t+="")?'"'+t.replace(/"/g,'""')+'"':t}return{parse:function(t,n){var e,i,u=r(t,function(t,r){if(e)return e(t,r-1);i=t,e=n?function(t,n){var e=zo(t);return function(r,i){return n(e(r),i,t)}}(t,n):zo(t)});return u.columns=i||[],u},parseRows:r,format:function(n,e){return null==e&&(e=function(t){var n=Object.create(null),e=[];return t.forEach(function(t){for(var r in t)r in n||e.push(n[r]=r)}),e}(n)),[e.map(u).join(t)].concat(n.map(function(n){return e.map(function(t){return u(n[t])}).join(t)})).join("\n")},formatRows:function(t){return t.map(i).join("\n")}}},Lo=Ro(","),Do=Lo.parse,Uo=Lo.parseRows,qo=Lo.format,Oo=Lo.formatRows,Yo=Ro("\t"),Bo=Yo.parse,Io=Yo.parseRows,Fo=Yo.format,Ho=Yo.formatRows;function jo(t){if(!t.ok)throw new Error(t.status+" "+t.statusText);return t.blob()}var Xo=function(t,n){return fetch(t,n).then(jo)};function Go(t){if(!t.ok)throw new Error(t.status+" "+t.statusText);return t.arrayBuffer()}var Vo=function(t,n){return fetch(t,n).then(Go)};function $o(t){if(!t.ok)throw new Error(t.status+" "+t.statusText);return t.text()}var Wo=function(t,n){return fetch(t,n).then($o)};function Zo(t){return function(n,e,r){return 2===arguments.length&&"function"==typeof e&&(r=e,e=void 0),Wo(n,e).then(function(n){return t(n,r)})}}function Qo(t,n,e,r){3===arguments.length&&"function"==typeof e&&(r=e,e=void 0);var i=Ro(t);return Wo(n,e).then(function(t){return i.parse(t,r)})}var Jo=Zo(Do),Ko=Zo(Bo),ta=function(t,n){return new Promise(function(e,r){var i=new Image;for(var u in n)i[u]=n[u];i.onerror=r,i.onload=function(){e(i)},i.src=t})};function na(t){if(!t.ok)throw new Error(t.status+" "+t.statusText);return t.json()}var ea=function(t,n){return fetch(t,n).then(na)};function ra(t){return function(n,e){return Wo(n,e).then(function(n){return(new DOMParser).parseFromString(n,t)})}}var ia=ra("application/xml"),ua=ra("text/html"),oa=ra("image/svg+xml"),aa=function(t,n){var e;function r(){var r,i,u=e.length,o=0,a=0;for(r=0;r<u;++r)o+=(i=e[r]).x,a+=i.y;for(o=o/u-t,a=a/u-n,r=0;r<u;++r)(i=e[r]).x-=o,i.y-=a}return null==t&&(t=0),null==n&&(n=0),r.initialize=function(t){e=t},r.x=function(n){return arguments.length?(t=+n,r):t},r.y=function(t){return arguments.length?(n=+t,r):n},r},fa=function(t){return function(){return t}},ca=function(){return 1e-6*(Math.random()-.5)};function sa(t,n,e,r){if(isNaN(n)||isNaN(e))return t;var i,u,o,a,f,c,s,l,h,d=t._root,p={data:r},v=t._x0,g=t._y0,y=t._x1,_=t._y1;if(!d)return t._root=p,t;for(;d.length;)if((c=n>=(u=(v+y)/2))?v=u:y=u,(s=e>=(o=(g+_)/2))?g=o:_=o,i=d,!(d=d[l=s<<1|c]))return i[l]=p,t;if(a=+t._x.call(null,d.data),f=+t._y.call(null,d.data),n===a&&e===f)return p.next=d,i?i[l]=p:t._root=p,t;do{i=i?i[l]=new Array(4):t._root=new Array(4),(c=n>=(u=(v+y)/2))?v=u:y=u,(s=e>=(o=(g+_)/2))?g=o:_=o}while((l=s<<1|c)==(h=(f>=o)<<1|a>=u));return i[h]=d,i[l]=p,t}var la=function(t,n,e,r,i){this.node=t,this.x0=n,this.y0=e,this.x1=r,this.y1=i};function ha(t){return t[0]}function da(t){return t[1]}function pa(t,n,e){var r=new va(null==n?ha:n,null==e?da:e,NaN,NaN,NaN,NaN);return null==t?r:r.addAll(t)}function va(t,n,e,r,i,u){this._x=t,this._y=n,this._x0=e,this._y0=r,this._x1=i,this._y1=u,this._root=void 0}function ga(t){for(var n={data:t.data},e=n;t=t.next;)e=e.next={data:t.data};return n}var ya=pa.prototype=va.prototype;function _a(t){return t.x+t.vx}function ba(t){return t.y+t.vy}ya.copy=function(){var t,n,e=new va(this._x,this._y,this._x0,this._y0,this._x1,this._y1),r=this._root;if(!r)return e;if(!r.length)return e._root=ga(r),e;for(t=[{source:r,target:e._root=new Array(4)}];r=t.pop();)for(var i=0;i<4;++i)(n=r.source[i])&&(n.length?t.push({source:n,target:r.target[i]=new Array(4)}):r.target[i]=ga(n));return e},ya.add=function(t){var n=+this._x.call(null,t),e=+this._y.call(null,t);return sa(this.cover(n,e),n,e,t)},ya.addAll=function(t){var n,e,r,i,u=t.length,o=new Array(u),a=new Array(u),f=1/0,c=1/0,s=-1/0,l=-1/0;for(e=0;e<u;++e)isNaN(r=+this._x.call(null,n=t[e]))||isNaN(i=+this._y.call(null,n))||(o[e]=r,a[e]=i,r<f&&(f=r),r>s&&(s=r),i<c&&(c=i),i>l&&(l=i));for(s<f&&(f=this._x0,s=this._x1),l<c&&(c=this._y0,l=this._y1),this.cover(f,c).cover(s,l),e=0;e<u;++e)sa(this,o[e],a[e],t[e]);return this},ya.cover=function(t,n){if(isNaN(t=+t)||isNaN(n=+n))return this;var e=this._x0,r=this._y0,i=this._x1,u=this._y1;if(isNaN(e))i=(e=Math.floor(t))+1,u=(r=Math.floor(n))+1;else{if(!(e>t||t>i||r>n||n>u))return this;var o,a,f=i-e,c=this._root;switch(a=(n<(r+u)/2)<<1|t<(e+i)/2){case 0:do{(o=new Array(4))[a]=c,c=o}while(u=r+(f*=2),t>(i=e+f)||n>u);break;case 1:do{(o=new Array(4))[a]=c,c=o}while(u=r+(f*=2),(e=i-f)>t||n>u);break;case 2:do{(o=new Array(4))[a]=c,c=o}while(r=u-(f*=2),t>(i=e+f)||r>n);break;case 3:do{(o=new Array(4))[a]=c,c=o}while(r=u-(f*=2),(e=i-f)>t||r>n)}this._root&&this._root.length&&(this._root=c)}return this._x0=e,this._y0=r,this._x1=i,this._y1=u,this},ya.data=function(){var t=[];return this.visit(function(n){if(!n.length)do{t.push(n.data)}while(n=n.next)}),t},ya.extent=function(t){return arguments.length?this.cover(+t[0][0],+t[0][1]).cover(+t[1][0],+t[1][1]):isNaN(this._x0)?void 0:[[this._x0,this._y0],[this._x1,this._y1]]},ya.find=function(t,n,e){var r,i,u,o,a,f,c,s=this._x0,l=this._y0,h=this._x1,d=this._y1,p=[],v=this._root;for(v&&p.push(new la(v,s,l,h,d)),null==e?e=1/0:(s=t-e,l=n-e,h=t+e,d=n+e,e*=e);f=p.pop();)if(!(!(v=f.node)||(i=f.x0)>h||(u=f.y0)>d||(o=f.x1)<s||(a=f.y1)<l))if(v.length){var g=(i+o)/2,y=(u+a)/2;p.push(new la(v[3],g,y,o,a),new la(v[2],i,y,g,a),new la(v[1],g,u,o,y),new la(v[0],i,u,g,y)),(c=(n>=y)<<1|t>=g)&&(f=p[p.length-1],p[p.length-1]=p[p.length-1-c],p[p.length-1-c]=f)}else{var _=t-+this._x.call(null,v.data),b=n-+this._y.call(null,v.data),m=_*_+b*b;if(m<e){var x=Math.sqrt(e=m);s=t-x,l=n-x,h=t+x,d=n+x,r=v.data}}return r},ya.remove=function(t){if(isNaN(u=+this._x.call(null,t))||isNaN(o=+this._y.call(null,t)))return this;var n,e,r,i,u,o,a,f,c,s,l,h,d=this._root,p=this._x0,v=this._y0,g=this._x1,y=this._y1;if(!d)return this;if(d.length)for(;;){if((c=u>=(a=(p+g)/2))?p=a:g=a,(s=o>=(f=(v+y)/2))?v=f:y=f,n=d,!(d=d[l=s<<1|c]))return this;if(!d.length)break;(n[l+1&3]||n[l+2&3]||n[l+3&3])&&(e=n,h=l)}for(;d.data!==t;)if(r=d,!(d=d.next))return this;return(i=d.next)&&delete d.next,r?(i?r.next=i:delete r.next,this):n?(i?n[l]=i:delete n[l],(d=n[0]||n[1]||n[2]||n[3])&&d===(n[3]||n[2]||n[1]||n[0])&&!d.length&&(e?e[h]=d:this._root=d),this):(this._root=i,this)},ya.removeAll=function(t){for(var n=0,e=t.length;n<e;++n)this.remove(t[n]);return this},ya.root=function(){return this._root},ya.size=function(){var t=0;return this.visit(function(n){if(!n.length)do{++t}while(n=n.next)}),t},ya.visit=function(t){var n,e,r,i,u,o,a=[],f=this._root;for(f&&a.push(new la(f,this._x0,this._y0,this._x1,this._y1));n=a.pop();)if(!t(f=n.node,r=n.x0,i=n.y0,u=n.x1,o=n.y1)&&f.length){var c=(r+u)/2,s=(i+o)/2;(e=f[3])&&a.push(new la(e,c,s,u,o)),(e=f[2])&&a.push(new la(e,r,s,c,o)),(e=f[1])&&a.push(new la(e,c,i,u,s)),(e=f[0])&&a.push(new la(e,r,i,c,s))}return this},ya.visitAfter=function(t){var n,e=[],r=[];for(this._root&&e.push(new la(this._root,this._x0,this._y0,this._x1,this._y1));n=e.pop();){var i=n.node;if(i.length){var u,o=n.x0,a=n.y0,f=n.x1,c=n.y1,s=(o+f)/2,l=(a+c)/2;(u=i[0])&&e.push(new la(u,o,a,s,l)),(u=i[1])&&e.push(new la(u,s,a,f,l)),(u=i[2])&&e.push(new la(u,o,l,s,c)),(u=i[3])&&e.push(new la(u,s,l,f,c))}r.push(n)}for(;n=r.pop();)t(n.node,n.x0,n.y0,n.x1,n.y1);return this},ya.x=function(t){return arguments.length?(this._x=t,this):this._x},ya.y=function(t){return arguments.length?(this._y=t,this):this._y};var ma=function(t){var n,e,r=1,i=1;function u(){for(var t,u,a,f,c,s,l,h=n.length,d=0;d<i;++d)for(u=pa(n,_a,ba).visitAfter(o),t=0;t<h;++t)a=n[t],s=e[a.index],l=s*s,f=a.x+a.vx,c=a.y+a.vy,u.visit(p);function p(t,n,e,i,u){var o=t.data,h=t.r,d=s+h;if(!o)return n>f+d||i<f-d||e>c+d||u<c-d;if(o.index>a.index){var p=f-o.x-o.vx,v=c-o.y-o.vy,g=p*p+v*v;g<d*d&&(0===p&&(g+=(p=ca())*p),0===v&&(g+=(v=ca())*v),g=(d-(g=Math.sqrt(g)))/g*r,a.vx+=(p*=g)*(d=(h*=h)/(l+h)),a.vy+=(v*=g)*d,o.vx-=p*(d=1-d),o.vy-=v*d)}}}function o(t){if(t.data)return t.r=e[t.data.index];for(var n=t.r=0;n<4;++n)t[n]&&t[n].r>t.r&&(t.r=t[n].r)}function a(){if(n){var r,i,u=n.length;for(e=new Array(u),r=0;r<u;++r)i=n[r],e[i.index]=+t(i,r,n)}}return"function"!=typeof t&&(t=fa(null==t?1:+t)),u.initialize=function(t){n=t,a()},u.iterations=function(t){return arguments.length?(i=+t,u):i},u.strength=function(t){return arguments.length?(r=+t,u):r},u.radius=function(n){return arguments.length?(t="function"==typeof n?n:fa(+n),a(),u):t},u};function xa(t){return t.index}function wa(t,n){var e=t.get(n);if(!e)throw new Error("missing: "+n);return e}var Ma=function(t){var n,e,r,i,u,o=xa,a=function(t){return 1/Math.min(i[t.source.index],i[t.target.index])},f=fa(30),c=1;function s(r){for(var i=0,o=t.length;i<c;++i)for(var a,f,s,l,h,d,p,v=0;v<o;++v)f=(a=t[v]).source,l=(s=a.target).x+s.vx-f.x-f.vx||ca(),h=s.y+s.vy-f.y-f.vy||ca(),l*=d=((d=Math.sqrt(l*l+h*h))-e[v])/d*r*n[v],h*=d,s.vx-=l*(p=u[v]),s.vy-=h*p,f.vx+=l*(p=1-p),f.vy+=h*p}function l(){if(r){var a,f,c=r.length,s=t.length,l=Qu(r,o);for(a=0,i=new Array(c);a<s;++a)(f=t[a]).index=a,"object"!=typeof f.source&&(f.source=wa(l,f.source)),"object"!=typeof f.target&&(f.target=wa(l,f.target)),i[f.source.index]=(i[f.source.index]||0)+1,i[f.target.index]=(i[f.target.index]||0)+1;for(a=0,u=new Array(s);a<s;++a)f=t[a],u[a]=i[f.source.index]/(i[f.source.index]+i[f.target.index]);n=new Array(s),h(),e=new Array(s),d()}}function h(){if(r)for(var e=0,i=t.length;e<i;++e)n[e]=+a(t[e],e,t)}function d(){if(r)for(var n=0,i=t.length;n<i;++n)e[n]=+f(t[n],n,t)}return null==t&&(t=[]),s.initialize=function(t){r=t,l()},s.links=function(n){return arguments.length?(t=n,l(),s):t},s.id=function(t){return arguments.length?(o=t,s):o},s.iterations=function(t){return arguments.length?(c=+t,s):c},s.strength=function(t){return arguments.length?(a="function"==typeof t?t:fa(+t),h(),s):a},s.distance=function(t){return arguments.length?(f="function"==typeof t?t:fa(+t),d(),s):f},s};function Aa(t){return t.x}function Ta(t){return t.y}var Na=10,Sa=Math.PI*(3-Math.sqrt(5)),Ea=function(t){var n,e=1,r=.001,i=1-Math.pow(r,1/300),u=0,o=.6,a=Qu(),f=Ur(s),c=ht("tick","end");function s(){l(),c.call("tick",n),e<r&&(f.stop(),c.call("end",n))}function l(){var n,r,f=t.length;for(e+=(u-e)*i,a.each(function(t){t(e)}),n=0;n<f;++n)null==(r=t[n]).fx?r.x+=r.vx*=o:(r.x=r.fx,r.vx=0),null==r.fy?r.y+=r.vy*=o:(r.y=r.fy,r.vy=0)}function h(){for(var n,e=0,r=t.length;e<r;++e){if((n=t[e]).index=e,isNaN(n.x)||isNaN(n.y)){var i=Na*Math.sqrt(e),u=e*Sa;n.x=i*Math.cos(u),n.y=i*Math.sin(u)}(isNaN(n.vx)||isNaN(n.vy))&&(n.vx=n.vy=0)}}function d(n){return n.initialize&&n.initialize(t),n}return null==t&&(t=[]),h(),n={tick:l,restart:function(){return f.restart(s),n},stop:function(){return f.stop(),n},nodes:function(e){return arguments.length?(t=e,h(),a.each(d),n):t},alpha:function(t){return arguments.length?(e=+t,n):e},alphaMin:function(t){return arguments.length?(r=+t,n):r},alphaDecay:function(t){return arguments.length?(i=+t,n):+i},alphaTarget:function(t){return arguments.length?(u=+t,n):u},velocityDecay:function(t){return arguments.length?(o=1-t,n):1-o},force:function(t,e){return arguments.length>1?(null==e?a.remove(t):a.set(t,d(e)),n):a.get(t)},find:function(n,e,r){var i,u,o,a,f,c=0,s=t.length;for(null==r?r=1/0:r*=r,c=0;c<s;++c)(o=(i=n-(a=t[c]).x)*i+(u=e-a.y)*u)<r&&(f=a,r=o);return f},on:function(t,e){return arguments.length>1?(c.on(t,e),n):c.on(t)}}},ka=function(){var t,n,e,r,i=fa(-30),u=1,o=1/0,a=.81;function f(r){var i,u=t.length,o=pa(t,Aa,Ta).visitAfter(s);for(e=r,i=0;i<u;++i)n=t[i],o.visit(l)}function c(){if(t){var n,e,u=t.length;for(r=new Array(u),n=0;n<u;++n)e=t[n],r[e.index]=+i(e,n,t)}}function s(t){var n,e,i,u,o,a=0,f=0;if(t.length){for(i=u=o=0;o<4;++o)(n=t[o])&&(e=Math.abs(n.value))&&(a+=n.value,f+=e,i+=e*n.x,u+=e*n.y);t.x=i/f,t.y=u/f}else{(n=t).x=n.data.x,n.y=n.data.y;do{a+=r[n.data.index]}while(n=n.next)}t.value=a}function l(t,i,f,c){if(!t.value)return!0;var s=t.x-n.x,l=t.y-n.y,h=c-i,d=s*s+l*l;if(h*h/a<d)return d<o&&(0===s&&(d+=(s=ca())*s),0===l&&(d+=(l=ca())*l),d<u&&(d=Math.sqrt(u*d)),n.vx+=s*t.value*e/d,n.vy+=l*t.value*e/d),!0;if(!(t.length||d>=o)){(t.data!==n||t.next)&&(0===s&&(d+=(s=ca())*s),0===l&&(d+=(l=ca())*l),d<u&&(d=Math.sqrt(u*d)));do{t.data!==n&&(h=r[t.data.index]*e/d,n.vx+=s*h,n.vy+=l*h)}while(t=t.next)}}return f.initialize=function(n){t=n,c()},f.strength=function(t){return arguments.length?(i="function"==typeof t?t:fa(+t),c(),f):i},f.distanceMin=function(t){return arguments.length?(u=t*t,f):Math.sqrt(u)},f.distanceMax=function(t){return arguments.length?(o=t*t,f):Math.sqrt(o)},f.theta=function(t){return arguments.length?(a=t*t,f):Math.sqrt(a)},f},Ca=function(t,n,e){var r,i,u,o=fa(.1);function a(t){for(var o=0,a=r.length;o<a;++o){var f=r[o],c=f.x-n||1e-6,s=f.y-e||1e-6,l=Math.sqrt(c*c+s*s),h=(u[o]-l)*i[o]*t/l;f.vx+=c*h,f.vy+=s*h}}function f(){if(r){var n,e=r.length;for(i=new Array(e),u=new Array(e),n=0;n<e;++n)u[n]=+t(r[n],n,r),i[n]=isNaN(u[n])?0:+o(r[n],n,r)}}return"function"!=typeof t&&(t=fa(+t)),null==n&&(n=0),null==e&&(e=0),a.initialize=function(t){r=t,f()},a.strength=function(t){return arguments.length?(o="function"==typeof t?t:fa(+t),f(),a):o},a.radius=function(n){return arguments.length?(t="function"==typeof n?n:fa(+n),f(),a):t},a.x=function(t){return arguments.length?(n=+t,a):n},a.y=function(t){return arguments.length?(e=+t,a):e},a},Pa=function(t){var n,e,r,i=fa(.1);function u(t){for(var i,u=0,o=n.length;u<o;++u)(i=n[u]).vx+=(r[u]-i.x)*e[u]*t}function o(){if(n){var u,o=n.length;for(e=new Array(o),r=new Array(o),u=0;u<o;++u)e[u]=isNaN(r[u]=+t(n[u],u,n))?0:+i(n[u],u,n)}}return"function"!=typeof t&&(t=fa(null==t?0:+t)),u.initialize=function(t){n=t,o()},u.strength=function(t){return arguments.length?(i="function"==typeof t?t:fa(+t),o(),u):i},u.x=function(n){return arguments.length?(t="function"==typeof n?n:fa(+n),o(),u):t},u},za=function(t){var n,e,r,i=fa(.1);function u(t){for(var i,u=0,o=n.length;u<o;++u)(i=n[u]).vy+=(r[u]-i.y)*e[u]*t}function o(){if(n){var u,o=n.length;for(e=new Array(o),r=new Array(o),u=0;u<o;++u)e[u]=isNaN(r[u]=+t(n[u],u,n))?0:+i(n[u],u,n)}}return"function"!=typeof t&&(t=fa(null==t?0:+t)),u.initialize=function(t){n=t,o()},u.strength=function(t){return arguments.length?(i="function"==typeof t?t:fa(+t),o(),u):i},u.y=function(n){return arguments.length?(t="function"==typeof n?n:fa(+n),o(),u):t},u},Ra=function(t,n){if((e=(t=n?t.toExponential(n-1):t.toExponential()).indexOf("e"))<0)return null;var e,r=t.slice(0,e);return[r.length>1?r[0]+r.slice(2):r,+t.slice(e+1)]},La=function(t){return(t=Ra(Math.abs(t)))?t[1]:NaN},Da=/^(?:(.)?([<>=^]))?([+\-( ])?([$#])?(0)?(\d+)?(,)?(\.\d+)?(~)?([a-z%])?$/i;function Ua(t){return new qa(t)}function qa(t){if(!(n=Da.exec(t)))throw new Error("invalid format: "+t);var n;this.fill=n[1]||" ",this.align=n[2]||">",this.sign=n[3]||"-",this.symbol=n[4]||"",this.zero=!!n[5],this.width=n[6]&&+n[6],this.comma=!!n[7],this.precision=n[8]&&+n[8].slice(1),this.trim=!!n[9],this.type=n[10]||""}Ua.prototype=qa.prototype,qa.prototype.toString=function(){return this.fill+this.align+this.sign+this.symbol+(this.zero?"0":"")+(null==this.width?"":Math.max(1,0|this.width))+(this.comma?",":"")+(null==this.precision?"":"."+Math.max(0,0|this.precision))+(this.trim?"~":"")+this.type};var Oa,Ya,Ba,Ia,Fa=function(t){t:for(var n,e=t.length,r=1,i=-1;r<e;++r)switch(t[r]){case".":i=n=r;break;case"0":0===i&&(i=r),n=r;break;default:if(i>0){if(!+t[r])break t;i=0}}return i>0?t.slice(0,i)+t.slice(n+1):t},Ha=function(t,n){var e=Ra(t,n);if(!e)return t+"";var r=e[0],i=e[1];return i<0?"0."+new Array(-i).join("0")+r:r.length>i+1?r.slice(0,i+1)+"."+r.slice(i+1):r+new Array(i-r.length+2).join("0")},ja={"%":function(t,n){return(100*t).toFixed(n)},b:function(t){return Math.round(t).toString(2)},c:function(t){return t+""},d:function(t){return Math.round(t).toString(10)},e:function(t,n){return t.toExponential(n)},f:function(t,n){return t.toFixed(n)},g:function(t,n){return t.toPrecision(n)},o:function(t){return Math.round(t).toString(8)},p:function(t,n){return Ha(100*t,n)},r:Ha,s:function(t,n){var e=Ra(t,n);if(!e)return t+"";var r=e[0],i=e[1],u=i-(Oa=3*Math.max(-8,Math.min(8,Math.floor(i/3))))+1,o=r.length;return u===o?r:u>o?r+new Array(u-o+1).join("0"):u>0?r.slice(0,u)+"."+r.slice(u):"0."+new Array(1-u).join("0")+Ra(t,Math.max(0,n+u-1))[0]},X:function(t){return Math.round(t).toString(16).toUpperCase()},x:function(t){return Math.round(t).toString(16)}},Xa=function(t){return t},Ga=["y","z","a","f","p","n","µ","m","","k","M","G","T","P","E","Z","Y"],Va=function(t){var n=t.grouping&&t.thousands?function(t,n){return function(e,r){for(var i=e.length,u=[],o=0,a=t[0],f=0;i>0&&a>0&&(f+a+1>r&&(a=Math.max(1,r-f)),u.push(e.substring(i-=a,i+a)),!((f+=a+1)>r));)a=t[o=(o+1)%t.length];return u.reverse().join(n)}}(t.grouping,t.thousands):Xa,e=t.currency,r=t.decimal,i=t.numerals?function(t){return function(n){return n.replace(/[0-9]/g,function(n){return t[+n]})}}(t.numerals):Xa,u=t.percent||"%";function o(t){var o=(t=Ua(t)).fill,a=t.align,f=t.sign,c=t.symbol,s=t.zero,l=t.width,h=t.comma,d=t.precision,p=t.trim,v=t.type;"n"===v?(h=!0,v="g"):ja[v]||(null==d&&(d=12),p=!0,v="g"),(s||"0"===o&&"="===a)&&(s=!0,o="0",a="=");var g="$"===c?e[0]:"#"===c&&/[boxX]/.test(v)?"0"+v.toLowerCase():"",y="$"===c?e[1]:/[%p]/.test(v)?u:"",_=ja[v],b=/[defgprs%]/.test(v);function m(t){var e,u,c,m=g,x=y;if("c"===v)x=_(t)+x,t="";else{var w=(t=+t)<0;if(t=_(Math.abs(t),d),p&&(t=Fa(t)),w&&0==+t&&(w=!1),m=(w?"("===f?f:"-":"-"===f||"("===f?"":f)+m,x=("s"===v?Ga[8+Oa/3]:"")+x+(w&&"("===f?")":""),b)for(e=-1,u=t.length;++e<u;)if(48>(c=t.charCodeAt(e))||c>57){x=(46===c?r+t.slice(e+1):t.slice(e))+x,t=t.slice(0,e);break}}h&&!s&&(t=n(t,1/0));var M=m.length+t.length+x.length,A=M<l?new Array(l-M+1).join(o):"";switch(h&&s&&(t=n(A+t,A.length?l-x.length:1/0),A=""),a){case"<":t=m+t+x+A;break;case"=":t=m+A+t+x;break;case"^":t=A.slice(0,M=A.length>>1)+m+t+x+A.slice(M);break;default:t=A+m+t+x}return i(t)}return d=null==d?6:/[gprs]/.test(v)?Math.max(1,Math.min(21,d)):Math.max(0,Math.min(20,d)),m.toString=function(){return t+""},m}return{format:o,formatPrefix:function(t,n){var e=o(((t=Ua(t)).type="f",t)),r=3*Math.max(-8,Math.min(8,Math.floor(La(n)/3))),i=Math.pow(10,-r),u=Ga[8+r/3];return function(t){return e(i*t)+u}}}};function $a(t){return Ya=Va(t),Ba=Ya.format,Ia=Ya.formatPrefix,Ya}$a({decimal:".",thousands:",",grouping:[3],currency:["$",""]});var Wa=function(t){return Math.max(0,-La(Math.abs(t)))},Za=function(t,n){return Math.max(0,3*Math.max(-8,Math.min(8,Math.floor(La(n)/3)))-La(Math.abs(t)))},Qa=function(t,n){return t=Math.abs(t),n=Math.abs(n)-t,Math.max(0,La(n)-La(t))+1},Ja=function(){return new Ka};function Ka(){this.reset()}Ka.prototype={constructor:Ka,reset:function(){this.s=this.t=0},add:function(t){nf(tf,t,this.t),nf(this,tf.s,this.s),this.s?this.t+=tf.t:this.s=tf.t},valueOf:function(){return this.s}};var tf=new Ka;function nf(t,n,e){var r=t.s=n+e,i=r-n,u=r-i;t.t=n-u+(e-i)}var ef=1e-6,rf=Math.PI,uf=rf/2,of=rf/4,af=2*rf,ff=180/rf,cf=rf/180,sf=Math.abs,lf=Math.atan,hf=Math.atan2,df=Math.cos,pf=Math.ceil,vf=Math.exp,gf=(Math.floor,Math.log),yf=Math.pow,_f=Math.sin,bf=Math.sign||function(t){return t>0?1:t<0?-1:0},mf=Math.sqrt,xf=Math.tan;function wf(t){return t>1?0:t<-1?rf:Math.acos(t)}function Mf(t){return t>1?uf:t<-1?-uf:Math.asin(t)}function Af(t){return(t=_f(t/2))*t}function Tf(){}function Nf(t,n){t&&Ef.hasOwnProperty(t.type)&&Ef[t.type](t,n)}var Sf={Feature:function(t,n){Nf(t.geometry,n)},FeatureCollection:function(t,n){for(var e=t.features,r=-1,i=e.length;++r<i;)Nf(e[r].geometry,n)}},Ef={Sphere:function(t,n){n.sphere()},Point:function(t,n){t=t.coordinates,n.point(t[0],t[1],t[2])},MultiPoint:function(t,n){for(var e=t.coordinates,r=-1,i=e.length;++r<i;)t=e[r],n.point(t[0],t[1],t[2])},LineString:function(t,n){kf(t.coordinates,n,0)},MultiLineString:function(t,n){for(var e=t.coordinates,r=-1,i=e.length;++r<i;)kf(e[r],n,0)},Polygon:function(t,n){Cf(t.coordinates,n)},MultiPolygon:function(t,n){for(var e=t.coordinates,r=-1,i=e.length;++r<i;)Cf(e[r],n)},GeometryCollection:function(t,n){for(var e=t.geometries,r=-1,i=e.length;++r<i;)Nf(e[r],n)}};function kf(t,n,e){var r,i=-1,u=t.length-e;for(n.lineStart();++i<u;)r=t[i],n.point(r[0],r[1],r[2]);n.lineEnd()}function Cf(t,n){var e=-1,r=t.length;for(n.polygonStart();++e<r;)kf(t[e],n,1);n.polygonEnd()}var Pf,zf,Rf,Lf,Df,Uf=function(t,n){t&&Sf.hasOwnProperty(t.type)?Sf[t.type](t,n):Nf(t,n)},qf=Ja(),Of=Ja(),Yf={point:Tf,lineStart:Tf,lineEnd:Tf,polygonStart:function(){qf.reset(),Yf.lineStart=Bf,Yf.lineEnd=If},polygonEnd:function(){var t=+qf;Of.add(t<0?af+t:t),this.lineStart=this.lineEnd=this.point=Tf},sphere:function(){Of.add(af)}};function Bf(){Yf.point=Ff}function If(){Hf(Pf,zf)}function Ff(t,n){Yf.point=Hf,Pf=t,zf=n,Rf=t*=cf,Lf=df(n=(n*=cf)/2+of),Df=_f(n)}function Hf(t,n){n=(n*=cf)/2+of;var e=(t*=cf)-Rf,r=e>=0?1:-1,i=r*e,u=df(n),o=_f(n),a=Df*o,f=Lf*u+a*df(i),c=a*r*_f(i);qf.add(hf(c,f)),Rf=t,Lf=u,Df=o}var jf=function(t){return Of.reset(),Uf(t,Yf),2*Of};function Xf(t){return[hf(t[1],t[0]),Mf(t[2])]}function Gf(t){var n=t[0],e=t[1],r=df(e);return[r*df(n),r*_f(n),_f(e)]}function Vf(t,n){return t[0]*n[0]+t[1]*n[1]+t[2]*n[2]}function $f(t,n){return[t[1]*n[2]-t[2]*n[1],t[2]*n[0]-t[0]*n[2],t[0]*n[1]-t[1]*n[0]]}function Wf(t,n){t[0]+=n[0],t[1]+=n[1],t[2]+=n[2]}function Zf(t,n){return[t[0]*n,t[1]*n,t[2]*n]}function Qf(t){var n=mf(t[0]*t[0]+t[1]*t[1]+t[2]*t[2]);t[0]/=n,t[1]/=n,t[2]/=n}var Jf,Kf,tc,nc,ec,rc,ic,uc,oc,ac,fc=Ja(),cc={point:sc,lineStart:hc,lineEnd:dc,polygonStart:function(){cc.point=pc,cc.lineStart=vc,cc.lineEnd=gc,fc.reset(),Yf.polygonStart()},polygonEnd:function(){Yf.polygonEnd(),cc.point=sc,cc.lineStart=hc,cc.lineEnd=dc,qf<0?(Jf=-(tc=180),Kf=-(nc=90)):fc>ef?nc=90:fc<-ef&&(Kf=-90),ac[0]=Jf,ac[1]=tc}};function sc(t,n){oc.push(ac=[Jf=t,tc=t]),n<Kf&&(Kf=n),n>nc&&(nc=n)}function lc(t,n){var e=Gf([t*cf,n*cf]);if(uc){var r=$f(uc,e),i=$f([r[1],-r[0],0],r);Qf(i),i=Xf(i);var u,o=t-ec,a=o>0?1:-1,f=i[0]*ff*a,c=sf(o)>180;c^(a*ec<f&&f<a*t)?(u=i[1]*ff)>nc&&(nc=u):c^(a*ec<(f=(f+360)%360-180)&&f<a*t)?(u=-i[1]*ff)<Kf&&(Kf=u):(n<Kf&&(Kf=n),n>nc&&(nc=n)),c?t<ec?yc(Jf,t)>yc(Jf,tc)&&(tc=t):yc(t,tc)>yc(Jf,tc)&&(Jf=t):tc>=Jf?(t<Jf&&(Jf=t),t>tc&&(tc=t)):t>ec?yc(Jf,t)>yc(Jf,tc)&&(tc=t):yc(t,tc)>yc(Jf,tc)&&(Jf=t)}else oc.push(ac=[Jf=t,tc=t]);n<Kf&&(Kf=n),n>nc&&(nc=n),uc=e,ec=t}function hc(){cc.point=lc}function dc(){ac[0]=Jf,ac[1]=tc,cc.point=sc,uc=null}function pc(t,n){if(uc){var e=t-ec;fc.add(sf(e)>180?e+(e>0?360:-360):e)}else rc=t,ic=n;Yf.point(t,n),lc(t,n)}function vc(){Yf.lineStart()}function gc(){pc(rc,ic),Yf.lineEnd(),sf(fc)>ef&&(Jf=-(tc=180)),ac[0]=Jf,ac[1]=tc,uc=null}function yc(t,n){return(n-=t)<0?n+360:n}function _c(t,n){return t[0]-n[0]}function bc(t,n){return t[0]<=t[1]?t[0]<=n&&n<=t[1]:n<t[0]||t[1]<n}var mc,xc,wc,Mc,Ac,Tc,Nc,Sc,Ec,kc,Cc,Pc,zc,Rc,Lc,Dc,Uc=function(t){var n,e,r,i,u,o,a;if(nc=tc=-(Jf=Kf=1/0),oc=[],Uf(t,cc),e=oc.length){for(oc.sort(_c),n=1,u=[r=oc[0]];n<e;++n)bc(r,(i=oc[n])[0])||bc(r,i[1])?(yc(r[0],i[1])>yc(r[0],r[1])&&(r[1]=i[1]),yc(i[0],r[1])>yc(r[0],r[1])&&(r[0]=i[0])):u.push(r=i);for(o=-1/0,n=0,r=u[e=u.length-1];n<=e;r=i,++n)i=u[n],(a=yc(r[1],i[0]))>o&&(o=a,Jf=i[0],tc=r[1])}return oc=ac=null,Jf===1/0||Kf===1/0?[[NaN,NaN],[NaN,NaN]]:[[Jf,Kf],[tc,nc]]},qc={sphere:Tf,point:Oc,lineStart:Bc,lineEnd:Hc,polygonStart:function(){qc.lineStart=jc,qc.lineEnd=Xc},polygonEnd:function(){qc.lineStart=Bc,qc.lineEnd=Hc}};function Oc(t,n){t*=cf;var e=df(n*=cf);Yc(e*df(t),e*_f(t),_f(n))}function Yc(t,n,e){wc+=(t-wc)/++mc,Mc+=(n-Mc)/mc,Ac+=(e-Ac)/mc}function Bc(){qc.point=Ic}function Ic(t,n){t*=cf;var e=df(n*=cf);Rc=e*df(t),Lc=e*_f(t),Dc=_f(n),qc.point=Fc,Yc(Rc,Lc,Dc)}function Fc(t,n){t*=cf;var e=df(n*=cf),r=e*df(t),i=e*_f(t),u=_f(n),o=hf(mf((o=Lc*u-Dc*i)*o+(o=Dc*r-Rc*u)*o+(o=Rc*i-Lc*r)*o),Rc*r+Lc*i+Dc*u);xc+=o,Tc+=o*(Rc+(Rc=r)),Nc+=o*(Lc+(Lc=i)),Sc+=o*(Dc+(Dc=u)),Yc(Rc,Lc,Dc)}function Hc(){qc.point=Oc}function jc(){qc.point=Gc}function Xc(){Vc(Pc,zc),qc.point=Oc}function Gc(t,n){Pc=t,zc=n,t*=cf,n*=cf,qc.point=Vc;var e=df(n);Rc=e*df(t),Lc=e*_f(t),Dc=_f(n),Yc(Rc,Lc,Dc)}function Vc(t,n){t*=cf;var e=df(n*=cf),r=e*df(t),i=e*_f(t),u=_f(n),o=Lc*u-Dc*i,a=Dc*r-Rc*u,f=Rc*i-Lc*r,c=mf(o*o+a*a+f*f),s=Mf(c),l=c&&-s/c;Ec+=l*o,kc+=l*a,Cc+=l*f,xc+=s,Tc+=s*(Rc+(Rc=r)),Nc+=s*(Lc+(Lc=i)),Sc+=s*(Dc+(Dc=u)),Yc(Rc,Lc,Dc)}var $c=function(t){mc=xc=wc=Mc=Ac=Tc=Nc=Sc=Ec=kc=Cc=0,Uf(t,qc);var n=Ec,e=kc,r=Cc,i=n*n+e*e+r*r;return i<1e-12&&(n=Tc,e=Nc,r=Sc,xc<ef&&(n=wc,e=Mc,r=Ac),(i=n*n+e*e+r*r)<1e-12)?[NaN,NaN]:[hf(e,n)*ff,Mf(r/mf(i))*ff]},Wc=function(t){return function(){return t}},Zc=function(t,n){function e(e,r){return e=t(e,r),n(e[0],e[1])}return t.invert&&n.invert&&(e.invert=function(e,r){return(e=n.invert(e,r))&&t.invert(e[0],e[1])}),e};function Qc(t,n){return[t>rf?t-af:t<-rf?t+af:t,n]}function Jc(t,n,e){return(t%=af)?n||e?Zc(ts(t),ns(n,e)):ts(t):n||e?ns(n,e):Qc}function Kc(t){return function(n,e){return[(n+=t)>rf?n-af:n<-rf?n+af:n,e]}}function ts(t){var n=Kc(t);return n.invert=Kc(-t),n}function ns(t,n){var e=df(t),r=_f(t),i=df(n),u=_f(n);function o(t,n){var o=df(n),a=df(t)*o,f=_f(t)*o,c=_f(n),s=c*e+a*r;return[hf(f*i-s*u,a*e-c*r),Mf(s*i+f*u)]}return o.invert=function(t,n){var o=df(n),a=df(t)*o,f=_f(t)*o,c=_f(n),s=c*i-f*u;return[hf(f*i+c*u,a*e+s*r),Mf(s*e-a*r)]},o}Qc.invert=Qc;var es=function(t){function n(n){return(n=t(n[0]*cf,n[1]*cf))[0]*=ff,n[1]*=ff,n}return t=Jc(t[0]*cf,t[1]*cf,t.length>2?t[2]*cf:0),n.invert=function(n){return(n=t.invert(n[0]*cf,n[1]*cf))[0]*=ff,n[1]*=ff,n},n};function rs(t,n,e,r,i,u){if(e){var o=df(n),a=_f(n),f=r*e;null==i?(i=n+r*af,u=n-f/2):(i=is(o,i),u=is(o,u),(r>0?i<u:i>u)&&(i+=r*af));for(var c,s=i;r>0?s>u:s<u;s-=f)c=Xf([o,-a*df(s),-a*_f(s)]),t.point(c[0],c[1])}}function is(t,n){(n=Gf(n))[0]-=t,Qf(n);var e=wf(-n[1]);return((-n[2]<0?-e:e)+af-ef)%af}var us=function(){var t,n,e=Wc([0,0]),r=Wc(90),i=Wc(6),u={point:function(e,r){t.push(e=n(e,r)),e[0]*=ff,e[1]*=ff}};function o(){var o=e.apply(this,arguments),a=r.apply(this,arguments)*cf,f=i.apply(this,arguments)*cf;return t=[],n=Jc(-o[0]*cf,-o[1]*cf,0).invert,rs(u,a,f,1),o={type:"Polygon",coordinates:[t]},t=n=null,o}return o.center=function(t){return arguments.length?(e="function"==typeof t?t:Wc([+t[0],+t[1]]),o):e},o.radius=function(t){return arguments.length?(r="function"==typeof t?t:Wc(+t),o):r},o.precision=function(t){return arguments.length?(i="function"==typeof t?t:Wc(+t),o):i},o},os=function(){var t,n=[];return{point:function(n,e){t.push([n,e])},lineStart:function(){n.push(t=[])},lineEnd:Tf,rejoin:function(){n.length>1&&n.push(n.pop().concat(n.shift()))},result:function(){var e=n;return n=[],t=null,e}}},as=function(t,n){return sf(t[0]-n[0])<ef&&sf(t[1]-n[1])<ef};function fs(t,n,e,r){this.x=t,this.z=n,this.o=e,this.e=r,this.v=!1,this.n=this.p=null}var cs=function(t,n,e,r,i){var u,o,a=[],f=[];if(t.forEach(function(t){if(!((n=t.length-1)<=0)){var n,e,r=t[0],o=t[n];if(as(r,o)){for(i.lineStart(),u=0;u<n;++u)i.point((r=t[u])[0],r[1]);i.lineEnd()}else a.push(e=new fs(r,t,null,!0)),f.push(e.o=new fs(r,null,e,!1)),a.push(e=new fs(o,t,null,!1)),f.push(e.o=new fs(o,null,e,!0))}}),a.length){for(f.sort(n),ss(a),ss(f),u=0,o=f.length;u<o;++u)f[u].e=e=!e;for(var c,s,l=a[0];;){for(var h=l,d=!0;h.v;)if((h=h.n)===l)return;c=h.z,i.lineStart();do{if(h.v=h.o.v=!0,h.e){if(d)for(u=0,o=c.length;u<o;++u)i.point((s=c[u])[0],s[1]);else r(h.x,h.n.x,1,i);h=h.n}else{if(d)for(c=h.p.z,u=c.length-1;u>=0;--u)i.point((s=c[u])[0],s[1]);else r(h.x,h.p.x,-1,i);h=h.p}c=(h=h.o).z,d=!d}while(!h.v);i.lineEnd()}}};function ss(t){if(n=t.length){for(var n,e,r=0,i=t[0];++r<n;)i.n=e=t[r],e.p=i,i=e;i.n=e=t[0],e.p=i}}var ls=Ja(),hs=function(t,n){var e=n[0],r=n[1],i=_f(r),u=[_f(e),-df(e),0],o=0,a=0;ls.reset(),1===i?r=uf+ef:-1===i&&(r=-uf-ef);for(var f=0,c=t.length;f<c;++f)if(l=(s=t[f]).length)for(var s,l,h=s[l-1],d=h[0],p=h[1]/2+of,v=_f(p),g=df(p),y=0;y<l;++y,d=b,v=x,g=w,h=_){var _=s[y],b=_[0],m=_[1]/2+of,x=_f(m),w=df(m),M=b-d,A=M>=0?1:-1,T=A*M,N=T>rf,S=v*x;if(ls.add(hf(S*A*_f(T),g*w+S*df(T))),o+=N?M+A*af:M,N^d>=e^b>=e){var E=$f(Gf(h),Gf(_));Qf(E);var k=$f(u,E);Qf(k);var C=(N^M>=0?-1:1)*Mf(k[2]);(r>C||r===C&&(E[0]||E[1]))&&(a+=N^M>=0?1:-1)}}return(o<-ef||o<ef&&ls<-ef)^1&a},ds=function(t,n,e,r){return function(i){var u,o,a,f=n(i),c=os(),s=n(c),l=!1,h={point:d,lineStart:v,lineEnd:g,polygonStart:function(){h.point=y,h.lineStart=_,h.lineEnd=b,o=[],u=[]},polygonEnd:function(){h.point=d,h.lineStart=v,h.lineEnd=g,o=q(o);var t=hs(u,r);o.length?(l||(i.polygonStart(),l=!0),cs(o,vs,t,e,i)):t&&(l||(i.polygonStart(),l=!0),i.lineStart(),e(null,null,1,i),i.lineEnd()),l&&(i.polygonEnd(),l=!1),o=u=null},sphere:function(){i.polygonStart(),i.lineStart(),e(null,null,1,i),i.lineEnd(),i.polygonEnd()}};function d(n,e){t(n,e)&&i.point(n,e)}function p(t,n){f.point(t,n)}function v(){h.point=p,f.lineStart()}function g(){h.point=d,f.lineEnd()}function y(t,n){a.push([t,n]),s.point(t,n)}function _(){s.lineStart(),a=[]}function b(){y(a[0][0],a[0][1]),s.lineEnd();var t,n,e,r,f=s.clean(),h=c.result(),d=h.length;if(a.pop(),u.push(a),a=null,d)if(1&f){if((n=(e=h[0]).length-1)>0){for(l||(i.polygonStart(),l=!0),i.lineStart(),t=0;t<n;++t)i.point((r=e[t])[0],r[1]);i.lineEnd()}}else d>1&&2&f&&h.push(h.pop().concat(h.shift())),o.push(h.filter(ps))}return h}};function ps(t){return t.length>1}function vs(t,n){return((t=t.x)[0]<0?t[1]-uf-ef:uf-t[1])-((n=n.x)[0]<0?n[1]-uf-ef:uf-n[1])}var gs=ds(function(){return!0},function(t){var n,e=NaN,r=NaN,i=NaN;return{lineStart:function(){t.lineStart(),n=1},point:function(u,o){var a=u>0?rf:-rf,f=sf(u-e);sf(f-rf)<ef?(t.point(e,r=(r+o)/2>0?uf:-uf),t.point(i,r),t.lineEnd(),t.lineStart(),t.point(a,r),t.point(u,r),n=0):i!==a&&f>=rf&&(sf(e-i)<ef&&(e-=i*ef),sf(u-a)<ef&&(u-=a*ef),r=function(t,n,e,r){var i,u,o=_f(t-e);return sf(o)>ef?lf((_f(n)*(u=df(r))*_f(e)-_f(r)*(i=df(n))*_f(t))/(i*u*o)):(n+r)/2}(e,r,u,o),t.point(i,r),t.lineEnd(),t.lineStart(),t.point(a,r),n=0),t.point(e=u,r=o),i=a},lineEnd:function(){t.lineEnd(),e=r=NaN},clean:function(){return 2-n}}},function(t,n,e,r){var i;if(null==t)i=e*uf,r.point(-rf,i),r.point(0,i),r.point(rf,i),r.point(rf,0),r.point(rf,-i),r.point(0,-i),r.point(-rf,-i),r.point(-rf,0),r.point(-rf,i);else if(sf(t[0]-n[0])>ef){var u=t[0]<n[0]?rf:-rf;i=e*u/2,r.point(-u,i),r.point(0,i),r.point(u,i)}else r.point(n[0],n[1])},[-rf,-uf]);var ys=function(t){var n=df(t),e=6*cf,r=n>0,i=sf(n)>ef;function u(t,e){return df(t)*df(e)>n}function o(t,e,r){var i=[1,0,0],u=$f(Gf(t),Gf(e)),o=Vf(u,u),a=u[0],f=o-a*a;if(!f)return!r&&t;var c=n*o/f,s=-n*a/f,l=$f(i,u),h=Zf(i,c);Wf(h,Zf(u,s));var d=l,p=Vf(h,d),v=Vf(d,d),g=p*p-v*(Vf(h,h)-1);if(!(g<0)){var y=mf(g),_=Zf(d,(-p-y)/v);if(Wf(_,h),_=Xf(_),!r)return _;var b,m=t[0],x=e[0],w=t[1],M=e[1];x<m&&(b=m,m=x,x=b);var A=x-m,T=sf(A-rf)<ef;if(!T&&M<w&&(b=w,w=M,M=b),T||A<ef?T?w+M>0^_[1]<(sf(_[0]-m)<ef?w:M):w<=_[1]&&_[1]<=M:A>rf^(m<=_[0]&&_[0]<=x)){var N=Zf(d,(-p+y)/v);return Wf(N,h),[_,Xf(N)]}}}function a(n,e){var i=r?t:rf-t,u=0;return n<-i?u|=1:n>i&&(u|=2),e<-i?u|=4:e>i&&(u|=8),u}return ds(u,function(t){var n,e,f,c,s;return{lineStart:function(){c=f=!1,s=1},point:function(l,h){var d,p=[l,h],v=u(l,h),g=r?v?0:a(l,h):v?a(l+(l<0?rf:-rf),h):0;if(!n&&(c=f=v)&&t.lineStart(),v!==f&&(!(d=o(n,p))||as(n,d)||as(p,d))&&(p[0]+=ef,p[1]+=ef,v=u(p[0],p[1])),v!==f)s=0,v?(t.lineStart(),d=o(p,n),t.point(d[0],d[1])):(d=o(n,p),t.point(d[0],d[1]),t.lineEnd()),n=d;else if(i&&n&&r^v){var y;g&e||!(y=o(p,n,!0))||(s=0,r?(t.lineStart(),t.point(y[0][0],y[0][1]),t.point(y[1][0],y[1][1]),t.lineEnd()):(t.point(y[1][0],y[1][1]),t.lineEnd(),t.lineStart(),t.point(y[0][0],y[0][1])))}!v||n&&as(n,p)||t.point(p[0],p[1]),n=p,f=v,e=g},lineEnd:function(){f&&t.lineEnd(),n=null},clean:function(){return s|(c&&f)<<1}}},function(n,r,i,u){rs(u,t,e,i,n,r)},r?[0,-t]:[-rf,t-rf])},_s=function(t,n,e,r,i,u){var o,a=t[0],f=t[1],c=0,s=1,l=n[0]-a,h=n[1]-f;if(o=e-a,l||!(o>0)){if(o/=l,l<0){if(o<c)return;o<s&&(s=o)}else if(l>0){if(o>s)return;o>c&&(c=o)}if(o=i-a,l||!(o<0)){if(o/=l,l<0){if(o>s)return;o>c&&(c=o)}else if(l>0){if(o<c)return;o<s&&(s=o)}if(o=r-f,h||!(o>0)){if(o/=h,h<0){if(o<c)return;o<s&&(s=o)}else if(h>0){if(o>s)return;o>c&&(c=o)}if(o=u-f,h||!(o<0)){if(o/=h,h<0){if(o>s)return;o>c&&(c=o)}else if(h>0){if(o<c)return;o<s&&(s=o)}return c>0&&(t[0]=a+c*l,t[1]=f+c*h),s<1&&(n[0]=a+s*l,n[1]=f+s*h),!0}}}}},bs=1e9,ms=-bs;function xs(t,n,e,r){function i(i,u){return t<=i&&i<=e&&n<=u&&u<=r}function u(i,u,a,c){var s=0,l=0;if(null==i||(s=o(i,a))!==(l=o(u,a))||f(i,u)<0^a>0)do{c.point(0===s||3===s?t:e,s>1?r:n)}while((s=(s+a+4)%4)!==l);else c.point(u[0],u[1])}function o(r,i){return sf(r[0]-t)<ef?i>0?0:3:sf(r[0]-e)<ef?i>0?2:1:sf(r[1]-n)<ef?i>0?1:0:i>0?3:2}function a(t,n){return f(t.x,n.x)}function f(t,n){var e=o(t,1),r=o(n,1);return e!==r?e-r:0===e?n[1]-t[1]:1===e?t[0]-n[0]:2===e?t[1]-n[1]:n[0]-t[0]}return function(o){var f,c,s,l,h,d,p,v,g,y,_,b=o,m=os(),x={point:w,lineStart:function(){x.point=M,c&&c.push(s=[]);y=!0,g=!1,p=v=NaN},lineEnd:function(){f&&(M(l,h),d&&g&&m.rejoin(),f.push(m.result()));x.point=w,g&&b.lineEnd()},polygonStart:function(){b=m,f=[],c=[],_=!0},polygonEnd:function(){var n=function(){for(var n=0,e=0,i=c.length;e<i;++e)for(var u,o,a=c[e],f=1,s=a.length,l=a[0],h=l[0],d=l[1];f<s;++f)u=h,o=d,l=a[f],h=l[0],d=l[1],o<=r?d>r&&(h-u)*(r-o)>(d-o)*(t-u)&&++n:d<=r&&(h-u)*(r-o)<(d-o)*(t-u)&&--n;return n}(),e=_&&n,i=(f=q(f)).length;(e||i)&&(o.polygonStart(),e&&(o.lineStart(),u(null,null,1,o),o.lineEnd()),i&&cs(f,a,n,u,o),o.polygonEnd());b=o,f=c=s=null}};function w(t,n){i(t,n)&&b.point(t,n)}function M(u,o){var a=i(u,o);if(c&&s.push([u,o]),y)l=u,h=o,d=a,y=!1,a&&(b.lineStart(),b.point(u,o));else if(a&&g)b.point(u,o);else{var f=[p=Math.max(ms,Math.min(bs,p)),v=Math.max(ms,Math.min(bs,v))],m=[u=Math.max(ms,Math.min(bs,u)),o=Math.max(ms,Math.min(bs,o))];_s(f,m,t,n,e,r)?(g||(b.lineStart(),b.point(f[0],f[1])),b.point(m[0],m[1]),a||b.lineEnd(),_=!1):a&&(b.lineStart(),b.point(u,o),_=!1)}p=u,v=o,g=a}return x}}var ws,Ms,As,Ts=function(){var t,n,e,r=0,i=0,u=960,o=500;return e={stream:function(e){return t&&n===e?t:t=xs(r,i,u,o)(n=e)},extent:function(a){return arguments.length?(r=+a[0][0],i=+a[0][1],u=+a[1][0],o=+a[1][1],t=n=null,e):[[r,i],[u,o]]}}},Ns=Ja(),Ss={sphere:Tf,point:Tf,lineStart:function(){Ss.point=ks,Ss.lineEnd=Es},lineEnd:Tf,polygonStart:Tf,polygonEnd:Tf};function Es(){Ss.point=Ss.lineEnd=Tf}function ks(t,n){ws=t*=cf,Ms=_f(n*=cf),As=df(n),Ss.point=Cs}function Cs(t,n){t*=cf;var e=_f(n*=cf),r=df(n),i=sf(t-ws),u=df(i),o=r*_f(i),a=As*e-Ms*r*u,f=Ms*e+As*r*u;Ns.add(hf(mf(o*o+a*a),f)),ws=t,Ms=e,As=r}var Ps=function(t){return Ns.reset(),Uf(t,Ss),+Ns},zs=[null,null],Rs={type:"LineString",coordinates:zs},Ls=function(t,n){return zs[0]=t,zs[1]=n,Ps(Rs)},Ds={Feature:function(t,n){return qs(t.geometry,n)},FeatureCollection:function(t,n){for(var e=t.features,r=-1,i=e.length;++r<i;)if(qs(e[r].geometry,n))return!0;return!1}},Us={Sphere:function(){return!0},Point:function(t,n){return Os(t.coordinates,n)},MultiPoint:function(t,n){for(var e=t.coordinates,r=-1,i=e.length;++r<i;)if(Os(e[r],n))return!0;return!1},LineString:function(t,n){return Ys(t.coordinates,n)},MultiLineString:function(t,n){for(var e=t.coordinates,r=-1,i=e.length;++r<i;)if(Ys(e[r],n))return!0;return!1},Polygon:function(t,n){return Bs(t.coordinates,n)},MultiPolygon:function(t,n){for(var e=t.coordinates,r=-1,i=e.length;++r<i;)if(Bs(e[r],n))return!0;return!1},GeometryCollection:function(t,n){for(var e=t.geometries,r=-1,i=e.length;++r<i;)if(qs(e[r],n))return!0;return!1}};function qs(t,n){return!(!t||!Us.hasOwnProperty(t.type))&&Us[t.type](t,n)}function Os(t,n){return 0===Ls(t,n)}function Ys(t,n){var e=Ls(t[0],t[1]);return Ls(t[0],n)+Ls(n,t[1])<=e+ef}function Bs(t,n){return!!hs(t.map(Is),Fs(n))}function Is(t){return(t=t.map(Fs)).pop(),t}function Fs(t){return[t[0]*cf,t[1]*cf]}var Hs=function(t,n){return(t&&Ds.hasOwnProperty(t.type)?Ds[t.type]:qs)(t,n)};function js(t,n,e){var r=w(t,n-ef,e).concat(n);return function(t){return r.map(function(n){return[t,n]})}}function Xs(t,n,e){var r=w(t,n-ef,e).concat(n);return function(t){return r.map(function(n){return[n,t]})}}function Gs(){var t,n,e,r,i,u,o,a,f,c,s,l,h=10,d=h,p=90,v=360,g=2.5;function y(){return{type:"MultiLineString",coordinates:_()}}function _(){return w(pf(r/p)*p,e,p).map(s).concat(w(pf(a/v)*v,o,v).map(l)).concat(w(pf(n/h)*h,t,h).filter(function(t){return sf(t%p)>ef}).map(f)).concat(w(pf(u/d)*d,i,d).filter(function(t){return sf(t%v)>ef}).map(c))}return y.lines=function(){return _().map(function(t){return{type:"LineString",coordinates:t}})},y.outline=function(){return{type:"Polygon",coordinates:[s(r).concat(l(o).slice(1),s(e).reverse().slice(1),l(a).reverse().slice(1))]}},y.extent=function(t){return arguments.length?y.extentMajor(t).extentMinor(t):y.extentMinor()},y.extentMajor=function(t){return arguments.length?(r=+t[0][0],e=+t[1][0],a=+t[0][1],o=+t[1][1],r>e&&(t=r,r=e,e=t),a>o&&(t=a,a=o,o=t),y.precision(g)):[[r,a],[e,o]]},y.extentMinor=function(e){return arguments.length?(n=+e[0][0],t=+e[1][0],u=+e[0][1],i=+e[1][1],n>t&&(e=n,n=t,t=e),u>i&&(e=u,u=i,i=e),y.precision(g)):[[n,u],[t,i]]},y.step=function(t){return arguments.length?y.stepMajor(t).stepMinor(t):y.stepMinor()},y.stepMajor=function(t){return arguments.length?(p=+t[0],v=+t[1],y):[p,v]},y.stepMinor=function(t){return arguments.length?(h=+t[0],d=+t[1],y):[h,d]},y.precision=function(h){return arguments.length?(g=+h,f=js(u,i,90),c=Xs(n,t,g),s=js(a,o,90),l=Xs(r,e,g),y):g},y.extentMajor([[-180,-90+ef],[180,90-ef]]).extentMinor([[-180,-80-ef],[180,80+ef]])}function Vs(){return Gs()()}var $s,Ws,Zs,Qs,Js=function(t,n){var e=t[0]*cf,r=t[1]*cf,i=n[0]*cf,u=n[1]*cf,o=df(r),a=_f(r),f=df(u),c=_f(u),s=o*df(e),l=o*_f(e),h=f*df(i),d=f*_f(i),p=2*Mf(mf(Af(u-r)+o*f*Af(i-e))),v=_f(p),g=p?function(t){var n=_f(t*=p)/v,e=_f(p-t)/v,r=e*s+n*h,i=e*l+n*d,u=e*a+n*c;return[hf(i,r)*ff,hf(u,mf(r*r+i*i))*ff]}:function(){return[e*ff,r*ff]};return g.distance=p,g},Ks=function(t){return t},tl=Ja(),nl=Ja(),el={point:Tf,lineStart:Tf,lineEnd:Tf,polygonStart:function(){el.lineStart=rl,el.lineEnd=ol},polygonEnd:function(){el.lineStart=el.lineEnd=el.point=Tf,tl.add(sf(nl)),nl.reset()},result:function(){var t=tl/2;return tl.reset(),t}};function rl(){el.point=il}function il(t,n){el.point=ul,$s=Zs=t,Ws=Qs=n}function ul(t,n){nl.add(Qs*t-Zs*n),Zs=t,Qs=n}function ol(){ul($s,Ws)}var al=el,fl=1/0,cl=fl,sl=-fl,ll=sl;var hl,dl,pl,vl,gl={point:function(t,n){t<fl&&(fl=t);t>sl&&(sl=t);n<cl&&(cl=n);n>ll&&(ll=n)},lineStart:Tf,lineEnd:Tf,polygonStart:Tf,polygonEnd:Tf,result:function(){var t=[[fl,cl],[sl,ll]];return sl=ll=-(cl=fl=1/0),t}},yl=0,_l=0,bl=0,ml=0,xl=0,wl=0,Ml=0,Al=0,Tl=0,Nl={point:Sl,lineStart:El,lineEnd:Pl,polygonStart:function(){Nl.lineStart=zl,Nl.lineEnd=Rl},polygonEnd:function(){Nl.point=Sl,Nl.lineStart=El,Nl.lineEnd=Pl},result:function(){var t=Tl?[Ml/Tl,Al/Tl]:wl?[ml/wl,xl/wl]:bl?[yl/bl,_l/bl]:[NaN,NaN];return yl=_l=bl=ml=xl=wl=Ml=Al=Tl=0,t}};function Sl(t,n){yl+=t,_l+=n,++bl}function El(){Nl.point=kl}function kl(t,n){Nl.point=Cl,Sl(pl=t,vl=n)}function Cl(t,n){var e=t-pl,r=n-vl,i=mf(e*e+r*r);ml+=i*(pl+t)/2,xl+=i*(vl+n)/2,wl+=i,Sl(pl=t,vl=n)}function Pl(){Nl.point=Sl}function zl(){Nl.point=Ll}function Rl(){Dl(hl,dl)}function Ll(t,n){Nl.point=Dl,Sl(hl=pl=t,dl=vl=n)}function Dl(t,n){var e=t-pl,r=n-vl,i=mf(e*e+r*r);ml+=i*(pl+t)/2,xl+=i*(vl+n)/2,wl+=i,Ml+=(i=vl*t-pl*n)*(pl+t),Al+=i*(vl+n),Tl+=3*i,Sl(pl=t,vl=n)}var Ul=Nl;function ql(t){this._context=t}ql.prototype={_radius:4.5,pointRadius:function(t){return this._radius=t,this},polygonStart:function(){this._line=0},polygonEnd:function(){this._line=NaN},lineStart:function(){this._point=0},lineEnd:function(){0===this._line&&this._context.closePath(),this._point=NaN},point:function(t,n){switch(this._point){case 0:this._context.moveTo(t,n),this._point=1;break;case 1:this._context.lineTo(t,n);break;default:this._context.moveTo(t+this._radius,n),this._context.arc(t,n,this._radius,0,af)}},result:Tf};var Ol,Yl,Bl,Il,Fl,Hl=Ja(),jl={point:Tf,lineStart:function(){jl.point=Xl},lineEnd:function(){Ol&&Gl(Yl,Bl),jl.point=Tf},polygonStart:function(){Ol=!0},polygonEnd:function(){Ol=null},result:function(){var t=+Hl;return Hl.reset(),t}};function Xl(t,n){jl.point=Gl,Yl=Il=t,Bl=Fl=n}function Gl(t,n){Il-=t,Fl-=n,Hl.add(mf(Il*Il+Fl*Fl)),Il=t,Fl=n}var Vl=jl;function $l(){this._string=[]}function Wl(t){return"m0,"+t+"a"+t+","+t+" 0 1,1 0,"+-2*t+"a"+t+","+t+" 0 1,1 0,"+2*t+"z"}$l.prototype={_radius:4.5,_circle:Wl(4.5),pointRadius:function(t){return(t=+t)!==this._radius&&(this._radius=t,this._circle=null),this},polygonStart:function(){this._line=0},polygonEnd:function(){this._line=NaN},lineStart:function(){this._point=0},lineEnd:function(){0===this._line&&this._string.push("Z"),this._point=NaN},point:function(t,n){switch(this._point){case 0:this._string.push("M",t,",",n),this._point=1;break;case 1:this._string.push("L",t,",",n);break;default:null==this._circle&&(this._circle=Wl(this._radius)),this._string.push("M",t,",",n,this._circle)}},result:function(){if(this._string.length){var t=this._string.join("");return this._string=[],t}return null}};var Zl=function(t,n){var e,r,i=4.5;function u(t){return t&&("function"==typeof i&&r.pointRadius(+i.apply(this,arguments)),Uf(t,e(r))),r.result()}return u.area=function(t){return Uf(t,e(al)),al.result()},u.measure=function(t){return Uf(t,e(Vl)),Vl.result()},u.bounds=function(t){return Uf(t,e(gl)),gl.result()},u.centroid=function(t){return Uf(t,e(Ul)),Ul.result()},u.projection=function(n){return arguments.length?(e=null==n?(t=null,Ks):(t=n).stream,u):t},u.context=function(t){return arguments.length?(r=null==t?(n=null,new $l):new ql(n=t),"function"!=typeof i&&r.pointRadius(i),u):n},u.pointRadius=function(t){return arguments.length?(i="function"==typeof t?t:(r.pointRadius(+t),+t),u):i},u.projection(t).context(n)},Ql=function(t){return{stream:Jl(t)}};function Jl(t){return function(n){var e=new Kl;for(var r in t)e[r]=t[r];return e.stream=n,e}}function Kl(){}function th(t,n,e){var r=t.clipExtent&&t.clipExtent();return t.scale(150).translate([0,0]),null!=r&&t.clipExtent(null),Uf(e,t.stream(gl)),n(gl.result()),null!=r&&t.clipExtent(r),t}function nh(t,n,e){return th(t,function(e){var r=n[1][0]-n[0][0],i=n[1][1]-n[0][1],u=Math.min(r/(e[1][0]-e[0][0]),i/(e[1][1]-e[0][1])),o=+n[0][0]+(r-u*(e[1][0]+e[0][0]))/2,a=+n[0][1]+(i-u*(e[1][1]+e[0][1]))/2;t.scale(150*u).translate([o,a])},e)}function eh(t,n,e){return nh(t,[[0,0],n],e)}function rh(t,n,e){return th(t,function(e){var r=+n,i=r/(e[1][0]-e[0][0]),u=(r-i*(e[1][0]+e[0][0]))/2,o=-i*e[0][1];t.scale(150*i).translate([u,o])},e)}function ih(t,n,e){return th(t,function(e){var r=+n,i=r/(e[1][1]-e[0][1]),u=-i*e[0][0],o=(r-i*(e[1][1]+e[0][1]))/2;t.scale(150*i).translate([u,o])},e)}Kl.prototype={constructor:Kl,point:function(t,n){this.stream.point(t,n)},sphere:function(){this.stream.sphere()},lineStart:function(){this.stream.lineStart()},lineEnd:function(){this.stream.lineEnd()},polygonStart:function(){this.stream.polygonStart()},polygonEnd:function(){this.stream.polygonEnd()}};var uh=16,oh=df(30*cf),ah=function(t,n){return+n?function(t,n){function e(r,i,u,o,a,f,c,s,l,h,d,p,v,g){var y=c-r,_=s-i,b=y*y+_*_;if(b>4*n&&v--){var m=o+h,x=a+d,w=f+p,M=mf(m*m+x*x+w*w),A=Mf(w/=M),T=sf(sf(w)-1)<ef||sf(u-l)<ef?(u+l)/2:hf(x,m),N=t(T,A),S=N[0],E=N[1],k=S-r,C=E-i,P=_*k-y*C;(P*P/b>n||sf((y*k+_*C)/b-.5)>.3||o*h+a*d+f*p<oh)&&(e(r,i,u,o,a,f,S,E,T,m/=M,x/=M,w,v,g),g.point(S,E),e(S,E,T,m,x,w,c,s,l,h,d,p,v,g))}}return function(n){var r,i,u,o,a,f,c,s,l,h,d,p,v={point:g,lineStart:y,lineEnd:b,polygonStart:function(){n.polygonStart(),v.lineStart=m},polygonEnd:function(){n.polygonEnd(),v.lineStart=y}};function g(e,r){e=t(e,r),n.point(e[0],e[1])}function y(){s=NaN,v.point=_,n.lineStart()}function _(r,i){var u=Gf([r,i]),o=t(r,i);e(s,l,c,h,d,p,s=o[0],l=o[1],c=r,h=u[0],d=u[1],p=u[2],uh,n),n.point(s,l)}function b(){v.point=g,n.lineEnd()}function m(){y(),v.point=x,v.lineEnd=w}function x(t,n){_(r=t,n),i=s,u=l,o=h,a=d,f=p,v.point=_}function w(){e(s,l,c,h,d,p,i,u,r,o,a,f,uh,n),v.lineEnd=b,b()}return v}}(t,n):function(t){return Jl({point:function(n,e){n=t(n,e),this.stream.point(n[0],n[1])}})}(t)};var fh=Jl({point:function(t,n){this.stream.point(t*cf,n*cf)}});function ch(t,n,e,r){var i=df(r),u=_f(r),o=i*t,a=u*t,f=i/t,c=u/t,s=(u*e-i*n)/t,l=(u*n+i*e)/t;function h(t,r){return[o*t-a*r+n,e-a*t-o*r]}return h.invert=function(t,n){return[f*t-c*n+s,l-c*t-f*n]},h}function sh(t){return lh(function(){return t})()}function lh(t){var n,e,r,i,u,o,a,f,c,s,l=150,h=480,d=250,p=0,v=0,g=0,y=0,_=0,b=0,m=null,x=gs,w=null,M=Ks,A=.5;function T(t){return f(t[0]*cf,t[1]*cf)}function N(t){return(t=f.invert(t[0],t[1]))&&[t[0]*ff,t[1]*ff]}function S(){var t=ch(l,0,0,b).apply(null,n(p,v)),r=(b?ch:function(t,n,e){function r(r,i){return[n+t*r,e-t*i]}return r.invert=function(r,i){return[(r-n)/t,(e-i)/t]},r})(l,h-t[0],d-t[1],b);return e=Jc(g,y,_),a=Zc(n,r),f=Zc(e,a),o=ah(a,A),E()}function E(){return c=s=null,T}return T.stream=function(t){return c&&s===t?c:c=fh(function(t){return Jl({point:function(n,e){var r=t(n,e);return this.stream.point(r[0],r[1])}})}(e)(x(o(M(s=t)))))},T.preclip=function(t){return arguments.length?(x=t,m=void 0,E()):x},T.postclip=function(t){return arguments.length?(M=t,w=r=i=u=null,E()):M},T.clipAngle=function(t){return arguments.length?(x=+t?ys(m=t*cf):(m=null,gs),E()):m*ff},T.clipExtent=function(t){return arguments.length?(M=null==t?(w=r=i=u=null,Ks):xs(w=+t[0][0],r=+t[0][1],i=+t[1][0],u=+t[1][1]),E()):null==w?null:[[w,r],[i,u]]},T.scale=function(t){return arguments.length?(l=+t,S()):l},T.translate=function(t){return arguments.length?(h=+t[0],d=+t[1],S()):[h,d]},T.center=function(t){return arguments.length?(p=t[0]%360*cf,v=t[1]%360*cf,S()):[p*ff,v*ff]},T.rotate=function(t){return arguments.length?(g=t[0]%360*cf,y=t[1]%360*cf,_=t.length>2?t[2]%360*cf:0,S()):[g*ff,y*ff,_*ff]},T.angle=function(t){return arguments.length?(b=t%360*cf,S()):b*ff},T.precision=function(t){return arguments.length?(o=ah(a,A=t*t),E()):mf(A)},T.fitExtent=function(t,n){return nh(T,t,n)},T.fitSize=function(t,n){return eh(T,t,n)},T.fitWidth=function(t,n){return rh(T,t,n)},T.fitHeight=function(t,n){return ih(T,t,n)},function(){return n=t.apply(this,arguments),T.invert=n.invert&&N,S()}}function hh(t){var n=0,e=rf/3,r=lh(t),i=r(n,e);return i.parallels=function(t){return arguments.length?r(n=t[0]*cf,e=t[1]*cf):[n*ff,e*ff]},i}function dh(t,n){var e=_f(t),r=(e+_f(n))/2;if(sf(r)<ef)return function(t){var n=df(t);function e(t,e){return[t*n,_f(e)/n]}return e.invert=function(t,e){return[t/n,Mf(e*n)]},e}(t);var i=1+e*(2*r-e),u=mf(i)/r;function o(t,n){var e=mf(i-2*r*_f(n))/r;return[e*_f(t*=r),u-e*df(t)]}return o.invert=function(t,n){var e=u-n;return[hf(t,sf(e))/r*bf(e),Mf((i-(t*t+e*e)*r*r)/(2*r))]},o}var ph=function(){return hh(dh).scale(155.424).center([0,33.6442])},vh=function(){return ph().parallels([29.5,45.5]).scale(1070).translate([480,250]).rotate([96,0]).center([-.6,38.7])};var gh=function(){var t,n,e,r,i,u,o=vh(),a=ph().rotate([154,0]).center([-2,58.5]).parallels([55,65]),f=ph().rotate([157,0]).center([-3,19.9]).parallels([8,18]),c={point:function(t,n){u=[t,n]}};function s(t){var n=t[0],o=t[1];return u=null,e.point(n,o),u||(r.point(n,o),u)||(i.point(n,o),u)}function l(){return t=n=null,s}return s.invert=function(t){var n=o.scale(),e=o.translate(),r=(t[0]-e[0])/n,i=(t[1]-e[1])/n;return(i>=.12&&i<.234&&r>=-.425&&r<-.214?a:i>=.166&&i<.234&&r>=-.214&&r<-.115?f:o).invert(t)},s.stream=function(e){return t&&n===e?t:t=function(t){var n=t.length;return{point:function(e,r){for(var i=-1;++i<n;)t[i].point(e,r)},sphere:function(){for(var e=-1;++e<n;)t[e].sphere()},lineStart:function(){for(var e=-1;++e<n;)t[e].lineStart()},lineEnd:function(){for(var e=-1;++e<n;)t[e].lineEnd()},polygonStart:function(){for(var e=-1;++e<n;)t[e].polygonStart()},polygonEnd:function(){for(var e=-1;++e<n;)t[e].polygonEnd()}}}([o.stream(n=e),a.stream(e),f.stream(e)])},s.precision=function(t){return arguments.length?(o.precision(t),a.precision(t),f.precision(t),l()):o.precision()},s.scale=function(t){return arguments.length?(o.scale(t),a.scale(.35*t),f.scale(t),s.translate(o.translate())):o.scale()},s.translate=function(t){if(!arguments.length)return o.translate();var n=o.scale(),u=+t[0],s=+t[1];return e=o.translate(t).clipExtent([[u-.455*n,s-.238*n],[u+.455*n,s+.238*n]]).stream(c),r=a.translate([u-.307*n,s+.201*n]).clipExtent([[u-.425*n+ef,s+.12*n+ef],[u-.214*n-ef,s+.234*n-ef]]).stream(c),i=f.translate([u-.205*n,s+.212*n]).clipExtent([[u-.214*n+ef,s+.166*n+ef],[u-.115*n-ef,s+.234*n-ef]]).stream(c),l()},s.fitExtent=function(t,n){return nh(s,t,n)},s.fitSize=function(t,n){return eh(s,t,n)},s.fitWidth=function(t,n){return rh(s,t,n)},s.fitHeight=function(t,n){return ih(s,t,n)},s.scale(1070)};function yh(t){return function(n,e){var r=df(n),i=df(e),u=t(r*i);return[u*i*_f(n),u*_f(e)]}}function _h(t){return function(n,e){var r=mf(n*n+e*e),i=t(r),u=_f(i),o=df(i);return[hf(n*u,r*o),Mf(r&&e*u/r)]}}var bh=yh(function(t){return mf(2/(1+t))});bh.invert=_h(function(t){return 2*Mf(t/2)});var mh=function(){return sh(bh).scale(124.75).clipAngle(179.999)},xh=yh(function(t){return(t=wf(t))&&t/_f(t)});xh.invert=_h(function(t){return t});var wh=function(){return sh(xh).scale(79.4188).clipAngle(179.999)};function Mh(t,n){return[t,gf(xf((uf+n)/2))]}Mh.invert=function(t,n){return[t,2*lf(vf(n))-uf]};var Ah=function(){return Th(Mh).scale(961/af)};function Th(t){var n,e,r,i=sh(t),u=i.center,o=i.scale,a=i.translate,f=i.clipExtent,c=null;function s(){var u=rf*o(),a=i(es(i.rotate()).invert([0,0]));return f(null==c?[[a[0]-u,a[1]-u],[a[0]+u,a[1]+u]]:t===Mh?[[Math.max(a[0]-u,c),n],[Math.min(a[0]+u,e),r]]:[[c,Math.max(a[1]-u,n)],[e,Math.min(a[1]+u,r)]])}return i.scale=function(t){return arguments.length?(o(t),s()):o()},i.translate=function(t){return arguments.length?(a(t),s()):a()},i.center=function(t){return arguments.length?(u(t),s()):u()},i.clipExtent=function(t){return arguments.length?(null==t?c=n=e=r=null:(c=+t[0][0],n=+t[0][1],e=+t[1][0],r=+t[1][1]),s()):null==c?null:[[c,n],[e,r]]},s()}function Nh(t){return xf((uf+t)/2)}function Sh(t,n){var e=df(t),r=t===n?_f(t):gf(e/df(n))/gf(Nh(n)/Nh(t)),i=e*yf(Nh(t),r)/r;if(!r)return Mh;function u(t,n){i>0?n<-uf+ef&&(n=-uf+ef):n>uf-ef&&(n=uf-ef);var e=i/yf(Nh(n),r);return[e*_f(r*t),i-e*df(r*t)]}return u.invert=function(t,n){var e=i-n,u=bf(r)*mf(t*t+e*e);return[hf(t,sf(e))/r*bf(e),2*lf(yf(i/u,1/r))-uf]},u}var Eh=function(){return hh(Sh).scale(109.5).parallels([30,30])};function kh(t,n){return[t,n]}kh.invert=kh;var Ch=function(){return sh(kh).scale(152.63)};function Ph(t,n){var e=df(t),r=t===n?_f(t):(e-df(n))/(n-t),i=e/r+t;if(sf(r)<ef)return kh;function u(t,n){var e=i-n,u=r*t;return[e*_f(u),i-e*df(u)]}return u.invert=function(t,n){var e=i-n;return[hf(t,sf(e))/r*bf(e),i-bf(r)*mf(t*t+e*e)]},u}var zh=function(){return hh(Ph).scale(131.154).center([0,13.9389])},Rh=1.340264,Lh=-.081106,Dh=893e-6,Uh=.003796,qh=mf(3)/2;function Oh(t,n){var e=Mf(qh*_f(n)),r=e*e,i=r*r*r;return[t*df(e)/(qh*(Rh+3*Lh*r+i*(7*Dh+9*Uh*r))),e*(Rh+Lh*r+i*(Dh+Uh*r))]}Oh.invert=function(t,n){for(var e,r=n,i=r*r,u=i*i*i,o=0;o<12&&(u=(i=(r-=e=(r*(Rh+Lh*i+u*(Dh+Uh*i))-n)/(Rh+3*Lh*i+u*(7*Dh+9*Uh*i)))*r)*i*i,!(sf(e)<1e-12));++o);return[qh*t*(Rh+3*Lh*i+u*(7*Dh+9*Uh*i))/df(r),Mf(_f(r)/qh)]};var Yh=function(){return sh(Oh).scale(177.158)};function Bh(t,n){var e=df(n),r=df(t)*e;return[e*_f(t)/r,_f(n)/r]}Bh.invert=_h(lf);var Ih=function(){return sh(Bh).scale(144.049).clipAngle(60)};function Fh(t,n,e,r){return 1===t&&1===n&&0===e&&0===r?Ks:Jl({point:function(i,u){this.stream.point(i*t+e,u*n+r)}})}var Hh=function(){var t,n,e,r,i,u,o=1,a=0,f=0,c=1,s=1,l=Ks,h=null,d=Ks;function p(){return r=i=null,u}return u={stream:function(t){return r&&i===t?r:r=l(d(i=t))},postclip:function(r){return arguments.length?(d=r,h=t=n=e=null,p()):d},clipExtent:function(r){return arguments.length?(d=null==r?(h=t=n=e=null,Ks):xs(h=+r[0][0],t=+r[0][1],n=+r[1][0],e=+r[1][1]),p()):null==h?null:[[h,t],[n,e]]},scale:function(t){return arguments.length?(l=Fh((o=+t)*c,o*s,a,f),p()):o},translate:function(t){return arguments.length?(l=Fh(o*c,o*s,a=+t[0],f=+t[1]),p()):[a,f]},reflectX:function(t){return arguments.length?(l=Fh(o*(c=t?-1:1),o*s,a,f),p()):c<0},reflectY:function(t){return arguments.length?(l=Fh(o*c,o*(s=t?-1:1),a,f),p()):s<0},fitExtent:function(t,n){return nh(u,t,n)},fitSize:function(t,n){return eh(u,t,n)},fitWidth:function(t,n){return rh(u,t,n)},fitHeight:function(t,n){return ih(u,t,n)}}};function jh(t,n){var e=n*n,r=e*e;return[t*(.8707-.131979*e+r*(r*(.003971*e-.001529*r)-.013791)),n*(1.007226+e*(.015085+r*(.028874*e-.044475-.005916*r)))]}jh.invert=function(t,n){var e,r=n,i=25;do{var u=r*r,o=u*u;r-=e=(r*(1.007226+u*(.015085+o*(.028874*u-.044475-.005916*o)))-n)/(1.007226+u*(.045255+o*(.259866*u-.311325-.005916*11*o)))}while(sf(e)>ef&&--i>0);return[t/(.8707+(u=r*r)*(u*(u*u*u*(.003971-.001529*u)-.013791)-.131979)),r]};var Xh=function(){return sh(jh).scale(175.295)};function Gh(t,n){return[df(n)*_f(t),_f(n)]}Gh.invert=_h(Mf);var Vh=function(){return sh(Gh).scale(249.5).clipAngle(90+ef)};function $h(t,n){var e=df(n),r=1+df(t)*e;return[e*_f(t)/r,_f(n)/r]}$h.invert=_h(function(t){return 2*lf(t)});var Wh=function(){return sh($h).scale(250).clipAngle(142)};function Zh(t,n){return[gf(xf((uf+n)/2)),-t]}Zh.invert=function(t,n){return[-n,2*lf(vf(t))-uf]};var Qh=function(){var t=Th(Zh),n=t.center,e=t.rotate;return t.center=function(t){return arguments.length?n([-t[1],t[0]]):[(t=n())[1],-t[0]]},t.rotate=function(t){return arguments.length?e([t[0],t[1],t.length>2?t[2]+90:90]):[(t=e())[0],t[1],t[2]-90]},e([0,0,90]).scale(159.155)};function Jh(t,n){return t.parent===n.parent?1:2}function Kh(t,n){return t+n.x}function td(t,n){return Math.max(t,n.y)}var nd=function(){var t=Jh,n=1,e=1,r=!1;function i(i){var u,o=0;i.eachAfter(function(n){var e=n.children;e?(n.x=function(t){return t.reduce(Kh,0)/t.length}(e),n.y=function(t){return 1+t.reduce(td,0)}(e)):(n.x=u?o+=t(n,u):0,n.y=0,u=n)});var a=function(t){for(var n;n=t.children;)t=n[0];return t}(i),f=function(t){for(var n;n=t.children;)t=n[n.length-1];return t}(i),c=a.x-t(a,f)/2,s=f.x+t(f,a)/2;return i.eachAfter(r?function(t){t.x=(t.x-i.x)*n,t.y=(i.y-t.y)*e}:function(t){t.x=(t.x-c)/(s-c)*n,t.y=(1-(i.y?t.y/i.y:1))*e})}return i.separation=function(n){return arguments.length?(t=n,i):t},i.size=function(t){return arguments.length?(r=!1,n=+t[0],e=+t[1],i):r?null:[n,e]},i.nodeSize=function(t){return arguments.length?(r=!0,n=+t[0],e=+t[1],i):r?[n,e]:null},i};function ed(t){var n=0,e=t.children,r=e&&e.length;if(r)for(;--r>=0;)n+=e[r].value;else n=1;t.value=n}function rd(t,n){var e,r,i,u,o,a=new ad(t),f=+t.value&&(a.value=t.value),c=[a];for(null==n&&(n=id);e=c.pop();)if(f&&(e.value=+e.data.value),(i=n(e.data))&&(o=i.length))for(e.children=new Array(o),u=o-1;u>=0;--u)c.push(r=e.children[u]=new ad(i[u])),r.parent=e,r.depth=e.depth+1;return a.eachBefore(od)}function id(t){return t.children}function ud(t){t.data=t.data.data}function od(t){var n=0;do{t.height=n}while((t=t.parent)&&t.height<++n)}function ad(t){this.data=t,this.depth=this.height=0,this.parent=null}ad.prototype=rd.prototype={constructor:ad,count:function(){return this.eachAfter(ed)},each:function(t){var n,e,r,i,u=this,o=[u];do{for(n=o.reverse(),o=[];u=n.pop();)if(t(u),e=u.children)for(r=0,i=e.length;r<i;++r)o.push(e[r])}while(o.length);return this},eachAfter:function(t){for(var n,e,r,i=this,u=[i],o=[];i=u.pop();)if(o.push(i),n=i.children)for(e=0,r=n.length;e<r;++e)u.push(n[e]);for(;i=o.pop();)t(i);return this},eachBefore:function(t){for(var n,e,r=this,i=[r];r=i.pop();)if(t(r),n=r.children)for(e=n.length-1;e>=0;--e)i.push(n[e]);return this},sum:function(t){return this.eachAfter(function(n){for(var e=+t(n.data)||0,r=n.children,i=r&&r.length;--i>=0;)e+=r[i].value;n.value=e})},sort:function(t){return this.eachBefore(function(n){n.children&&n.children.sort(t)})},path:function(t){for(var n=this,e=function(t,n){if(t===n)return t;var e=t.ancestors(),r=n.ancestors(),i=null;for(t=e.pop(),n=r.pop();t===n;)i=t,t=e.pop(),n=r.pop();return i}(n,t),r=[n];n!==e;)n=n.parent,r.push(n);for(var i=r.length;t!==e;)r.splice(i,0,t),t=t.parent;return r},ancestors:function(){for(var t=this,n=[t];t=t.parent;)n.push(t);return n},descendants:function(){var t=[];return this.each(function(n){t.push(n)}),t},leaves:function(){var t=[];return this.eachBefore(function(n){n.children||t.push(n)}),t},links:function(){var t=this,n=[];return t.each(function(e){e!==t&&n.push({source:e.parent,target:e})}),n},copy:function(){return rd(this).eachBefore(ud)}};var fd=Array.prototype.slice;var cd=function(t){for(var n,e,r=0,i=(t=function(t){for(var n,e,r=t.length;r;)e=Math.random()*r--|0,n=t[r],t[r]=t[e],t[e]=n;return t}(fd.call(t))).length,u=[];r<i;)n=t[r],e&&hd(e,n)?++r:(e=pd(u=sd(u,n)),r=0);return e};function sd(t,n){var e,r;if(dd(n,t))return[n];for(e=0;e<t.length;++e)if(ld(n,t[e])&&dd(vd(t[e],n),t))return[t[e],n];for(e=0;e<t.length-1;++e)for(r=e+1;r<t.length;++r)if(ld(vd(t[e],t[r]),n)&&ld(vd(t[e],n),t[r])&&ld(vd(t[r],n),t[e])&&dd(gd(t[e],t[r],n),t))return[t[e],t[r],n];throw new Error}function ld(t,n){var e=t.r-n.r,r=n.x-t.x,i=n.y-t.y;return e<0||e*e<r*r+i*i}function hd(t,n){var e=t.r-n.r+1e-6,r=n.x-t.x,i=n.y-t.y;return e>0&&e*e>r*r+i*i}function dd(t,n){for(var e=0;e<n.length;++e)if(!hd(t,n[e]))return!1;return!0}function pd(t){switch(t.length){case 1:return function(t){return{x:t.x,y:t.y,r:t.r}}(t[0]);case 2:return vd(t[0],t[1]);case 3:return gd(t[0],t[1],t[2])}}function vd(t,n){var e=t.x,r=t.y,i=t.r,u=n.x,o=n.y,a=n.r,f=u-e,c=o-r,s=a-i,l=Math.sqrt(f*f+c*c);return{x:(e+u+f/l*s)/2,y:(r+o+c/l*s)/2,r:(l+i+a)/2}}function gd(t,n,e){var r=t.x,i=t.y,u=t.r,o=n.x,a=n.y,f=n.r,c=e.x,s=e.y,l=e.r,h=r-o,d=r-c,p=i-a,v=i-s,g=f-u,y=l-u,_=r*r+i*i-u*u,b=_-o*o-a*a+f*f,m=_-c*c-s*s+l*l,x=d*p-h*v,w=(p*m-v*b)/(2*x)-r,M=(v*g-p*y)/x,A=(d*b-h*m)/(2*x)-i,T=(h*y-d*g)/x,N=M*M+T*T-1,S=2*(u+w*M+A*T),E=w*w+A*A-u*u,k=-(N?(S+Math.sqrt(S*S-4*N*E))/(2*N):E/S);return{x:r+w+M*k,y:i+A+T*k,r:k}}function yd(t,n,e){var r,i,u,o,a=t.x-n.x,f=t.y-n.y,c=a*a+f*f;c?(i=n.r+e.r,i*=i,o=t.r+e.r,i>(o*=o)?(r=(c+o-i)/(2*c),u=Math.sqrt(Math.max(0,o/c-r*r)),e.x=t.x-r*a-u*f,e.y=t.y-r*f+u*a):(r=(c+i-o)/(2*c),u=Math.sqrt(Math.max(0,i/c-r*r)),e.x=n.x+r*a-u*f,e.y=n.y+r*f+u*a)):(e.x=n.x+e.r,e.y=n.y)}function _d(t,n){var e=t.r+n.r-1e-6,r=n.x-t.x,i=n.y-t.y;return e>0&&e*e>r*r+i*i}function bd(t){var n=t._,e=t.next._,r=n.r+e.r,i=(n.x*e.r+e.x*n.r)/r,u=(n.y*e.r+e.y*n.r)/r;return i*i+u*u}function md(t){this._=t,this.next=null,this.previous=null}function xd(t){if(!(i=t.length))return 0;var n,e,r,i,u,o,a,f,c,s,l;if((n=t[0]).x=0,n.y=0,!(i>1))return n.r;if(e=t[1],n.x=-e.r,e.x=n.r,e.y=0,!(i>2))return n.r+e.r;yd(e,n,r=t[2]),n=new md(n),e=new md(e),r=new md(r),n.next=r.previous=e,e.next=n.previous=r,r.next=e.previous=n;t:for(a=3;a<i;++a){yd(n._,e._,r=t[a]),r=new md(r),f=e.next,c=n.previous,s=e._.r,l=n._.r;do{if(s<=l){if(_d(f._,r._)){e=f,n.next=e,e.previous=n,--a;continue t}s+=f._.r,f=f.next}else{if(_d(c._,r._)){(n=c).next=e,e.previous=n,--a;continue t}l+=c._.r,c=c.previous}}while(f!==c.next);for(r.previous=n,r.next=e,n.next=e.previous=e=r,u=bd(n);(r=r.next)!==e;)(o=bd(r))<u&&(n=r,u=o);e=n.next}for(n=[e._],r=e;(r=r.next)!==e;)n.push(r._);for(r=cd(n),a=0;a<i;++a)(n=t[a]).x-=r.x,n.y-=r.y;return r.r}var wd=function(t){return xd(t),t};function Md(t){if("function"!=typeof t)throw new Error;return t}function Ad(){return 0}var Td=function(t){return function(){return t}};function Nd(t){return Math.sqrt(t.value)}var Sd=function(){var t=null,n=1,e=1,r=Ad;function i(i){return i.x=n/2,i.y=e/2,t?i.eachBefore(Ed(t)).eachAfter(kd(r,.5)).eachBefore(Cd(1)):i.eachBefore(Ed(Nd)).eachAfter(kd(Ad,1)).eachAfter(kd(r,i.r/Math.min(n,e))).eachBefore(Cd(Math.min(n,e)/(2*i.r))),i}return i.radius=function(n){return arguments.length?(t=function(t){return null==t?null:Md(t)}(n),i):t},i.size=function(t){return arguments.length?(n=+t[0],e=+t[1],i):[n,e]},i.padding=function(t){return arguments.length?(r="function"==typeof t?t:Td(+t),i):r},i};function Ed(t){return function(n){n.children||(n.r=Math.max(0,+t(n)||0))}}function kd(t,n){return function(e){if(r=e.children){var r,i,u,o=r.length,a=t(e)*n||0;if(a)for(i=0;i<o;++i)r[i].r+=a;if(u=xd(r),a)for(i=0;i<o;++i)r[i].r-=a;e.r=u+a}}}function Cd(t){return function(n){var e=n.parent;n.r*=t,e&&(n.x=e.x+t*n.x,n.y=e.y+t*n.y)}}var Pd=function(t){t.x0=Math.round(t.x0),t.y0=Math.round(t.y0),t.x1=Math.round(t.x1),t.y1=Math.round(t.y1)},zd=function(t,n,e,r,i){for(var u,o=t.children,a=-1,f=o.length,c=t.value&&(r-n)/t.value;++a<f;)(u=o[a]).y0=e,u.y1=i,u.x0=n,u.x1=n+=u.value*c},Rd=function(){var t=1,n=1,e=0,r=!1;function i(i){var u=i.height+1;return i.x0=i.y0=e,i.x1=t,i.y1=n/u,i.eachBefore(function(t,n){return function(r){r.children&&zd(r,r.x0,t*(r.depth+1)/n,r.x1,t*(r.depth+2)/n);var i=r.x0,u=r.y0,o=r.x1-e,a=r.y1-e;o<i&&(i=o=(i+o)/2),a<u&&(u=a=(u+a)/2),r.x0=i,r.y0=u,r.x1=o,r.y1=a}}(n,u)),r&&i.eachBefore(Pd),i}return i.round=function(t){return arguments.length?(r=!!t,i):r},i.size=function(e){return arguments.length?(t=+e[0],n=+e[1],i):[t,n]},i.padding=function(t){return arguments.length?(e=+t,i):e},i},Ld="$",Dd={depth:-1},Ud={};function qd(t){return t.id}function Od(t){return t.parentId}var Yd=function(){var t=qd,n=Od;function e(e){var r,i,u,o,a,f,c,s=e.length,l=new Array(s),h={};for(i=0;i<s;++i)r=e[i],a=l[i]=new ad(r),null!=(f=t(r,i,e))&&(f+="")&&(h[c=Ld+(a.id=f)]=c in h?Ud:a);for(i=0;i<s;++i)if(a=l[i],null!=(f=n(e[i],i,e))&&(f+="")){if(!(o=h[Ld+f]))throw new Error("missing: "+f);if(o===Ud)throw new Error("ambiguous: "+f);o.children?o.children.push(a):o.children=[a],a.parent=o}else{if(u)throw new Error("multiple roots");u=a}if(!u)throw new Error("no root");if(u.parent=Dd,u.eachBefore(function(t){t.depth=t.parent.depth+1,--s}).eachBefore(od),u.parent=null,s>0)throw new Error("cycle");return u}return e.id=function(n){return arguments.length?(t=Md(n),e):t},e.parentId=function(t){return arguments.length?(n=Md(t),e):n},e};function Bd(t,n){return t.parent===n.parent?1:2}function Id(t){var n=t.children;return n?n[0]:t.t}function Fd(t){var n=t.children;return n?n[n.length-1]:t.t}function Hd(t,n,e){var r=e/(n.i-t.i);n.c-=r,n.s+=e,t.c+=r,n.z+=e,n.m+=e}function jd(t,n,e){return t.a.parent===n.parent?t.a:e}function Xd(t,n){this._=t,this.parent=null,this.children=null,this.A=null,this.a=this,this.z=0,this.m=0,this.c=0,this.s=0,this.t=null,this.i=n}Xd.prototype=Object.create(ad.prototype);var Gd=function(){var t=Bd,n=1,e=1,r=null;function i(i){var f=function(t){for(var n,e,r,i,u,o=new Xd(t,0),a=[o];n=a.pop();)if(r=n._.children)for(n.children=new Array(u=r.length),i=u-1;i>=0;--i)a.push(e=n.children[i]=new Xd(r[i],i)),e.parent=n;return(o.parent=new Xd(null,0)).children=[o],o}(i);if(f.eachAfter(u),f.parent.m=-f.z,f.eachBefore(o),r)i.eachBefore(a);else{var c=i,s=i,l=i;i.eachBefore(function(t){t.x<c.x&&(c=t),t.x>s.x&&(s=t),t.depth>l.depth&&(l=t)});var h=c===s?1:t(c,s)/2,d=h-c.x,p=n/(s.x+h+d),v=e/(l.depth||1);i.eachBefore(function(t){t.x=(t.x+d)*p,t.y=t.depth*v})}return i}function u(n){var e=n.children,r=n.parent.children,i=n.i?r[n.i-1]:null;if(e){!function(t){for(var n,e=0,r=0,i=t.children,u=i.length;--u>=0;)(n=i[u]).z+=e,n.m+=e,e+=n.s+(r+=n.c)}(n);var u=(e[0].z+e[e.length-1].z)/2;i?(n.z=i.z+t(n._,i._),n.m=n.z-u):n.z=u}else i&&(n.z=i.z+t(n._,i._));n.parent.A=function(n,e,r){if(e){for(var i,u=n,o=n,a=e,f=u.parent.children[0],c=u.m,s=o.m,l=a.m,h=f.m;a=Fd(a),u=Id(u),a&&u;)f=Id(f),(o=Fd(o)).a=n,(i=a.z+l-u.z-c+t(a._,u._))>0&&(Hd(jd(a,n,r),n,i),c+=i,s+=i),l+=a.m,c+=u.m,h+=f.m,s+=o.m;a&&!Fd(o)&&(o.t=a,o.m+=l-s),u&&!Id(f)&&(f.t=u,f.m+=c-h,r=n)}return r}(n,i,n.parent.A||r[0])}function o(t){t._.x=t.z+t.parent.m,t.m+=t.parent.m}function a(t){t.x*=n,t.y=t.depth*e}return i.separation=function(n){return arguments.length?(t=n,i):t},i.size=function(t){return arguments.length?(r=!1,n=+t[0],e=+t[1],i):r?null:[n,e]},i.nodeSize=function(t){return arguments.length?(r=!0,n=+t[0],e=+t[1],i):r?[n,e]:null},i},Vd=function(t,n,e,r,i){for(var u,o=t.children,a=-1,f=o.length,c=t.value&&(i-e)/t.value;++a<f;)(u=o[a]).x0=n,u.x1=r,u.y0=e,u.y1=e+=u.value*c},$d=(1+Math.sqrt(5))/2;function Wd(t,n,e,r,i,u){for(var o,a,f,c,s,l,h,d,p,v,g,y=[],_=n.children,b=0,m=0,x=_.length,w=n.value;b<x;){f=i-e,c=u-r;do{s=_[m++].value}while(!s&&m<x);for(l=h=s,g=s*s*(v=Math.max(c/f,f/c)/(w*t)),p=Math.max(h/g,g/l);m<x;++m){if(s+=a=_[m].value,a<l&&(l=a),a>h&&(h=a),g=s*s*v,(d=Math.max(h/g,g/l))>p){s-=a;break}p=d}y.push(o={value:s,dice:f<c,children:_.slice(b,m)}),o.dice?zd(o,e,r,i,w?r+=c*s/w:u):Vd(o,e,r,w?e+=f*s/w:i,u),w-=s,b=m}return y}var Zd=function t(n){function e(t,e,r,i,u){Wd(n,t,e,r,i,u)}return e.ratio=function(n){return t((n=+n)>1?n:1)},e}($d),Qd=function(){var t=Zd,n=!1,e=1,r=1,i=[0],u=Ad,o=Ad,a=Ad,f=Ad,c=Ad;function s(t){return t.x0=t.y0=0,t.x1=e,t.y1=r,t.eachBefore(l),i=[0],n&&t.eachBefore(Pd),t}function l(n){var e=i[n.depth],r=n.x0+e,s=n.y0+e,l=n.x1-e,h=n.y1-e;l<r&&(r=l=(r+l)/2),h<s&&(s=h=(s+h)/2),n.x0=r,n.y0=s,n.x1=l,n.y1=h,n.children&&(e=i[n.depth+1]=u(n)/2,r+=c(n)-e,s+=o(n)-e,l-=a(n)-e,h-=f(n)-e,l<r&&(r=l=(r+l)/2),h<s&&(s=h=(s+h)/2),t(n,r,s,l,h))}return s.round=function(t){return arguments.length?(n=!!t,s):n},s.size=function(t){return arguments.length?(e=+t[0],r=+t[1],s):[e,r]},s.tile=function(n){return arguments.length?(t=Md(n),s):t},s.padding=function(t){return arguments.length?s.paddingInner(t).paddingOuter(t):s.paddingInner()},s.paddingInner=function(t){return arguments.length?(u="function"==typeof t?t:Td(+t),s):u},s.paddingOuter=function(t){return arguments.length?s.paddingTop(t).paddingRight(t).paddingBottom(t).paddingLeft(t):s.paddingTop()},s.paddingTop=function(t){return arguments.length?(o="function"==typeof t?t:Td(+t),s):o},s.paddingRight=function(t){return arguments.length?(a="function"==typeof t?t:Td(+t),s):a},s.paddingBottom=function(t){return arguments.length?(f="function"==typeof t?t:Td(+t),s):f},s.paddingLeft=function(t){return arguments.length?(c="function"==typeof t?t:Td(+t),s):c},s},Jd=function(t,n,e,r,i){var u,o,a=t.children,f=a.length,c=new Array(f+1);for(c[0]=o=u=0;u<f;++u)c[u+1]=o+=a[u].value;!function t(n,e,r,i,u,o,f){if(n>=e-1){var s=a[n];return s.x0=i,s.y0=u,s.x1=o,void(s.y1=f)}var l=c[n],h=r/2+l,d=n+1,p=e-1;for(;d<p;){var v=d+p>>>1;c[v]<h?d=v+1:p=v}h-c[d-1]<c[d]-h&&n+1<d&&--d;var g=c[d]-l,y=r-g;if(o-i>f-u){var _=(i*y+o*g)/r;t(n,d,g,i,u,_,f),t(d,e,y,_,u,o,f)}else{var b=(u*y+f*g)/r;t(n,d,g,i,u,o,b),t(d,e,y,i,b,o,f)}}(0,f,t.value,n,e,r,i)},Kd=function(t,n,e,r,i){(1&t.depth?Vd:zd)(t,n,e,r,i)},tp=function t(n){function e(t,e,r,i,u){if((o=t._squarify)&&o.ratio===n)for(var o,a,f,c,s,l=-1,h=o.length,d=t.value;++l<h;){for(f=(a=o[l]).children,c=a.value=0,s=f.length;c<s;++c)a.value+=f[c].value;a.dice?zd(a,e,r,i,r+=(u-r)*a.value/d):Vd(a,e,r,e+=(i-e)*a.value/d,u),d-=a.value}else t._squarify=o=Wd(n,t,e,r,i,u),o.ratio=n}return e.ratio=function(n){return t((n=+n)>1?n:1)},e}($d),np=function(t){for(var n,e=-1,r=t.length,i=t[r-1],u=0;++e<r;)n=i,i=t[e],u+=n[1]*i[0]-n[0]*i[1];return u/2},ep=function(t){for(var n,e,r=-1,i=t.length,u=0,o=0,a=t[i-1],f=0;++r<i;)n=a,a=t[r],f+=e=n[0]*a[1]-a[0]*n[1],u+=(n[0]+a[0])*e,o+=(n[1]+a[1])*e;return[u/(f*=3),o/f]},rp=function(t,n,e){return(n[0]-t[0])*(e[1]-t[1])-(n[1]-t[1])*(e[0]-t[0])};function ip(t,n){return t[0]-n[0]||t[1]-n[1]}function up(t){for(var n=t.length,e=[0,1],r=2,i=2;i<n;++i){for(;r>1&&rp(t[e[r-2]],t[e[r-1]],t[i])<=0;)--r;e[r++]=i}return e.slice(0,r)}var op=function(t){if((e=t.length)<3)return null;var n,e,r=new Array(e),i=new Array(e);for(n=0;n<e;++n)r[n]=[+t[n][0],+t[n][1],n];for(r.sort(ip),n=0;n<e;++n)i[n]=[r[n][0],-r[n][1]];var u=up(r),o=up(i),a=o[0]===u[0],f=o[o.length-1]===u[u.length-1],c=[];for(n=u.length-1;n>=0;--n)c.push(t[r[u[n]][2]]);for(n=+a;n<o.length-f;++n)c.push(t[r[o[n]][2]]);return c},ap=function(t,n){for(var e,r,i=t.length,u=t[i-1],o=n[0],a=n[1],f=u[0],c=u[1],s=!1,l=0;l<i;++l)e=(u=t[l])[0],(r=u[1])>a!=c>a&&o<(f-e)*(a-r)/(c-r)+e&&(s=!s),f=e,c=r;return s},fp=function(t){for(var n,e,r=-1,i=t.length,u=t[i-1],o=u[0],a=u[1],f=0;++r<i;)n=o,e=a,n-=o=(u=t[r])[0],e-=a=u[1],f+=Math.sqrt(n*n+e*e);return f},cp=function(){return Math.random()},sp=function t(n){function e(t,e){return t=null==t?0:+t,e=null==e?1:+e,1===arguments.length?(e=t,t=0):e-=t,function(){return n()*e+t}}return e.source=t,e}(cp),lp=function t(n){function e(t,e){var r,i;return t=null==t?0:+t,e=null==e?1:+e,function(){var u;if(null!=r)u=r,r=null;else do{r=2*n()-1,u=2*n()-1,i=r*r+u*u}while(!i||i>1);return t+e*u*Math.sqrt(-2*Math.log(i)/i)}}return e.source=t,e}(cp),hp=function t(n){function e(){var t=lp.source(n).apply(this,arguments);return function(){return Math.exp(t())}}return e.source=t,e}(cp),dp=function t(n){function e(t){return function(){for(var e=0,r=0;r<t;++r)e+=n();return e}}return e.source=t,e}(cp),pp=function t(n){function e(t){var e=dp.source(n)(t);return function(){return e()/t}}return e.source=t,e}(cp),vp=function t(n){function e(t){return function(){return-Math.log(1-n())/t}}return e.source=t,e}(cp),gp=Array.prototype,yp=gp.map,_p=gp.slice,bp={name:"implicit"};function mp(t){var n=Qu(),e=[],r=bp;function i(i){var u=i+"",o=n.get(u);if(!o){if(r!==bp)return r;n.set(u,o=e.push(i))}return t[(o-1)%t.length]}return t=null==t?[]:_p.call(t),i.domain=function(t){if(!arguments.length)return e.slice();e=[],n=Qu();for(var r,u,o=-1,a=t.length;++o<a;)n.has(u=(r=t[o])+"")||n.set(u,e.push(r));return i},i.range=function(n){return arguments.length?(t=_p.call(n),i):t.slice()},i.unknown=function(t){return arguments.length?(r=t,i):r},i.copy=function(){return mp().domain(e).range(t).unknown(r)},i}function xp(){var t,n,e=mp().unknown(void 0),r=e.domain,i=e.range,u=[0,1],o=!1,a=0,f=0,c=.5;function s(){var e=r().length,s=u[1]<u[0],l=u[s-0],h=u[1-s];t=(h-l)/Math.max(1,e-a+2*f),o&&(t=Math.floor(t)),l+=(h-l-t*(e-a))*c,n=t*(1-a),o&&(l=Math.round(l),n=Math.round(n));var d=w(e).map(function(n){return l+t*n});return i(s?d.reverse():d)}return delete e.unknown,e.domain=function(t){return arguments.length?(r(t),s()):r()},e.range=function(t){return arguments.length?(u=[+t[0],+t[1]],s()):u.slice()},e.rangeRound=function(t){return u=[+t[0],+t[1]],o=!0,s()},e.bandwidth=function(){return n},e.step=function(){return t},e.round=function(t){return arguments.length?(o=!!t,s()):o},e.padding=function(t){return arguments.length?(a=f=Math.max(0,Math.min(1,t)),s()):a},e.paddingInner=function(t){return arguments.length?(a=Math.max(0,Math.min(1,t)),s()):a},e.paddingOuter=function(t){return arguments.length?(f=Math.max(0,Math.min(1,t)),s()):f},e.align=function(t){return arguments.length?(c=Math.max(0,Math.min(1,t)),s()):c},e.copy=function(){return xp().domain(r()).range(u).round(o).paddingInner(a).paddingOuter(f).align(c)},s()}function wp(){return function t(n){var e=n.copy;return n.padding=n.paddingOuter,delete n.paddingInner,delete n.paddingOuter,n.copy=function(){return t(e())},n}(xp().paddingInner(1))}var Mp=function(t){return function(){return t}},Ap=function(t){return+t},Tp=[0,1];function Np(t,n){return(n-=t=+t)?function(e){return(e-t)/n}:Mp(n)}function Sp(t,n,e,r){var i=t[0],u=t[1],o=n[0],a=n[1];return u<i?(i=e(u,i),o=r(a,o)):(i=e(i,u),o=r(o,a)),function(t){return o(i(t))}}function Ep(t,n,e,r){var i=Math.min(t.length,n.length)-1,u=new Array(i),o=new Array(i),a=-1;for(t[i]<t[0]&&(t=t.slice().reverse(),n=n.slice().reverse());++a<i;)u[a]=e(t[a],t[a+1]),o[a]=r(n[a],n[a+1]);return function(n){var e=f(t,n,1,i)-1;return o[e](u[e](n))}}function kp(t,n){return n.domain(t.domain()).range(t.range()).interpolate(t.interpolate()).clamp(t.clamp())}function Cp(t,n){var e,r,i,u=Tp,o=Tp,a=Qe,f=!1;function c(){return e=Math.min(u.length,o.length)>2?Ep:Sp,r=i=null,s}function s(n){return(r||(r=e(u,o,f?function(t){return function(n,e){var r=t(n=+n,e=+e);return function(t){return t<=n?0:t>=e?1:r(t)}}}(t):t,a)))(+n)}return s.invert=function(t){return(i||(i=e(o,u,Np,f?function(t){return function(n,e){var r=t(n=+n,e=+e);return function(t){return t<=0?n:t>=1?e:r(t)}}}(n):n)))(+t)},s.domain=function(t){return arguments.length?(u=yp.call(t,Ap),c()):u.slice()},s.range=function(t){return arguments.length?(o=_p.call(t),c()):o.slice()},s.rangeRound=function(t){return o=_p.call(t),a=tr,c()},s.clamp=function(t){return arguments.length?(f=!!t,c()):f},s.interpolate=function(t){return arguments.length?(a=t,c()):a},c()}var Pp=function(t,n,e){var r,i=t[0],u=t[t.length-1],o=E(i,u,null==n?10:n);switch((e=Ua(null==e?",f":e)).type){case"s":var a=Math.max(Math.abs(i),Math.abs(u));return null!=e.precision||isNaN(r=Za(o,a))||(e.precision=r),Ia(e,a);case"":case"e":case"g":case"p":case"r":null!=e.precision||isNaN(r=Qa(o,Math.max(Math.abs(i),Math.abs(u))))||(e.precision=r-("e"===e.type));break;case"f":case"%":null!=e.precision||isNaN(r=Wa(o))||(e.precision=r-2*("%"===e.type))}return Ba(e)};function zp(t){var n=t.domain;return t.ticks=function(t){var e=n();return N(e[0],e[e.length-1],null==t?10:t)},t.tickFormat=function(t,e){return Pp(n(),t,e)},t.nice=function(e){null==e&&(e=10);var r,i=n(),u=0,o=i.length-1,a=i[u],f=i[o];return f<a&&(r=a,a=f,f=r,r=u,u=o,o=r),(r=S(a,f,e))>0?r=S(a=Math.floor(a/r)*r,f=Math.ceil(f/r)*r,e):r<0&&(r=S(a=Math.ceil(a*r)/r,f=Math.floor(f*r)/r,e)),r>0?(i[u]=Math.floor(a/r)*r,i[o]=Math.ceil(f/r)*r,n(i)):r<0&&(i[u]=Math.ceil(a*r)/r,i[o]=Math.floor(f*r)/r,n(i)),t},t}function Rp(){var t=Cp(Np,Fe);return t.copy=function(){return kp(t,Rp())},zp(t)}function Lp(){var t=[0,1];function n(t){return+t}return n.invert=n,n.domain=n.range=function(e){return arguments.length?(t=yp.call(e,Ap),n):t.slice()},n.copy=function(){return Lp().domain(t)},zp(n)}var Dp=function(t,n){var e,r=0,i=(t=t.slice()).length-1,u=t[r],o=t[i];return o<u&&(e=r,r=i,i=e,e=u,u=o,o=e),t[r]=n.floor(u),t[i]=n.ceil(o),t};function Up(t,n){return(n=Math.log(n/t))?function(e){return Math.log(e/t)/n}:Mp(n)}function qp(t,n){return t<0?function(e){return-Math.pow(-n,e)*Math.pow(-t,1-e)}:function(e){return Math.pow(n,e)*Math.pow(t,1-e)}}function Op(t){return isFinite(t)?+("1e"+t):t<0?0:t}function Yp(t){return 10===t?Op:t===Math.E?Math.exp:function(n){return Math.pow(t,n)}}function Bp(t){return t===Math.E?Math.log:10===t&&Math.log10||2===t&&Math.log2||(t=Math.log(t),function(n){return Math.log(n)/t})}function Ip(t){return function(n){return-t(-n)}}function Fp(){var t=Cp(Up,qp).domain([1,10]),n=t.domain,e=10,r=Bp(10),i=Yp(10);function u(){return r=Bp(e),i=Yp(e),n()[0]<0&&(r=Ip(r),i=Ip(i)),t}return t.base=function(t){return arguments.length?(e=+t,u()):e},t.domain=function(t){return arguments.length?(n(t),u()):n()},t.ticks=function(t){var u,o=n(),a=o[0],f=o[o.length-1];(u=f<a)&&(h=a,a=f,f=h);var c,s,l,h=r(a),d=r(f),p=null==t?10:+t,v=[];if(!(e%1)&&d-h<p){if(h=Math.round(h)-1,d=Math.round(d)+1,a>0){for(;h<d;++h)for(s=1,c=i(h);s<e;++s)if(!((l=c*s)<a)){if(l>f)break;v.push(l)}}else for(;h<d;++h)for(s=e-1,c=i(h);s>=1;--s)if(!((l=c*s)<a)){if(l>f)break;v.push(l)}}else v=N(h,d,Math.min(d-h,p)).map(i);return u?v.reverse():v},t.tickFormat=function(n,u){if(null==u&&(u=10===e?".0e":","),"function"!=typeof u&&(u=Ba(u)),n===1/0)return u;null==n&&(n=10);var o=Math.max(1,e*n/t.ticks().length);return function(t){var n=t/i(Math.round(r(t)));return n*e<e-.5&&(n*=e),n<=o?u(t):""}},t.nice=function(){return n(Dp(n(),{floor:function(t){return i(Math.floor(r(t)))},ceil:function(t){return i(Math.ceil(r(t)))}}))},t.copy=function(){return kp(t,Fp().base(e))},t}function Hp(t,n){return t<0?-Math.pow(-t,n):Math.pow(t,n)}function jp(){var t=1,n=Cp(function(n,e){return(e=Hp(e,t)-(n=Hp(n,t)))?function(r){return(Hp(r,t)-n)/e}:Mp(e)},function(n,e){return e=Hp(e,t)-(n=Hp(n,t)),function(r){return Hp(n+e*r,1/t)}}),e=n.domain;return n.exponent=function(n){return arguments.length?(t=+n,e(e())):t},n.copy=function(){return kp(n,jp().exponent(t))},zp(n)}function Xp(){return jp().exponent(.5)}function Gp(){var t=[],n=[],e=[];function i(){var r=0,i=Math.max(1,n.length);for(e=new Array(i-1);++r<i;)e[r-1]=P(t,r/i);return u}function u(t){if(!isNaN(t=+t))return n[f(e,t)]}return u.invertExtent=function(r){var i=n.indexOf(r);return i<0?[NaN,NaN]:[i>0?e[i-1]:t[0],i<e.length?e[i]:t[t.length-1]]},u.domain=function(n){if(!arguments.length)return t.slice();t=[];for(var e,u=0,o=n.length;u<o;++u)null==(e=n[u])||isNaN(e=+e)||t.push(e);return t.sort(r),i()},u.range=function(t){return arguments.length?(n=_p.call(t),i()):n.slice()},u.quantiles=function(){return e.slice()},u.copy=function(){return Gp().domain(t).range(n)},u}function Vp(){var t=0,n=1,e=1,r=[.5],i=[0,1];function u(t){if(t<=t)return i[f(r,t,0,e)]}function o(){var i=-1;for(r=new Array(e);++i<e;)r[i]=((i+1)*n-(i-e)*t)/(e+1);return u}return u.domain=function(e){return arguments.length?(t=+e[0],n=+e[1],o()):[t,n]},u.range=function(t){return arguments.length?(e=(i=_p.call(t)).length-1,o()):i.slice()},u.invertExtent=function(u){var o=i.indexOf(u);return o<0?[NaN,NaN]:o<1?[t,r[0]]:o>=e?[r[e-1],n]:[r[o-1],r[o]]},u.copy=function(){return Vp().domain([t,n]).range(i)},zp(u)}function $p(){var t=[.5],n=[0,1],e=1;function r(r){if(r<=r)return n[f(t,r,0,e)]}return r.domain=function(i){return arguments.length?(t=_p.call(i),e=Math.min(t.length,n.length-1),r):t.slice()},r.range=function(i){return arguments.length?(n=_p.call(i),e=Math.min(t.length,n.length-1),r):n.slice()},r.invertExtent=function(e){var r=n.indexOf(e);return[t[r-1],t[r]]},r.copy=function(){return $p().domain(t).range(n)},r}var Wp=new Date,Zp=new Date;function Qp(t,n,e,r){function i(n){return t(n=new Date(+n)),n}return i.floor=i,i.ceil=function(e){return t(e=new Date(e-1)),n(e,1),t(e),e},i.round=function(t){var n=i(t),e=i.ceil(t);return t-n<e-t?n:e},i.offset=function(t,e){return n(t=new Date(+t),null==e?1:Math.floor(e)),t},i.range=function(e,r,u){var o,a=[];if(e=i.ceil(e),u=null==u?1:Math.floor(u),!(e<r&&u>0))return a;do{a.push(o=new Date(+e)),n(e,u),t(e)}while(o<e&&e<r);return a},i.filter=function(e){return Qp(function(n){if(n>=n)for(;t(n),!e(n);)n.setTime(n-1)},function(t,r){if(t>=t)if(r<0)for(;++r<=0;)for(;n(t,-1),!e(t););else for(;--r>=0;)for(;n(t,1),!e(t););})},e&&(i.count=function(n,r){return Wp.setTime(+n),Zp.setTime(+r),t(Wp),t(Zp),Math.floor(e(Wp,Zp))},i.every=function(t){return t=Math.floor(t),isFinite(t)&&t>0?t>1?i.filter(r?function(n){return r(n)%t==0}:function(n){return i.count(0,n)%t==0}):i:null}),i}var Jp=Qp(function(){},function(t,n){t.setTime(+t+n)},function(t,n){return n-t});Jp.every=function(t){return t=Math.floor(t),isFinite(t)&&t>0?t>1?Qp(function(n){n.setTime(Math.floor(n/t)*t)},function(n,e){n.setTime(+n+e*t)},function(n,e){return(e-n)/t}):Jp:null};var Kp=Jp,tv=Jp.range,nv=6e4,ev=6048e5,rv=Qp(function(t){t.setTime(1e3*Math.floor(t/1e3))},function(t,n){t.setTime(+t+1e3*n)},function(t,n){return(n-t)/1e3},function(t){return t.getUTCSeconds()}),iv=rv,uv=rv.range,ov=Qp(function(t){t.setTime(Math.floor(t/nv)*nv)},function(t,n){t.setTime(+t+n*nv)},function(t,n){return(n-t)/nv},function(t){return t.getMinutes()}),av=ov,fv=ov.range,cv=Qp(function(t){var n=t.getTimezoneOffset()*nv%36e5;n<0&&(n+=36e5),t.setTime(36e5*Math.floor((+t-n)/36e5)+n)},function(t,n){t.setTime(+t+36e5*n)},function(t,n){return(n-t)/36e5},function(t){return t.getHours()}),sv=cv,lv=cv.range,hv=Qp(function(t){t.setHours(0,0,0,0)},function(t,n){t.setDate(t.getDate()+n)},function(t,n){return(n-t-(n.getTimezoneOffset()-t.getTimezoneOffset())*nv)/864e5},function(t){return t.getDate()-1}),dv=hv,pv=hv.range;function vv(t){return Qp(function(n){n.setDate(n.getDate()-(n.getDay()+7-t)%7),n.setHours(0,0,0,0)},function(t,n){t.setDate(t.getDate()+7*n)},function(t,n){return(n-t-(n.getTimezoneOffset()-t.getTimezoneOffset())*nv)/ev})}var gv=vv(0),yv=vv(1),_v=vv(2),bv=vv(3),mv=vv(4),xv=vv(5),wv=vv(6),Mv=gv.range,Av=yv.range,Tv=_v.range,Nv=bv.range,Sv=mv.range,Ev=xv.range,kv=wv.range,Cv=Qp(function(t){t.setDate(1),t.setHours(0,0,0,0)},function(t,n){t.setMonth(t.getMonth()+n)},function(t,n){return n.getMonth()-t.getMonth()+12*(n.getFullYear()-t.getFullYear())},function(t){return t.getMonth()}),Pv=Cv,zv=Cv.range,Rv=Qp(function(t){t.setMonth(0,1),t.setHours(0,0,0,0)},function(t,n){t.setFullYear(t.getFullYear()+n)},function(t,n){return n.getFullYear()-t.getFullYear()},function(t){return t.getFullYear()});Rv.every=function(t){return isFinite(t=Math.floor(t))&&t>0?Qp(function(n){n.setFullYear(Math.floor(n.getFullYear()/t)*t),n.setMonth(0,1),n.setHours(0,0,0,0)},function(n,e){n.setFullYear(n.getFullYear()+e*t)}):null};var Lv=Rv,Dv=Rv.range,Uv=Qp(function(t){t.setUTCSeconds(0,0)},function(t,n){t.setTime(+t+n*nv)},function(t,n){return(n-t)/nv},function(t){return t.getUTCMinutes()}),qv=Uv,Ov=Uv.range,Yv=Qp(function(t){t.setUTCMinutes(0,0,0)},function(t,n){t.setTime(+t+36e5*n)},function(t,n){return(n-t)/36e5},function(t){return t.getUTCHours()}),Bv=Yv,Iv=Yv.range,Fv=Qp(function(t){t.setUTCHours(0,0,0,0)},function(t,n){t.setUTCDate(t.getUTCDate()+n)},function(t,n){return(n-t)/864e5},function(t){return t.getUTCDate()-1}),Hv=Fv,jv=Fv.range;function Xv(t){return Qp(function(n){n.setUTCDate(n.getUTCDate()-(n.getUTCDay()+7-t)%7),n.setUTCHours(0,0,0,0)},function(t,n){t.setUTCDate(t.getUTCDate()+7*n)},function(t,n){return(n-t)/ev})}var Gv=Xv(0),Vv=Xv(1),$v=Xv(2),Wv=Xv(3),Zv=Xv(4),Qv=Xv(5),Jv=Xv(6),Kv=Gv.range,tg=Vv.range,ng=$v.range,eg=Wv.range,rg=Zv.range,ig=Qv.range,ug=Jv.range,og=Qp(function(t){t.setUTCDate(1),t.setUTCHours(0,0,0,0)},function(t,n){t.setUTCMonth(t.getUTCMonth()+n)},function(t,n){return n.getUTCMonth()-t.getUTCMonth()+12*(n.getUTCFullYear()-t.getUTCFullYear())},function(t){return t.getUTCMonth()}),ag=og,fg=og.range,cg=Qp(function(t){t.setUTCMonth(0,1),t.setUTCHours(0,0,0,0)},function(t,n){t.setUTCFullYear(t.getUTCFullYear()+n)},function(t,n){return n.getUTCFullYear()-t.getUTCFullYear()},function(t){return t.getUTCFullYear()});cg.every=function(t){return isFinite(t=Math.floor(t))&&t>0?Qp(function(n){n.setUTCFullYear(Math.floor(n.getUTCFullYear()/t)*t),n.setUTCMonth(0,1),n.setUTCHours(0,0,0,0)},function(n,e){n.setUTCFullYear(n.getUTCFullYear()+e*t)}):null};var sg=cg,lg=cg.range;function hg(t){if(0<=t.y&&t.y<100){var n=new Date(-1,t.m,t.d,t.H,t.M,t.S,t.L);return n.setFullYear(t.y),n}return new Date(t.y,t.m,t.d,t.H,t.M,t.S,t.L)}function dg(t){if(0<=t.y&&t.y<100){var n=new Date(Date.UTC(-1,t.m,t.d,t.H,t.M,t.S,t.L));return n.setUTCFullYear(t.y),n}return new Date(Date.UTC(t.y,t.m,t.d,t.H,t.M,t.S,t.L))}function pg(t){return{y:t,m:0,d:1,H:0,M:0,S:0,L:0}}function vg(t){var n=t.dateTime,e=t.date,r=t.time,i=t.periods,u=t.days,o=t.shortDays,a=t.months,f=t.shortMonths,c=Sg(i),s=Eg(i),l=Sg(u),h=Eg(u),d=Sg(o),p=Eg(o),v=Sg(a),g=Eg(a),y=Sg(f),_=Eg(f),b={a:function(t){return o[t.getDay()]},A:function(t){return u[t.getDay()]},b:function(t){return f[t.getMonth()]},B:function(t){return a[t.getMonth()]},c:null,d:$g,e:$g,f:Kg,H:Wg,I:Zg,j:Qg,L:Jg,m:ty,M:ny,p:function(t){return i[+(t.getHours()>=12)]},Q:ky,s:Cy,S:ey,u:ry,U:iy,V:uy,w:oy,W:ay,x:null,X:null,y:fy,Y:cy,Z:sy,"%":Ey},m={a:function(t){return o[t.getUTCDay()]},A:function(t){return u[t.getUTCDay()]},b:function(t){return f[t.getUTCMonth()]},B:function(t){return a[t.getUTCMonth()]},c:null,d:ly,e:ly,f:gy,H:hy,I:dy,j:py,L:vy,m:yy,M:_y,p:function(t){return i[+(t.getUTCHours()>=12)]},Q:ky,s:Cy,S:by,u:my,U:xy,V:wy,w:My,W:Ay,x:null,X:null,y:Ty,Y:Ny,Z:Sy,"%":Ey},x={a:function(t,n,e){var r=d.exec(n.slice(e));return r?(t.w=p[r[0].toLowerCase()],e+r[0].length):-1},A:function(t,n,e){var r=l.exec(n.slice(e));return r?(t.w=h[r[0].toLowerCase()],e+r[0].length):-1},b:function(t,n,e){var r=y.exec(n.slice(e));return r?(t.m=_[r[0].toLowerCase()],e+r[0].length):-1},B:function(t,n,e){var r=v.exec(n.slice(e));return r?(t.m=g[r[0].toLowerCase()],e+r[0].length):-1},c:function(t,e,r){return A(t,n,e,r)},d:Og,e:Og,f:jg,H:Bg,I:Bg,j:Yg,L:Hg,m:qg,M:Ig,p:function(t,n,e){var r=c.exec(n.slice(e));return r?(t.p=s[r[0].toLowerCase()],e+r[0].length):-1},Q:Gg,s:Vg,S:Fg,u:Cg,U:Pg,V:zg,w:kg,W:Rg,x:function(t,n,r){return A(t,e,n,r)},X:function(t,n,e){return A(t,r,n,e)},y:Dg,Y:Lg,Z:Ug,"%":Xg};function w(t,n){return function(e){var r,i,u,o=[],a=-1,f=0,c=t.length;for(e instanceof Date||(e=new Date(+e));++a<c;)37===t.charCodeAt(a)&&(o.push(t.slice(f,a)),null!=(i=xg[r=t.charAt(++a)])?r=t.charAt(++a):i="e"===r?" ":"0",(u=n[r])&&(r=u(e,i)),o.push(r),f=a+1);return o.push(t.slice(f,a)),o.join("")}}function M(t,n){return function(e){var r,i,u=pg(1900);if(A(u,t,e+="",0)!=e.length)return null;if("Q"in u)return new Date(u.Q);if("p"in u&&(u.H=u.H%12+12*u.p),"V"in u){if(u.V<1||u.V>53)return null;"w"in u||(u.w=1),"Z"in u?(r=(i=(r=dg(pg(u.y))).getUTCDay())>4||0===i?Vv.ceil(r):Vv(r),r=Hv.offset(r,7*(u.V-1)),u.y=r.getUTCFullYear(),u.m=r.getUTCMonth(),u.d=r.getUTCDate()+(u.w+6)%7):(r=(i=(r=n(pg(u.y))).getDay())>4||0===i?yv.ceil(r):yv(r),r=dv.offset(r,7*(u.V-1)),u.y=r.getFullYear(),u.m=r.getMonth(),u.d=r.getDate()+(u.w+6)%7)}else("W"in u||"U"in u)&&("w"in u||(u.w="u"in u?u.u%7:"W"in u?1:0),i="Z"in u?dg(pg(u.y)).getUTCDay():n(pg(u.y)).getDay(),u.m=0,u.d="W"in u?(u.w+6)%7+7*u.W-(i+5)%7:u.w+7*u.U-(i+6)%7);return"Z"in u?(u.H+=u.Z/100|0,u.M+=u.Z%100,dg(u)):n(u)}}function A(t,n,e,r){for(var i,u,o=0,a=n.length,f=e.length;o<a;){if(r>=f)return-1;if(37===(i=n.charCodeAt(o++))){if(i=n.charAt(o++),!(u=x[i in xg?n.charAt(o++):i])||(r=u(t,e,r))<0)return-1}else if(i!=e.charCodeAt(r++))return-1}return r}return b.x=w(e,b),b.X=w(r,b),b.c=w(n,b),m.x=w(e,m),m.X=w(r,m),m.c=w(n,m),{format:function(t){var n=w(t+="",b);return n.toString=function(){return t},n},parse:function(t){var n=M(t+="",hg);return n.toString=function(){return t},n},utcFormat:function(t){var n=w(t+="",m);return n.toString=function(){return t},n},utcParse:function(t){var n=M(t,dg);return n.toString=function(){return t},n}}}var gg,yg,_g,bg,mg,xg={"-":"",_:" ",0:"0"},wg=/^\s*\d+/,Mg=/^%/,Ag=/[\\^$*+?|[\]().{}]/g;function Tg(t,n,e){var r=t<0?"-":"",i=(r?-t:t)+"",u=i.length;return r+(u<e?new Array(e-u+1).join(n)+i:i)}function Ng(t){return t.replace(Ag,"\\$&")}function Sg(t){return new RegExp("^(?:"+t.map(Ng).join("|")+")","i")}function Eg(t){for(var n={},e=-1,r=t.length;++e<r;)n[t[e].toLowerCase()]=e;return n}function kg(t,n,e){var r=wg.exec(n.slice(e,e+1));return r?(t.w=+r[0],e+r[0].length):-1}function Cg(t,n,e){var r=wg.exec(n.slice(e,e+1));return r?(t.u=+r[0],e+r[0].length):-1}function Pg(t,n,e){var r=wg.exec(n.slice(e,e+2));return r?(t.U=+r[0],e+r[0].length):-1}function zg(t,n,e){var r=wg.exec(n.slice(e,e+2));return r?(t.V=+r[0],e+r[0].length):-1}function Rg(t,n,e){var r=wg.exec(n.slice(e,e+2));return r?(t.W=+r[0],e+r[0].length):-1}function Lg(t,n,e){var r=wg.exec(n.slice(e,e+4));return r?(t.y=+r[0],e+r[0].length):-1}function Dg(t,n,e){var r=wg.exec(n.slice(e,e+2));return r?(t.y=+r[0]+(+r[0]>68?1900:2e3),e+r[0].length):-1}function Ug(t,n,e){var r=/^(Z)|([+-]\d\d)(?::?(\d\d))?/.exec(n.slice(e,e+6));return r?(t.Z=r[1]?0:-(r[2]+(r[3]||"00")),e+r[0].length):-1}function qg(t,n,e){var r=wg.exec(n.slice(e,e+2));return r?(t.m=r[0]-1,e+r[0].length):-1}function Og(t,n,e){var r=wg.exec(n.slice(e,e+2));return r?(t.d=+r[0],e+r[0].length):-1}function Yg(t,n,e){var r=wg.exec(n.slice(e,e+3));return r?(t.m=0,t.d=+r[0],e+r[0].length):-1}function Bg(t,n,e){var r=wg.exec(n.slice(e,e+2));return r?(t.H=+r[0],e+r[0].length):-1}function Ig(t,n,e){var r=wg.exec(n.slice(e,e+2));return r?(t.M=+r[0],e+r[0].length):-1}function Fg(t,n,e){var r=wg.exec(n.slice(e,e+2));return r?(t.S=+r[0],e+r[0].length):-1}function Hg(t,n,e){var r=wg.exec(n.slice(e,e+3));return r?(t.L=+r[0],e+r[0].length):-1}function jg(t,n,e){var r=wg.exec(n.slice(e,e+6));return r?(t.L=Math.floor(r[0]/1e3),e+r[0].length):-1}function Xg(t,n,e){var r=Mg.exec(n.slice(e,e+1));return r?e+r[0].length:-1}function Gg(t,n,e){var r=wg.exec(n.slice(e));return r?(t.Q=+r[0],e+r[0].length):-1}function Vg(t,n,e){var r=wg.exec(n.slice(e));return r?(t.Q=1e3*+r[0],e+r[0].length):-1}function $g(t,n){return Tg(t.getDate(),n,2)}function Wg(t,n){return Tg(t.getHours(),n,2)}function Zg(t,n){return Tg(t.getHours()%12||12,n,2)}function Qg(t,n){return Tg(1+dv.count(Lv(t),t),n,3)}function Jg(t,n){return Tg(t.getMilliseconds(),n,3)}function Kg(t,n){return Jg(t,n)+"000"}function ty(t,n){return Tg(t.getMonth()+1,n,2)}function ny(t,n){return Tg(t.getMinutes(),n,2)}function ey(t,n){return Tg(t.getSeconds(),n,2)}function ry(t){var n=t.getDay();return 0===n?7:n}function iy(t,n){return Tg(gv.count(Lv(t),t),n,2)}function uy(t,n){var e=t.getDay();return t=e>=4||0===e?mv(t):mv.ceil(t),Tg(mv.count(Lv(t),t)+(4===Lv(t).getDay()),n,2)}function oy(t){return t.getDay()}function ay(t,n){return Tg(yv.count(Lv(t),t),n,2)}function fy(t,n){return Tg(t.getFullYear()%100,n,2)}function cy(t,n){return Tg(t.getFullYear()%1e4,n,4)}function sy(t){var n=t.getTimezoneOffset();return(n>0?"-":(n*=-1,"+"))+Tg(n/60|0,"0",2)+Tg(n%60,"0",2)}function ly(t,n){return Tg(t.getUTCDate(),n,2)}function hy(t,n){return Tg(t.getUTCHours(),n,2)}function dy(t,n){return Tg(t.getUTCHours()%12||12,n,2)}function py(t,n){return Tg(1+Hv.count(sg(t),t),n,3)}function vy(t,n){return Tg(t.getUTCMilliseconds(),n,3)}function gy(t,n){return vy(t,n)+"000"}function yy(t,n){return Tg(t.getUTCMonth()+1,n,2)}function _y(t,n){return Tg(t.getUTCMinutes(),n,2)}function by(t,n){return Tg(t.getUTCSeconds(),n,2)}function my(t){var n=t.getUTCDay();return 0===n?7:n}function xy(t,n){return Tg(Gv.count(sg(t),t),n,2)}function wy(t,n){var e=t.getUTCDay();return t=e>=4||0===e?Zv(t):Zv.ceil(t),Tg(Zv.count(sg(t),t)+(4===sg(t).getUTCDay()),n,2)}function My(t){return t.getUTCDay()}function Ay(t,n){return Tg(Vv.count(sg(t),t),n,2)}function Ty(t,n){return Tg(t.getUTCFullYear()%100,n,2)}function Ny(t,n){return Tg(t.getUTCFullYear()%1e4,n,4)}function Sy(){return"+0000"}function Ey(){return"%"}function ky(t){return+t}function Cy(t){return Math.floor(+t/1e3)}function Py(t){return gg=vg(t),yg=gg.format,_g=gg.parse,bg=gg.utcFormat,mg=gg.utcParse,gg}Py({dateTime:"%x, %X",date:"%-m/%-d/%Y",time:"%-I:%M:%S %p",periods:["AM","PM"],days:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],shortDays:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],months:["January","February","March","April","May","June","July","August","September","October","November","December"],shortMonths:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"]});var zy=Date.prototype.toISOString?function(t){return t.toISOString()}:bg("%Y-%m-%dT%H:%M:%S.%LZ");var Ry=+new Date("2000-01-01T00:00:00.000Z")?function(t){var n=new Date(t);return isNaN(n)?null:n}:mg("%Y-%m-%dT%H:%M:%S.%LZ"),Ly=1e3,Dy=60*Ly,Uy=60*Dy,qy=24*Uy,Oy=7*qy,Yy=30*qy,By=365*qy;function Iy(t){return new Date(t)}function Fy(t){return t instanceof Date?+t:+new Date(+t)}function Hy(t,n,e,r,u,o,a,f,c){var s=Cp(Np,Fe),l=s.invert,h=s.domain,d=c(".%L"),p=c(":%S"),v=c("%I:%M"),g=c("%I %p"),y=c("%a %d"),_=c("%b %d"),b=c("%B"),m=c("%Y"),x=[[a,1,Ly],[a,5,5*Ly],[a,15,15*Ly],[a,30,30*Ly],[o,1,Dy],[o,5,5*Dy],[o,15,15*Dy],[o,30,30*Dy],[u,1,Uy],[u,3,3*Uy],[u,6,6*Uy],[u,12,12*Uy],[r,1,qy],[r,2,2*qy],[e,1,Oy],[n,1,Yy],[n,3,3*Yy],[t,1,By]];function w(i){return(a(i)<i?d:o(i)<i?p:u(i)<i?v:r(i)<i?g:n(i)<i?e(i)<i?y:_:t(i)<i?b:m)(i)}function M(n,e,r,u){if(null==n&&(n=10),"number"==typeof n){var o=Math.abs(r-e)/n,a=i(function(t){return t[2]}).right(x,o);a===x.length?(u=E(e/By,r/By,n),n=t):a?(u=(a=x[o/x[a-1][2]<x[a][2]/o?a-1:a])[1],n=a[0]):(u=Math.max(E(e,r,n),1),n=f)}return null==u?n:n.every(u)}return s.invert=function(t){return new Date(l(t))},s.domain=function(t){return arguments.length?h(yp.call(t,Fy)):h().map(Iy)},s.ticks=function(t,n){var e,r=h(),i=r[0],u=r[r.length-1],o=u<i;return o&&(e=i,i=u,u=e),e=(e=M(t,i,u,n))?e.range(i,u+1):[],o?e.reverse():e},s.tickFormat=function(t,n){return null==n?w:c(n)},s.nice=function(t,n){var e=h();return(t=M(t,e[0],e[e.length-1],n))?h(Dp(e,t)):s},s.copy=function(){return kp(s,Hy(t,n,e,r,u,o,a,f,c))},s}var jy=function(){return Hy(Lv,Pv,gv,dv,sv,av,iv,Kp,yg).domain([new Date(2e3,0,1),new Date(2e3,0,2)])},Xy=function(){return Hy(sg,ag,Gv,Hv,Bv,qv,iv,Kp,bg).domain([Date.UTC(2e3,0,1),Date.UTC(2e3,0,2)])};function Gy(t){var n=0,e=1,r=1,i=!1;function u(e){var u=(e-n)*r;return t(i?Math.max(0,Math.min(1,u)):u)}return u.domain=function(t){return arguments.length?(n=+t[0],e=+t[1],r=n===e?0:1/(e-n),u):[n,e]},u.clamp=function(t){return arguments.length?(i=!!t,u):i},u.interpolator=function(n){return arguments.length?(t=n,u):t},u.copy=function(){return Gy(t).domain([n,e]).clamp(i)},zp(u)}function Vy(t){var n=0,e=.5,r=1,i=1,u=1,o=!1;function a(n){var r=.5+((n=+n)-e)*(n<e?i:u);return t(o?Math.max(0,Math.min(1,r)):r)}return a.domain=function(t){return arguments.length?(n=+t[0],e=+t[1],r=+t[2],i=n===e?0:.5/(e-n),u=e===r?0:.5/(r-e),a):[n,e,r]},a.clamp=function(t){return arguments.length?(o=!!t,a):o},a.interpolator=function(n){return arguments.length?(t=n,a):t},a.copy=function(){return Vy(t).domain([n,e,r]).clamp(o)},zp(a)}var $y=function(t){for(var n=t.length/6|0,e=new Array(n),r=0;r<n;)e[r]="#"+t.slice(6*r,6*++r);return e},Wy=$y("1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf"),Zy=$y("7fc97fbeaed4fdc086ffff99386cb0f0027fbf5b17666666"),Qy=$y("1b9e77d95f027570b3e7298a66a61ee6ab02a6761d666666"),Jy=$y("a6cee31f78b4b2df8a33a02cfb9a99e31a1cfdbf6fff7f00cab2d66a3d9affff99b15928"),Ky=$y("fbb4aeb3cde3ccebc5decbe4fed9a6ffffcce5d8bdfddaecf2f2f2"),t_=$y("b3e2cdfdcdaccbd5e8f4cae4e6f5c9fff2aef1e2cccccccc"),n_=$y("e41a1c377eb84daf4a984ea3ff7f00ffff33a65628f781bf999999"),e_=$y("66c2a5fc8d628da0cbe78ac3a6d854ffd92fe5c494b3b3b3"),r_=$y("8dd3c7ffffb3bebadafb807280b1d3fdb462b3de69fccde5d9d9d9bc80bdccebc5ffed6f"),i_=function(t){return Oe(t[t.length-1])},u_=new Array(3).concat("d8b365f5f5f55ab4ac","a6611adfc27d80cdc1018571","a6611adfc27df5f5f580cdc1018571","8c510ad8b365f6e8c3c7eae55ab4ac01665e","8c510ad8b365f6e8c3f5f5f5c7eae55ab4ac01665e","8c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e","8c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e","5430058c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e003c30","5430058c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e003c30").map($y),o_=i_(u_),a_=new Array(3).concat("af8dc3f7f7f77fbf7b","7b3294c2a5cfa6dba0008837","7b3294c2a5cff7f7f7a6dba0008837","762a83af8dc3e7d4e8d9f0d37fbf7b1b7837","762a83af8dc3e7d4e8f7f7f7d9f0d37fbf7b1b7837","762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b7837","762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b7837","40004b762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b783700441b","40004b762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b783700441b").map($y),f_=i_(a_),c_=new Array(3).concat("e9a3c9f7f7f7a1d76a","d01c8bf1b6dab8e1864dac26","d01c8bf1b6daf7f7f7b8e1864dac26","c51b7de9a3c9fde0efe6f5d0a1d76a4d9221","c51b7de9a3c9fde0eff7f7f7e6f5d0a1d76a4d9221","c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221","c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221","8e0152c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221276419","8e0152c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221276419").map($y),s_=i_(c_),l_=new Array(3).concat("998ec3f7f7f7f1a340","5e3c99b2abd2fdb863e66101","5e3c99b2abd2f7f7f7fdb863e66101","542788998ec3d8daebfee0b6f1a340b35806","542788998ec3d8daebf7f7f7fee0b6f1a340b35806","5427888073acb2abd2d8daebfee0b6fdb863e08214b35806","5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b35806","2d004b5427888073acb2abd2d8daebfee0b6fdb863e08214b358067f3b08","2d004b5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b358067f3b08").map($y),h_=i_(l_),d_=new Array(3).concat("ef8a62f7f7f767a9cf","ca0020f4a58292c5de0571b0","ca0020f4a582f7f7f792c5de0571b0","b2182bef8a62fddbc7d1e5f067a9cf2166ac","b2182bef8a62fddbc7f7f7f7d1e5f067a9cf2166ac","b2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac","b2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac","67001fb2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac053061","67001fb2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac053061").map($y),p_=i_(d_),v_=new Array(3).concat("ef8a62ffffff999999","ca0020f4a582bababa404040","ca0020f4a582ffffffbababa404040","b2182bef8a62fddbc7e0e0e09999994d4d4d","b2182bef8a62fddbc7ffffffe0e0e09999994d4d4d","b2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d","b2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d","67001fb2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d1a1a1a","67001fb2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d1a1a1a").map($y),g_=i_(v_),y_=new Array(3).concat("fc8d59ffffbf91bfdb","d7191cfdae61abd9e92c7bb6","d7191cfdae61ffffbfabd9e92c7bb6","d73027fc8d59fee090e0f3f891bfdb4575b4","d73027fc8d59fee090ffffbfe0f3f891bfdb4575b4","d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4","d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4","a50026d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4313695","a50026d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4313695").map($y),__=i_(y_),b_=new Array(3).concat("fc8d59ffffbf91cf60","d7191cfdae61a6d96a1a9641","d7191cfdae61ffffbfa6d96a1a9641","d73027fc8d59fee08bd9ef8b91cf601a9850","d73027fc8d59fee08bffffbfd9ef8b91cf601a9850","d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850","d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850","a50026d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850006837","a50026d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850006837").map($y),m_=i_(b_),x_=new Array(3).concat("fc8d59ffffbf99d594","d7191cfdae61abdda42b83ba","d7191cfdae61ffffbfabdda42b83ba","d53e4ffc8d59fee08be6f59899d5943288bd","d53e4ffc8d59fee08bffffbfe6f59899d5943288bd","d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd","d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd","9e0142d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd5e4fa2","9e0142d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd5e4fa2").map($y),w_=i_(x_),M_=new Array(3).concat("e5f5f999d8c92ca25f","edf8fbb2e2e266c2a4238b45","edf8fbb2e2e266c2a42ca25f006d2c","edf8fbccece699d8c966c2a42ca25f006d2c","edf8fbccece699d8c966c2a441ae76238b45005824","f7fcfde5f5f9ccece699d8c966c2a441ae76238b45005824","f7fcfde5f5f9ccece699d8c966c2a441ae76238b45006d2c00441b").map($y),A_=i_(M_),T_=new Array(3).concat("e0ecf49ebcda8856a7","edf8fbb3cde38c96c688419d","edf8fbb3cde38c96c68856a7810f7c","edf8fbbfd3e69ebcda8c96c68856a7810f7c","edf8fbbfd3e69ebcda8c96c68c6bb188419d6e016b","f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d6e016b","f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d810f7c4d004b").map($y),N_=i_(T_),S_=new Array(3).concat("e0f3dba8ddb543a2ca","f0f9e8bae4bc7bccc42b8cbe","f0f9e8bae4bc7bccc443a2ca0868ac","f0f9e8ccebc5a8ddb57bccc443a2ca0868ac","f0f9e8ccebc5a8ddb57bccc44eb3d32b8cbe08589e","f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe08589e","f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe0868ac084081").map($y),E_=i_(S_),k_=new Array(3).concat("fee8c8fdbb84e34a33","fef0d9fdcc8afc8d59d7301f","fef0d9fdcc8afc8d59e34a33b30000","fef0d9fdd49efdbb84fc8d59e34a33b30000","fef0d9fdd49efdbb84fc8d59ef6548d7301f990000","fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301f990000","fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301fb300007f0000").map($y),C_=i_(k_),P_=new Array(3).concat("ece2f0a6bddb1c9099","f6eff7bdc9e167a9cf02818a","f6eff7bdc9e167a9cf1c9099016c59","f6eff7d0d1e6a6bddb67a9cf1c9099016c59","f6eff7d0d1e6a6bddb67a9cf3690c002818a016450","fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016450","fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016c59014636").map($y),z_=i_(P_),R_=new Array(3).concat("ece7f2a6bddb2b8cbe","f1eef6bdc9e174a9cf0570b0","f1eef6bdc9e174a9cf2b8cbe045a8d","f1eef6d0d1e6a6bddb74a9cf2b8cbe045a8d","f1eef6d0d1e6a6bddb74a9cf3690c00570b0034e7b","fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0034e7b","fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0045a8d023858").map($y),L_=i_(R_),D_=new Array(3).concat("e7e1efc994c7dd1c77","f1eef6d7b5d8df65b0ce1256","f1eef6d7b5d8df65b0dd1c77980043","f1eef6d4b9dac994c7df65b0dd1c77980043","f1eef6d4b9dac994c7df65b0e7298ace125691003f","f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125691003f","f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125698004367001f").map($y),U_=i_(D_),q_=new Array(3).concat("fde0ddfa9fb5c51b8a","feebe2fbb4b9f768a1ae017e","feebe2fbb4b9f768a1c51b8a7a0177","feebe2fcc5c0fa9fb5f768a1c51b8a7a0177","feebe2fcc5c0fa9fb5f768a1dd3497ae017e7a0177","fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a0177","fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a017749006a").map($y),O_=i_(q_),Y_=new Array(3).concat("edf8b17fcdbb2c7fb8","ffffcca1dab441b6c4225ea8","ffffcca1dab441b6c42c7fb8253494","ffffccc7e9b47fcdbb41b6c42c7fb8253494","ffffccc7e9b47fcdbb41b6c41d91c0225ea80c2c84","ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea80c2c84","ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea8253494081d58").map($y),B_=i_(Y_),I_=new Array(3).concat("f7fcb9addd8e31a354","ffffccc2e69978c679238443","ffffccc2e69978c67931a354006837","ffffccd9f0a3addd8e78c67931a354006837","ffffccd9f0a3addd8e78c67941ab5d238443005a32","ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443005a32","ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443006837004529").map($y),F_=i_(I_),H_=new Array(3).concat("fff7bcfec44fd95f0e","ffffd4fed98efe9929cc4c02","ffffd4fed98efe9929d95f0e993404","ffffd4fee391fec44ffe9929d95f0e993404","ffffd4fee391fec44ffe9929ec7014cc4c028c2d04","ffffe5fff7bcfee391fec44ffe9929ec7014cc4c028c2d04","ffffe5fff7bcfee391fec44ffe9929ec7014cc4c02993404662506").map($y),j_=i_(H_),X_=new Array(3).concat("ffeda0feb24cf03b20","ffffb2fecc5cfd8d3ce31a1c","ffffb2fecc5cfd8d3cf03b20bd0026","ffffb2fed976feb24cfd8d3cf03b20bd0026","ffffb2fed976feb24cfd8d3cfc4e2ae31a1cb10026","ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cb10026","ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cbd0026800026").map($y),G_=i_(X_),V_=new Array(3).concat("deebf79ecae13182bd","eff3ffbdd7e76baed62171b5","eff3ffbdd7e76baed63182bd08519c","eff3ffc6dbef9ecae16baed63182bd08519c","eff3ffc6dbef9ecae16baed64292c62171b5084594","f7fbffdeebf7c6dbef9ecae16baed64292c62171b5084594","f7fbffdeebf7c6dbef9ecae16baed64292c62171b508519c08306b").map($y),$_=i_(V_),W_=new Array(3).concat("e5f5e0a1d99b31a354","edf8e9bae4b374c476238b45","edf8e9bae4b374c47631a354006d2c","edf8e9c7e9c0a1d99b74c47631a354006d2c","edf8e9c7e9c0a1d99b74c47641ab5d238b45005a32","f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45005a32","f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45006d2c00441b").map($y),Z_=i_(W_),Q_=new Array(3).concat("f0f0f0bdbdbd636363","f7f7f7cccccc969696525252","f7f7f7cccccc969696636363252525","f7f7f7d9d9d9bdbdbd969696636363252525","f7f7f7d9d9d9bdbdbd969696737373525252252525","fffffff0f0f0d9d9d9bdbdbd969696737373525252252525","fffffff0f0f0d9d9d9bdbdbd969696737373525252252525000000").map($y),J_=i_(Q_),K_=new Array(3).concat("efedf5bcbddc756bb1","f2f0f7cbc9e29e9ac86a51a3","f2f0f7cbc9e29e9ac8756bb154278f","f2f0f7dadaebbcbddc9e9ac8756bb154278f","f2f0f7dadaebbcbddc9e9ac8807dba6a51a34a1486","fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a34a1486","fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a354278f3f007d").map($y),tb=i_(K_),nb=new Array(3).concat("fee0d2fc9272de2d26","fee5d9fcae91fb6a4acb181d","fee5d9fcae91fb6a4ade2d26a50f15","fee5d9fcbba1fc9272fb6a4ade2d26a50f15","fee5d9fcbba1fc9272fb6a4aef3b2ccb181d99000d","fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181d99000d","fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181da50f1567000d").map($y),eb=i_(nb),rb=new Array(3).concat("fee6cefdae6be6550d","feeddefdbe85fd8d3cd94701","feeddefdbe85fd8d3ce6550da63603","feeddefdd0a2fdae6bfd8d3ce6550da63603","feeddefdd0a2fdae6bfd8d3cf16913d948018c2d04","fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d948018c2d04","fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d94801a636037f2704").map($y),ib=i_(rb),ub=br(Ne(300,.5,0),Ne(-240,.5,1)),ob=br(Ne(-100,.75,.35),Ne(80,1.5,.8)),ab=br(Ne(260,.75,.35),Ne(80,1.5,.8)),fb=Ne(),cb=function(t){(t<0||t>1)&&(t-=Math.floor(t));var n=Math.abs(t-.5);return fb.h=360*t-100,fb.s=1.5-1.5*n,fb.l=.8-.9*n,fb+""},sb=Gn(),lb=Math.PI/3,hb=2*Math.PI/3,db=function(t){var n;return t=(.5-t)*Math.PI,sb.r=255*(n=Math.sin(t))*n,sb.g=255*(n=Math.sin(t+lb))*n,sb.b=255*(n=Math.sin(t+hb))*n,sb+""};function pb(t){var n=t.length;return function(e){return t[Math.max(0,Math.min(n-1,Math.floor(e*n)))]}}var vb=pb($y("44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725")),gb=pb($y("00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf")),yb=pb($y("00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4")),_b=pb($y("0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921")),bb=function(t){return function(){return t}},mb=Math.abs,xb=Math.atan2,wb=Math.cos,Mb=Math.max,Ab=Math.min,Tb=Math.sin,Nb=Math.sqrt,Sb=1e-12,Eb=Math.PI,kb=Eb/2,Cb=2*Eb;function Pb(t){return t>=1?kb:t<=-1?-kb:Math.asin(t)}function zb(t){return t.innerRadius}function Rb(t){return t.outerRadius}function Lb(t){return t.startAngle}function Db(t){return t.endAngle}function Ub(t){return t&&t.padAngle}function qb(t,n,e,r,i,u,o){var a=t-e,f=n-r,c=(o?u:-u)/Nb(a*a+f*f),s=c*f,l=-c*a,h=t+s,d=n+l,p=e+s,v=r+l,g=(h+p)/2,y=(d+v)/2,_=p-h,b=v-d,m=_*_+b*b,x=i-u,w=h*v-p*d,M=(b<0?-1:1)*Nb(Mb(0,x*x*m-w*w)),A=(w*b-_*M)/m,T=(-w*_-b*M)/m,N=(w*b+_*M)/m,S=(-w*_+b*M)/m,E=A-g,k=T-y,C=N-g,P=S-y;return E*E+k*k>C*C+P*P&&(A=N,T=S),{cx:A,cy:T,x01:-s,y01:-l,x11:A*(i/x-1),y11:T*(i/x-1)}}var Ob=function(){var t=zb,n=Rb,e=bb(0),r=null,i=Lb,u=Db,o=Ub,a=null;function f(){var f,c,s=+t.apply(this,arguments),l=+n.apply(this,arguments),h=i.apply(this,arguments)-kb,d=u.apply(this,arguments)-kb,p=mb(d-h),v=d>h;if(a||(a=f=Fu()),l<s&&(c=l,l=s,s=c),l>Sb)if(p>Cb-Sb)a.moveTo(l*wb(h),l*Tb(h)),a.arc(0,0,l,h,d,!v),s>Sb&&(a.moveTo(s*wb(d),s*Tb(d)),a.arc(0,0,s,d,h,v));else{var g,y,_=h,b=d,m=h,x=d,w=p,M=p,A=o.apply(this,arguments)/2,T=A>Sb&&(r?+r.apply(this,arguments):Nb(s*s+l*l)),N=Ab(mb(l-s)/2,+e.apply(this,arguments)),S=N,E=N;if(T>Sb){var k=Pb(T/s*Tb(A)),C=Pb(T/l*Tb(A));(w-=2*k)>Sb?(m+=k*=v?1:-1,x-=k):(w=0,m=x=(h+d)/2),(M-=2*C)>Sb?(_+=C*=v?1:-1,b-=C):(M=0,_=b=(h+d)/2)}var P=l*wb(_),z=l*Tb(_),R=s*wb(x),L=s*Tb(x);if(N>Sb){var D=l*wb(b),U=l*Tb(b),q=s*wb(m),O=s*Tb(m);if(p<Eb){var Y=w>Sb?function(t,n,e,r,i,u,o,a){var f=e-t,c=r-n,s=o-i,l=a-u,h=(s*(n-u)-l*(t-i))/(l*f-s*c);return[t+h*f,n+h*c]}(P,z,q,O,D,U,R,L):[R,L],B=P-Y[0],I=z-Y[1],F=D-Y[0],H=U-Y[1],j=1/Tb(function(t){return t>1?0:t<-1?Eb:Math.acos(t)}((B*F+I*H)/(Nb(B*B+I*I)*Nb(F*F+H*H)))/2),X=Nb(Y[0]*Y[0]+Y[1]*Y[1]);S=Ab(N,(s-X)/(j-1)),E=Ab(N,(l-X)/(j+1))}}M>Sb?E>Sb?(g=qb(q,O,P,z,l,E,v),y=qb(D,U,R,L,l,E,v),a.moveTo(g.cx+g.x01,g.cy+g.y01),E<N?a.arc(g.cx,g.cy,E,xb(g.y01,g.x01),xb(y.y01,y.x01),!v):(a.arc(g.cx,g.cy,E,xb(g.y01,g.x01),xb(g.y11,g.x11),!v),a.arc(0,0,l,xb(g.cy+g.y11,g.cx+g.x11),xb(y.cy+y.y11,y.cx+y.x11),!v),a.arc(y.cx,y.cy,E,xb(y.y11,y.x11),xb(y.y01,y.x01),!v))):(a.moveTo(P,z),a.arc(0,0,l,_,b,!v)):a.moveTo(P,z),s>Sb&&w>Sb?S>Sb?(g=qb(R,L,D,U,s,-S,v),y=qb(P,z,q,O,s,-S,v),a.lineTo(g.cx+g.x01,g.cy+g.y01),S<N?a.arc(g.cx,g.cy,S,xb(g.y01,g.x01),xb(y.y01,y.x01),!v):(a.arc(g.cx,g.cy,S,xb(g.y01,g.x01),xb(g.y11,g.x11),!v),a.arc(0,0,s,xb(g.cy+g.y11,g.cx+g.x11),xb(y.cy+y.y11,y.cx+y.x11),v),a.arc(y.cx,y.cy,S,xb(y.y11,y.x11),xb(y.y01,y.x01),!v))):a.arc(0,0,s,x,m,v):a.lineTo(R,L)}else a.moveTo(0,0);if(a.closePath(),f)return a=null,f+""||null}return f.centroid=function(){var e=(+t.apply(this,arguments)+ +n.apply(this,arguments))/2,r=(+i.apply(this,arguments)+ +u.apply(this,arguments))/2-Eb/2;return[wb(r)*e,Tb(r)*e]},f.innerRadius=function(n){return arguments.length?(t="function"==typeof n?n:bb(+n),f):t},f.outerRadius=function(t){return arguments.length?(n="function"==typeof t?t:bb(+t),f):n},f.cornerRadius=function(t){return arguments.length?(e="function"==typeof t?t:bb(+t),f):e},f.padRadius=function(t){return arguments.length?(r=null==t?null:"function"==typeof t?t:bb(+t),f):r},f.startAngle=function(t){return arguments.length?(i="function"==typeof t?t:bb(+t),f):i},f.endAngle=function(t){return arguments.length?(u="function"==typeof t?t:bb(+t),f):u},f.padAngle=function(t){return arguments.length?(o="function"==typeof t?t:bb(+t),f):o},f.context=function(t){return arguments.length?(a=null==t?null:t,f):a},f};function Yb(t){this._context=t}Yb.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._point=0},lineEnd:function(){(this._line||0!==this._line&&1===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(t,n){switch(t=+t,n=+n,this._point){case 0:this._point=1,this._line?this._context.lineTo(t,n):this._context.moveTo(t,n);break;case 1:this._point=2;default:this._context.lineTo(t,n)}}};var Bb=function(t){return new Yb(t)};function Ib(t){return t[0]}function Fb(t){return t[1]}var Hb=function(){var t=Ib,n=Fb,e=bb(!0),r=null,i=Bb,u=null;function o(o){var a,f,c,s=o.length,l=!1;for(null==r&&(u=i(c=Fu())),a=0;a<=s;++a)!(a<s&&e(f=o[a],a,o))===l&&((l=!l)?u.lineStart():u.lineEnd()),l&&u.point(+t(f,a,o),+n(f,a,o));if(c)return u=null,c+""||null}return o.x=function(n){return arguments.length?(t="function"==typeof n?n:bb(+n),o):t},o.y=function(t){return arguments.length?(n="function"==typeof t?t:bb(+t),o):n},o.defined=function(t){return arguments.length?(e="function"==typeof t?t:bb(!!t),o):e},o.curve=function(t){return arguments.length?(i=t,null!=r&&(u=i(r)),o):i},o.context=function(t){return arguments.length?(null==t?r=u=null:u=i(r=t),o):r},o},jb=function(){var t=Ib,n=null,e=bb(0),r=Fb,i=bb(!0),u=null,o=Bb,a=null;function f(f){var c,s,l,h,d,p=f.length,v=!1,g=new Array(p),y=new Array(p);for(null==u&&(a=o(d=Fu())),c=0;c<=p;++c){if(!(c<p&&i(h=f[c],c,f))===v)if(v=!v)s=c,a.areaStart(),a.lineStart();else{for(a.lineEnd(),a.lineStart(),l=c-1;l>=s;--l)a.point(g[l],y[l]);a.lineEnd(),a.areaEnd()}v&&(g[c]=+t(h,c,f),y[c]=+e(h,c,f),a.point(n?+n(h,c,f):g[c],r?+r(h,c,f):y[c]))}if(d)return a=null,d+""||null}function c(){return Hb().defined(i).curve(o).context(u)}return f.x=function(e){return arguments.length?(t="function"==typeof e?e:bb(+e),n=null,f):t},f.x0=function(n){return arguments.length?(t="function"==typeof n?n:bb(+n),f):t},f.x1=function(t){return arguments.length?(n=null==t?null:"function"==typeof t?t:bb(+t),f):n},f.y=function(t){return arguments.length?(e="function"==typeof t?t:bb(+t),r=null,f):e},f.y0=function(t){return arguments.length?(e="function"==typeof t?t:bb(+t),f):e},f.y1=function(t){return arguments.length?(r=null==t?null:"function"==typeof t?t:bb(+t),f):r},f.lineX0=f.lineY0=function(){return c().x(t).y(e)},f.lineY1=function(){return c().x(t).y(r)},f.lineX1=function(){return c().x(n).y(e)},f.defined=function(t){return arguments.length?(i="function"==typeof t?t:bb(!!t),f):i},f.curve=function(t){return arguments.length?(o=t,null!=u&&(a=o(u)),f):o},f.context=function(t){return arguments.length?(null==t?u=a=null:a=o(u=t),f):u},f},Xb=function(t,n){return n<t?-1:n>t?1:n>=t?0:NaN},Gb=function(t){return t},Vb=function(){var t=Gb,n=Xb,e=null,r=bb(0),i=bb(Cb),u=bb(0);function o(o){var a,f,c,s,l,h=o.length,d=0,p=new Array(h),v=new Array(h),g=+r.apply(this,arguments),y=Math.min(Cb,Math.max(-Cb,i.apply(this,arguments)-g)),_=Math.min(Math.abs(y)/h,u.apply(this,arguments)),b=_*(y<0?-1:1);for(a=0;a<h;++a)(l=v[p[a]=a]=+t(o[a],a,o))>0&&(d+=l);for(null!=n?p.sort(function(t,e){return n(v[t],v[e])}):null!=e&&p.sort(function(t,n){return e(o[t],o[n])}),a=0,c=d?(y-h*b)/d:0;a<h;++a,g=s)f=p[a],s=g+((l=v[f])>0?l*c:0)+b,v[f]={data:o[f],index:a,value:l,startAngle:g,endAngle:s,padAngle:_};return v}return o.value=function(n){return arguments.length?(t="function"==typeof n?n:bb(+n),o):t},o.sortValues=function(t){return arguments.length?(n=t,e=null,o):n},o.sort=function(t){return arguments.length?(e=t,n=null,o):e},o.startAngle=function(t){return arguments.length?(r="function"==typeof t?t:bb(+t),o):r},o.endAngle=function(t){return arguments.length?(i="function"==typeof t?t:bb(+t),o):i},o.padAngle=function(t){return arguments.length?(u="function"==typeof t?t:bb(+t),o):u},o},$b=Zb(Bb);function Wb(t){this._curve=t}function Zb(t){function n(n){return new Wb(t(n))}return n._curve=t,n}function Qb(t){var n=t.curve;return t.angle=t.x,delete t.x,t.radius=t.y,delete t.y,t.curve=function(t){return arguments.length?n(Zb(t)):n()._curve},t}Wb.prototype={areaStart:function(){this._curve.areaStart()},areaEnd:function(){this._curve.areaEnd()},lineStart:function(){this._curve.lineStart()},lineEnd:function(){this._curve.lineEnd()},point:function(t,n){this._curve.point(n*Math.sin(t),n*-Math.cos(t))}};var Jb=function(){return Qb(Hb().curve($b))},Kb=function(){var t=jb().curve($b),n=t.curve,e=t.lineX0,r=t.lineX1,i=t.lineY0,u=t.lineY1;return t.angle=t.x,delete t.x,t.startAngle=t.x0,delete t.x0,t.endAngle=t.x1,delete t.x1,t.radius=t.y,delete t.y,t.innerRadius=t.y0,delete t.y0,t.outerRadius=t.y1,delete t.y1,t.lineStartAngle=function(){return Qb(e())},delete t.lineX0,t.lineEndAngle=function(){return Qb(r())},delete t.lineX1,t.lineInnerRadius=function(){return Qb(i())},delete t.lineY0,t.lineOuterRadius=function(){return Qb(u())},delete t.lineY1,t.curve=function(t){return arguments.length?n(Zb(t)):n()._curve},t},tm=function(t,n){return[(n=+n)*Math.cos(t-=Math.PI/2),n*Math.sin(t)]},nm=Array.prototype.slice;function em(t){return t.source}function rm(t){return t.target}function im(t){var n=em,e=rm,r=Ib,i=Fb,u=null;function o(){var o,a=nm.call(arguments),f=n.apply(this,a),c=e.apply(this,a);if(u||(u=o=Fu()),t(u,+r.apply(this,(a[0]=f,a)),+i.apply(this,a),+r.apply(this,(a[0]=c,a)),+i.apply(this,a)),o)return u=null,o+""||null}return o.source=function(t){return arguments.length?(n=t,o):n},o.target=function(t){return arguments.length?(e=t,o):e},o.x=function(t){return arguments.length?(r="function"==typeof t?t:bb(+t),o):r},o.y=function(t){return arguments.length?(i="function"==typeof t?t:bb(+t),o):i},o.context=function(t){return arguments.length?(u=null==t?null:t,o):u},o}function um(t,n,e,r,i){t.moveTo(n,e),t.bezierCurveTo(n=(n+r)/2,e,n,i,r,i)}function om(t,n,e,r,i){t.moveTo(n,e),t.bezierCurveTo(n,e=(e+i)/2,r,e,r,i)}function am(t,n,e,r,i){var u=tm(n,e),o=tm(n,e=(e+i)/2),a=tm(r,e),f=tm(r,i);t.moveTo(u[0],u[1]),t.bezierCurveTo(o[0],o[1],a[0],a[1],f[0],f[1])}function fm(){return im(um)}function cm(){return im(om)}function sm(){var t=im(am);return t.angle=t.x,delete t.x,t.radius=t.y,delete t.y,t}var lm={draw:function(t,n){var e=Math.sqrt(n/Eb);t.moveTo(e,0),t.arc(0,0,e,0,Cb)}},hm={draw:function(t,n){var e=Math.sqrt(n/5)/2;t.moveTo(-3*e,-e),t.lineTo(-e,-e),t.lineTo(-e,-3*e),t.lineTo(e,-3*e),t.lineTo(e,-e),t.lineTo(3*e,-e),t.lineTo(3*e,e),t.lineTo(e,e),t.lineTo(e,3*e),t.lineTo(-e,3*e),t.lineTo(-e,e),t.lineTo(-3*e,e),t.closePath()}},dm=Math.sqrt(1/3),pm=2*dm,vm={draw:function(t,n){var e=Math.sqrt(n/pm),r=e*dm;t.moveTo(0,-e),t.lineTo(r,0),t.lineTo(0,e),t.lineTo(-r,0),t.closePath()}},gm=Math.sin(Eb/10)/Math.sin(7*Eb/10),ym=Math.sin(Cb/10)*gm,_m=-Math.cos(Cb/10)*gm,bm={draw:function(t,n){var e=Math.sqrt(.8908130915292852*n),r=ym*e,i=_m*e;t.moveTo(0,-e),t.lineTo(r,i);for(var u=1;u<5;++u){var o=Cb*u/5,a=Math.cos(o),f=Math.sin(o);t.lineTo(f*e,-a*e),t.lineTo(a*r-f*i,f*r+a*i)}t.closePath()}},mm={draw:function(t,n){var e=Math.sqrt(n),r=-e/2;t.rect(r,r,e,e)}},xm=Math.sqrt(3),wm={draw:function(t,n){var e=-Math.sqrt(n/(3*xm));t.moveTo(0,2*e),t.lineTo(-xm*e,-e),t.lineTo(xm*e,-e),t.closePath()}},Mm=Math.sqrt(3)/2,Am=1/Math.sqrt(12),Tm=3*(Am/2+1),Nm={draw:function(t,n){var e=Math.sqrt(n/Tm),r=e/2,i=e*Am,u=r,o=e*Am+e,a=-u,f=o;t.moveTo(r,i),t.lineTo(u,o),t.lineTo(a,f),t.lineTo(-.5*r-Mm*i,Mm*r+-.5*i),t.lineTo(-.5*u-Mm*o,Mm*u+-.5*o),t.lineTo(-.5*a-Mm*f,Mm*a+-.5*f),t.lineTo(-.5*r+Mm*i,-.5*i-Mm*r),t.lineTo(-.5*u+Mm*o,-.5*o-Mm*u),t.lineTo(-.5*a+Mm*f,-.5*f-Mm*a),t.closePath()}},Sm=[lm,hm,vm,mm,bm,wm,Nm],Em=function(){var t=bb(lm),n=bb(64),e=null;function r(){var r;if(e||(e=r=Fu()),t.apply(this,arguments).draw(e,+n.apply(this,arguments)),r)return e=null,r+""||null}return r.type=function(n){return arguments.length?(t="function"==typeof n?n:bb(n),r):t},r.size=function(t){return arguments.length?(n="function"==typeof t?t:bb(+t),r):n},r.context=function(t){return arguments.length?(e=null==t?null:t,r):e},r},km=function(){};function Cm(t,n,e){t._context.bezierCurveTo((2*t._x0+t._x1)/3,(2*t._y0+t._y1)/3,(t._x0+2*t._x1)/3,(t._y0+2*t._y1)/3,(t._x0+4*t._x1+n)/6,(t._y0+4*t._y1+e)/6)}function Pm(t){this._context=t}Pm.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._y0=this._y1=NaN,this._point=0},lineEnd:function(){switch(this._point){case 3:Cm(this,this._x1,this._y1);case 2:this._context.lineTo(this._x1,this._y1)}(this._line||0!==this._line&&1===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(t,n){switch(t=+t,n=+n,this._point){case 0:this._point=1,this._line?this._context.lineTo(t,n):this._context.moveTo(t,n);break;case 1:this._point=2;break;case 2:this._point=3,this._context.lineTo((5*this._x0+this._x1)/6,(5*this._y0+this._y1)/6);default:Cm(this,t,n)}this._x0=this._x1,this._x1=t,this._y0=this._y1,this._y1=n}};var zm=function(t){return new Pm(t)};function Rm(t){this._context=t}Rm.prototype={areaStart:km,areaEnd:km,lineStart:function(){this._x0=this._x1=this._x2=this._x3=this._x4=this._y0=this._y1=this._y2=this._y3=this._y4=NaN,this._point=0},lineEnd:function(){switch(this._point){case 1:this._context.moveTo(this._x2,this._y2),this._context.closePath();break;case 2:this._context.moveTo((this._x2+2*this._x3)/3,(this._y2+2*this._y3)/3),this._context.lineTo((this._x3+2*this._x2)/3,(this._y3+2*this._y2)/3),this._context.closePath();break;case 3:this.point(this._x2,this._y2),this.point(this._x3,this._y3),this.point(this._x4,this._y4)}},point:function(t,n){switch(t=+t,n=+n,this._point){case 0:this._point=1,this._x2=t,this._y2=n;break;case 1:this._point=2,this._x3=t,this._y3=n;break;case 2:this._point=3,this._x4=t,this._y4=n,this._context.moveTo((this._x0+4*this._x1+t)/6,(this._y0+4*this._y1+n)/6);break;default:Cm(this,t,n)}this._x0=this._x1,this._x1=t,this._y0=this._y1,this._y1=n}};var Lm=function(t){return new Rm(t)};function Dm(t){this._context=t}Dm.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._y0=this._y1=NaN,this._point=0},lineEnd:function(){(this._line||0!==this._line&&3===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(t,n){switch(t=+t,n=+n,this._point){case 0:this._point=1;break;case 1:this._point=2;break;case 2:this._point=3;var e=(this._x0+4*this._x1+t)/6,r=(this._y0+4*this._y1+n)/6;this._line?this._context.lineTo(e,r):this._context.moveTo(e,r);break;case 3:this._point=4;default:Cm(this,t,n)}this._x0=this._x1,this._x1=t,this._y0=this._y1,this._y1=n}};var Um=function(t){return new Dm(t)};function qm(t,n){this._basis=new Pm(t),this._beta=n}qm.prototype={lineStart:function(){this._x=[],this._y=[],this._basis.lineStart()},lineEnd:function(){var t=this._x,n=this._y,e=t.length-1;if(e>0)for(var r,i=t[0],u=n[0],o=t[e]-i,a=n[e]-u,f=-1;++f<=e;)r=f/e,this._basis.point(this._beta*t[f]+(1-this._beta)*(i+r*o),this._beta*n[f]+(1-this._beta)*(u+r*a));this._x=this._y=null,this._basis.lineEnd()},point:function(t,n){this._x.push(+t),this._y.push(+n)}};var Om=function t(n){function e(t){return 1===n?new Pm(t):new qm(t,n)}return e.beta=function(n){return t(+n)},e}(.85);function Ym(t,n,e){t._context.bezierCurveTo(t._x1+t._k*(t._x2-t._x0),t._y1+t._k*(t._y2-t._y0),t._x2+t._k*(t._x1-n),t._y2+t._k*(t._y1-e),t._x2,t._y2)}function Bm(t,n){this._context=t,this._k=(1-n)/6}Bm.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._x2=this._y0=this._y1=this._y2=NaN,this._point=0},lineEnd:function(){switch(this._point){case 2:this._context.lineTo(this._x2,this._y2);break;case 3:Ym(this,this._x1,this._y1)}(this._line||0!==this._line&&1===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(t,n){switch(t=+t,n=+n,this._point){case 0:this._point=1,this._line?this._context.lineTo(t,n):this._context.moveTo(t,n);break;case 1:this._point=2,this._x1=t,this._y1=n;break;case 2:this._point=3;default:Ym(this,t,n)}this._x0=this._x1,this._x1=this._x2,this._x2=t,this._y0=this._y1,this._y1=this._y2,this._y2=n}};var Im=function t(n){function e(t){return new Bm(t,n)}return e.tension=function(n){return t(+n)},e}(0);function Fm(t,n){this._context=t,this._k=(1-n)/6}Fm.prototype={areaStart:km,areaEnd:km,lineStart:function(){this._x0=this._x1=this._x2=this._x3=this._x4=this._x5=this._y0=this._y1=this._y2=this._y3=this._y4=this._y5=NaN,this._point=0},lineEnd:function(){switch(this._point){case 1:this._context.moveTo(this._x3,this._y3),this._context.closePath();break;case 2:this._context.lineTo(this._x3,this._y3),this._context.closePath();break;case 3:this.point(this._x3,this._y3),this.point(this._x4,this._y4),this.point(this._x5,this._y5)}},point:function(t,n){switch(t=+t,n=+n,this._point){case 0:this._point=1,this._x3=t,this._y3=n;break;case 1:this._point=2,this._context.moveTo(this._x4=t,this._y4=n);break;case 2:this._point=3,this._x5=t,this._y5=n;break;default:Ym(this,t,n)}this._x0=this._x1,this._x1=this._x2,this._x2=t,this._y0=this._y1,this._y1=this._y2,this._y2=n}};var Hm=function t(n){function e(t){return new Fm(t,n)}return e.tension=function(n){return t(+n)},e}(0);function jm(t,n){this._context=t,this._k=(1-n)/6}jm.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._x2=this._y0=this._y1=this._y2=NaN,this._point=0},lineEnd:function(){(this._line||0!==this._line&&3===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(t,n){switch(t=+t,n=+n,this._point){case 0:this._point=1;break;case 1:this._point=2;break;case 2:this._point=3,this._line?this._context.lineTo(this._x2,this._y2):this._context.moveTo(this._x2,this._y2);break;case 3:this._point=4;default:Ym(this,t,n)}this._x0=this._x1,this._x1=this._x2,this._x2=t,this._y0=this._y1,this._y1=this._y2,this._y2=n}};var Xm=function t(n){function e(t){return new jm(t,n)}return e.tension=function(n){return t(+n)},e}(0);function Gm(t,n,e){var r=t._x1,i=t._y1,u=t._x2,o=t._y2;if(t._l01_a>Sb){var a=2*t._l01_2a+3*t._l01_a*t._l12_a+t._l12_2a,f=3*t._l01_a*(t._l01_a+t._l12_a);r=(r*a-t._x0*t._l12_2a+t._x2*t._l01_2a)/f,i=(i*a-t._y0*t._l12_2a+t._y2*t._l01_2a)/f}if(t._l23_a>Sb){var c=2*t._l23_2a+3*t._l23_a*t._l12_a+t._l12_2a,s=3*t._l23_a*(t._l23_a+t._l12_a);u=(u*c+t._x1*t._l23_2a-n*t._l12_2a)/s,o=(o*c+t._y1*t._l23_2a-e*t._l12_2a)/s}t._context.bezierCurveTo(r,i,u,o,t._x2,t._y2)}function Vm(t,n){this._context=t,this._alpha=n}Vm.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._x2=this._y0=this._y1=this._y2=NaN,this._l01_a=this._l12_a=this._l23_a=this._l01_2a=this._l12_2a=this._l23_2a=this._point=0},lineEnd:function(){switch(this._point){case 2:this._context.lineTo(this._x2,this._y2);break;case 3:this.point(this._x2,this._y2)}(this._line||0!==this._line&&1===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(t,n){if(t=+t,n=+n,this._point){var e=this._x2-t,r=this._y2-n;this._l23_a=Math.sqrt(this._l23_2a=Math.pow(e*e+r*r,this._alpha))}switch(this._point){case 0:this._point=1,this._line?this._context.lineTo(t,n):this._context.moveTo(t,n);break;case 1:this._point=2;break;case 2:this._point=3;default:Gm(this,t,n)}this._l01_a=this._l12_a,this._l12_a=this._l23_a,this._l01_2a=this._l12_2a,this._l12_2a=this._l23_2a,this._x0=this._x1,this._x1=this._x2,this._x2=t,this._y0=this._y1,this._y1=this._y2,this._y2=n}};var $m=function t(n){function e(t){return n?new Vm(t,n):new Bm(t,0)}return e.alpha=function(n){return t(+n)},e}(.5);function Wm(t,n){this._context=t,this._alpha=n}Wm.prototype={areaStart:km,areaEnd:km,lineStart:function(){this._x0=this._x1=this._x2=this._x3=this._x4=this._x5=this._y0=this._y1=this._y2=this._y3=this._y4=this._y5=NaN,this._l01_a=this._l12_a=this._l23_a=this._l01_2a=this._l12_2a=this._l23_2a=this._point=0},lineEnd:function(){switch(this._point){case 1:this._context.moveTo(this._x3,this._y3),this._context.closePath();break;case 2:this._context.lineTo(this._x3,this._y3),this._context.closePath();break;case 3:this.point(this._x3,this._y3),this.point(this._x4,this._y4),this.point(this._x5,this._y5)}},point:function(t,n){if(t=+t,n=+n,this._point){var e=this._x2-t,r=this._y2-n;this._l23_a=Math.sqrt(this._l23_2a=Math.pow(e*e+r*r,this._alpha))}switch(this._point){case 0:this._point=1,this._x3=t,this._y3=n;break;case 1:this._point=2,this._context.moveTo(this._x4=t,this._y4=n);break;case 2:this._point=3,this._x5=t,this._y5=n;break;default:Gm(this,t,n)}this._l01_a=this._l12_a,this._l12_a=this._l23_a,this._l01_2a=this._l12_2a,this._l12_2a=this._l23_2a,this._x0=this._x1,this._x1=this._x2,this._x2=t,this._y0=this._y1,this._y1=this._y2,this._y2=n}};var Zm=function t(n){function e(t){return n?new Wm(t,n):new Fm(t,0)}return e.alpha=function(n){return t(+n)},e}(.5);function Qm(t,n){this._context=t,this._alpha=n}Qm.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._x2=this._y0=this._y1=this._y2=NaN,this._l01_a=this._l12_a=this._l23_a=this._l01_2a=this._l12_2a=this._l23_2a=this._point=0},lineEnd:function(){(this._line||0!==this._line&&3===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(t,n){if(t=+t,n=+n,this._point){var e=this._x2-t,r=this._y2-n;this._l23_a=Math.sqrt(this._l23_2a=Math.pow(e*e+r*r,this._alpha))}switch(this._point){case 0:this._point=1;break;case 1:this._point=2;break;case 2:this._point=3,this._line?this._context.lineTo(this._x2,this._y2):this._context.moveTo(this._x2,this._y2);break;case 3:this._point=4;default:Gm(this,t,n)}this._l01_a=this._l12_a,this._l12_a=this._l23_a,this._l01_2a=this._l12_2a,this._l12_2a=this._l23_2a,this._x0=this._x1,this._x1=this._x2,this._x2=t,this._y0=this._y1,this._y1=this._y2,this._y2=n}};var Jm=function t(n){function e(t){return n?new Qm(t,n):new jm(t,0)}return e.alpha=function(n){return t(+n)},e}(.5);function Km(t){this._context=t}Km.prototype={areaStart:km,areaEnd:km,lineStart:function(){this._point=0},lineEnd:function(){this._point&&this._context.closePath()},point:function(t,n){t=+t,n=+n,this._point?this._context.lineTo(t,n):(this._point=1,this._context.moveTo(t,n))}};var tx=function(t){return new Km(t)};function nx(t){return t<0?-1:1}function ex(t,n,e){var r=t._x1-t._x0,i=n-t._x1,u=(t._y1-t._y0)/(r||i<0&&-0),o=(e-t._y1)/(i||r<0&&-0),a=(u*i+o*r)/(r+i);return(nx(u)+nx(o))*Math.min(Math.abs(u),Math.abs(o),.5*Math.abs(a))||0}function rx(t,n){var e=t._x1-t._x0;return e?(3*(t._y1-t._y0)/e-n)/2:n}function ix(t,n,e){var r=t._x0,i=t._y0,u=t._x1,o=t._y1,a=(u-r)/3;t._context.bezierCurveTo(r+a,i+a*n,u-a,o-a*e,u,o)}function ux(t){this._context=t}function ox(t){this._context=new ax(t)}function ax(t){this._context=t}function fx(t){return new ux(t)}function cx(t){return new ox(t)}function sx(t){this._context=t}function lx(t){var n,e,r=t.length-1,i=new Array(r),u=new Array(r),o=new Array(r);for(i[0]=0,u[0]=2,o[0]=t[0]+2*t[1],n=1;n<r-1;++n)i[n]=1,u[n]=4,o[n]=4*t[n]+2*t[n+1];for(i[r-1]=2,u[r-1]=7,o[r-1]=8*t[r-1]+t[r],n=1;n<r;++n)e=i[n]/u[n-1],u[n]-=e,o[n]-=e*o[n-1];for(i[r-1]=o[r-1]/u[r-1],n=r-2;n>=0;--n)i[n]=(o[n]-i[n+1])/u[n];for(u[r-1]=(t[r]+i[r-1])/2,n=0;n<r-1;++n)u[n]=2*t[n+1]-i[n+1];return[i,u]}ux.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._y0=this._y1=this._t0=NaN,this._point=0},lineEnd:function(){switch(this._point){case 2:this._context.lineTo(this._x1,this._y1);break;case 3:ix(this,this._t0,rx(this,this._t0))}(this._line||0!==this._line&&1===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(t,n){var e=NaN;if(n=+n,(t=+t)!==this._x1||n!==this._y1){switch(this._point){case 0:this._point=1,this._line?this._context.lineTo(t,n):this._context.moveTo(t,n);break;case 1:this._point=2;break;case 2:this._point=3,ix(this,rx(this,e=ex(this,t,n)),e);break;default:ix(this,this._t0,e=ex(this,t,n))}this._x0=this._x1,this._x1=t,this._y0=this._y1,this._y1=n,this._t0=e}}},(ox.prototype=Object.create(ux.prototype)).point=function(t,n){ux.prototype.point.call(this,n,t)},ax.prototype={moveTo:function(t,n){this._context.moveTo(n,t)},closePath:function(){this._context.closePath()},lineTo:function(t,n){this._context.lineTo(n,t)},bezierCurveTo:function(t,n,e,r,i,u){this._context.bezierCurveTo(n,t,r,e,u,i)}},sx.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x=[],this._y=[]},lineEnd:function(){var t=this._x,n=this._y,e=t.length;if(e)if(this._line?this._context.lineTo(t[0],n[0]):this._context.moveTo(t[0],n[0]),2===e)this._context.lineTo(t[1],n[1]);else for(var r=lx(t),i=lx(n),u=0,o=1;o<e;++u,++o)this._context.bezierCurveTo(r[0][u],i[0][u],r[1][u],i[1][u],t[o],n[o]);(this._line||0!==this._line&&1===e)&&this._context.closePath(),this._line=1-this._line,this._x=this._y=null},point:function(t,n){this._x.push(+t),this._y.push(+n)}};var hx=function(t){return new sx(t)};function dx(t,n){this._context=t,this._t=n}dx.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x=this._y=NaN,this._point=0},lineEnd:function(){0<this._t&&this._t<1&&2===this._point&&this._context.lineTo(this._x,this._y),(this._line||0!==this._line&&1===this._point)&&this._context.closePath(),this._line>=0&&(this._t=1-this._t,this._line=1-this._line)},point:function(t,n){switch(t=+t,n=+n,this._point){case 0:this._point=1,this._line?this._context.lineTo(t,n):this._context.moveTo(t,n);break;case 1:this._point=2;default:if(this._t<=0)this._context.lineTo(this._x,n),this._context.lineTo(t,n);else{var e=this._x*(1-this._t)+t*this._t;this._context.lineTo(e,this._y),this._context.lineTo(e,n)}}this._x=t,this._y=n}};var px=function(t){return new dx(t,.5)};function vx(t){return new dx(t,0)}function gx(t){return new dx(t,1)}var yx=function(t,n){if((i=t.length)>1)for(var e,r,i,u=1,o=t[n[0]],a=o.length;u<i;++u)for(r=o,o=t[n[u]],e=0;e<a;++e)o[e][1]+=o[e][0]=isNaN(r[e][1])?r[e][0]:r[e][1]},_x=function(t){for(var n=t.length,e=new Array(n);--n>=0;)e[n]=n;return e};function bx(t,n){return t[n]}var mx=function(){var t=bb([]),n=_x,e=yx,r=bx;function i(i){var u,o,a=t.apply(this,arguments),f=i.length,c=a.length,s=new Array(c);for(u=0;u<c;++u){for(var l,h=a[u],d=s[u]=new Array(f),p=0;p<f;++p)d[p]=l=[0,+r(i[p],h,p,i)],l.data=i[p];d.key=h}for(u=0,o=n(s);u<c;++u)s[o[u]].index=u;return e(s,o),s}return i.keys=function(n){return arguments.length?(t="function"==typeof n?n:bb(nm.call(n)),i):t},i.value=function(t){return arguments.length?(r="function"==typeof t?t:bb(+t),i):r},i.order=function(t){return arguments.length?(n=null==t?_x:"function"==typeof t?t:bb(nm.call(t)),i):n},i.offset=function(t){return arguments.length?(e=null==t?yx:t,i):e},i},xx=function(t,n){if((r=t.length)>0){for(var e,r,i,u=0,o=t[0].length;u<o;++u){for(i=e=0;e<r;++e)i+=t[e][u][1]||0;if(i)for(e=0;e<r;++e)t[e][u][1]/=i}yx(t,n)}},wx=function(t,n){if((a=t.length)>1)for(var e,r,i,u,o,a,f=0,c=t[n[0]].length;f<c;++f)for(u=o=0,e=0;e<a;++e)(i=(r=t[n[e]][f])[1]-r[0])>=0?(r[0]=u,r[1]=u+=i):i<0?(r[1]=o,r[0]=o+=i):r[0]=u},Mx=function(t,n){if((e=t.length)>0){for(var e,r=0,i=t[n[0]],u=i.length;r<u;++r){for(var o=0,a=0;o<e;++o)a+=t[o][r][1]||0;i[r][1]+=i[r][0]=-a/2}yx(t,n)}},Ax=function(t,n){if((i=t.length)>0&&(r=(e=t[n[0]]).length)>0){for(var e,r,i,u=0,o=1;o<r;++o){for(var a=0,f=0,c=0;a<i;++a){for(var s=t[n[a]],l=s[o][1]||0,h=(l-(s[o-1][1]||0))/2,d=0;d<a;++d){var p=t[n[d]];h+=(p[o][1]||0)-(p[o-1][1]||0)}f+=l,c+=h*l}e[o-1][1]+=e[o-1][0]=u,f&&(u-=c/f)}e[o-1][1]+=e[o-1][0]=u,yx(t,n)}},Tx=function(t){var n=t.map(Nx);return _x(t).sort(function(t,e){return n[t]-n[e]})};function Nx(t){for(var n,e=0,r=-1,i=t.length;++r<i;)(n=+t[r][1])&&(e+=n);return e}var Sx=function(t){return Tx(t).reverse()},Ex=function(t){var n,e,r=t.length,i=t.map(Nx),u=_x(t).sort(function(t,n){return i[n]-i[t]}),o=0,a=0,f=[],c=[];for(n=0;n<r;++n)e=u[n],o<a?(o+=i[e],f.push(e)):(a+=i[e],c.push(e));return c.reverse().concat(f)},kx=function(t){return _x(t).reverse()},Cx=function(t){return function(){return t}};function Px(t){return t[0]}function zx(t){return t[1]}function Rx(){this._=null}function Lx(t){t.U=t.C=t.L=t.R=t.P=t.N=null}function Dx(t,n){var e=n,r=n.R,i=e.U;i?i.L===e?i.L=r:i.R=r:t._=r,r.U=i,e.U=r,e.R=r.L,e.R&&(e.R.U=e),r.L=e}function Ux(t,n){var e=n,r=n.L,i=e.U;i?i.L===e?i.L=r:i.R=r:t._=r,r.U=i,e.U=r,e.L=r.R,e.L&&(e.L.U=e),r.R=e}function qx(t){for(;t.L;)t=t.L;return t}Rx.prototype={constructor:Rx,insert:function(t,n){var e,r,i;if(t){if(n.P=t,n.N=t.N,t.N&&(t.N.P=n),t.N=n,t.R){for(t=t.R;t.L;)t=t.L;t.L=n}else t.R=n;e=t}else this._?(t=qx(this._),n.P=null,n.N=t,t.P=t.L=n,e=t):(n.P=n.N=null,this._=n,e=null);for(n.L=n.R=null,n.U=e,n.C=!0,t=n;e&&e.C;)e===(r=e.U).L?(i=r.R)&&i.C?(e.C=i.C=!1,r.C=!0,t=r):(t===e.R&&(Dx(this,e),e=(t=e).U),e.C=!1,r.C=!0,Ux(this,r)):(i=r.L)&&i.C?(e.C=i.C=!1,r.C=!0,t=r):(t===e.L&&(Ux(this,e),e=(t=e).U),e.C=!1,r.C=!0,Dx(this,r)),e=t.U;this._.C=!1},remove:function(t){t.N&&(t.N.P=t.P),t.P&&(t.P.N=t.N),t.N=t.P=null;var n,e,r,i=t.U,u=t.L,o=t.R;if(e=u?o?qx(o):u:o,i?i.L===t?i.L=e:i.R=e:this._=e,u&&o?(r=e.C,e.C=t.C,e.L=u,u.U=e,e!==o?(i=e.U,e.U=t.U,t=e.R,i.L=t,e.R=o,o.U=e):(e.U=i,i=e,t=e.R)):(r=t.C,t=e),t&&(t.U=i),!r)if(t&&t.C)t.C=!1;else{do{if(t===this._)break;if(t===i.L){if((n=i.R).C&&(n.C=!1,i.C=!0,Dx(this,i),n=i.R),n.L&&n.L.C||n.R&&n.R.C){n.R&&n.R.C||(n.L.C=!1,n.C=!0,Ux(this,n),n=i.R),n.C=i.C,i.C=n.R.C=!1,Dx(this,i),t=this._;break}}else if((n=i.L).C&&(n.C=!1,i.C=!0,Ux(this,i),n=i.L),n.L&&n.L.C||n.R&&n.R.C){n.L&&n.L.C||(n.R.C=!1,n.C=!0,Dx(this,n),n=i.L),n.C=i.C,i.C=n.L.C=!1,Ux(this,i),t=this._;break}n.C=!0,t=i,i=i.U}while(!t.C);t&&(t.C=!1)}}};var Ox=Rx;function Yx(t,n,e,r){var i=[null,null],u=aw.push(i)-1;return i.left=t,i.right=n,e&&Ix(i,t,n,e),r&&Ix(i,n,t,r),uw[t.index].halfedges.push(u),uw[n.index].halfedges.push(u),i}function Bx(t,n,e){var r=[n,e];return r.left=t,r}function Ix(t,n,e,r){t[0]||t[1]?t.left===e?t[1]=r:t[0]=r:(t[0]=r,t.left=n,t.right=e)}function Fx(t,n,e,r,i){var u,o=t[0],a=t[1],f=o[0],c=o[1],s=0,l=1,h=a[0]-f,d=a[1]-c;if(u=n-f,h||!(u>0)){if(u/=h,h<0){if(u<s)return;u<l&&(l=u)}else if(h>0){if(u>l)return;u>s&&(s=u)}if(u=r-f,h||!(u<0)){if(u/=h,h<0){if(u>l)return;u>s&&(s=u)}else if(h>0){if(u<s)return;u<l&&(l=u)}if(u=e-c,d||!(u>0)){if(u/=d,d<0){if(u<s)return;u<l&&(l=u)}else if(d>0){if(u>l)return;u>s&&(s=u)}if(u=i-c,d||!(u<0)){if(u/=d,d<0){if(u>l)return;u>s&&(s=u)}else if(d>0){if(u<s)return;u<l&&(l=u)}return!(s>0||l<1)||(s>0&&(t[0]=[f+s*h,c+s*d]),l<1&&(t[1]=[f+l*h,c+l*d]),!0)}}}}}function Hx(t,n,e,r,i){var u=t[1];if(u)return!0;var o,a,f=t[0],c=t.left,s=t.right,l=c[0],h=c[1],d=s[0],p=s[1],v=(l+d)/2,g=(h+p)/2;if(p===h){if(v<n||v>=r)return;if(l>d){if(f){if(f[1]>=i)return}else f=[v,e];u=[v,i]}else{if(f){if(f[1]<e)return}else f=[v,i];u=[v,e]}}else if(a=g-(o=(l-d)/(p-h))*v,o<-1||o>1)if(l>d){if(f){if(f[1]>=i)return}else f=[(e-a)/o,e];u=[(i-a)/o,i]}else{if(f){if(f[1]<e)return}else f=[(i-a)/o,i];u=[(e-a)/o,e]}else if(h<p){if(f){if(f[0]>=r)return}else f=[n,o*n+a];u=[r,o*r+a]}else{if(f){if(f[0]<n)return}else f=[r,o*r+a];u=[n,o*n+a]}return t[0]=f,t[1]=u,!0}function jx(t,n){var e=t.site,r=n.left,i=n.right;return e===i&&(i=r,r=e),i?Math.atan2(i[1]-r[1],i[0]-r[0]):(e===r?(r=n[1],i=n[0]):(r=n[0],i=n[1]),Math.atan2(r[0]-i[0],i[1]-r[1]))}function Xx(t,n){return n[+(n.left!==t.site)]}function Gx(t,n){return n[+(n.left===t.site)]}var Vx,$x=[];function Wx(t){var n=t.P,e=t.N;if(n&&e){var r=n.site,i=t.site,u=e.site;if(r!==u){var o=i[0],a=i[1],f=r[0]-o,c=r[1]-a,s=u[0]-o,l=u[1]-a,h=2*(f*l-c*s);if(!(h>=-cw)){var d=f*f+c*c,p=s*s+l*l,v=(l*d-c*p)/h,g=(f*p-s*d)/h,y=$x.pop()||new function(){Lx(this),this.x=this.y=this.arc=this.site=this.cy=null};y.arc=t,y.site=i,y.x=v+o,y.y=(y.cy=g+a)+Math.sqrt(v*v+g*g),t.circle=y;for(var _=null,b=ow._;b;)if(y.y<b.y||y.y===b.y&&y.x<=b.x){if(!b.L){_=b.P;break}b=b.L}else{if(!b.R){_=b;break}b=b.R}ow.insert(_,y),_||(Vx=y)}}}}function Zx(t){var n=t.circle;n&&(n.P||(Vx=n.N),ow.remove(n),$x.push(n),Lx(n),t.circle=null)}var Qx=[];function Jx(t){var n=Qx.pop()||new function(){Lx(this),this.edge=this.site=this.circle=null};return n.site=t,n}function Kx(t){Zx(t),iw.remove(t),Qx.push(t),Lx(t)}function tw(t){var n=t.circle,e=n.x,r=n.cy,i=[e,r],u=t.P,o=t.N,a=[t];Kx(t);for(var f=u;f.circle&&Math.abs(e-f.circle.x)<fw&&Math.abs(r-f.circle.cy)<fw;)u=f.P,a.unshift(f),Kx(f),f=u;a.unshift(f),Zx(f);for(var c=o;c.circle&&Math.abs(e-c.circle.x)<fw&&Math.abs(r-c.circle.cy)<fw;)o=c.N,a.push(c),Kx(c),c=o;a.push(c),Zx(c);var s,l=a.length;for(s=1;s<l;++s)c=a[s],f=a[s-1],Ix(c.edge,f.site,c.site,i);f=a[0],(c=a[l-1]).edge=Yx(f.site,c.site,null,i),Wx(f),Wx(c)}function nw(t){for(var n,e,r,i,u=t[0],o=t[1],a=iw._;a;)if((r=ew(a,o)-u)>fw)a=a.L;else{if(!((i=u-rw(a,o))>fw)){r>-fw?(n=a.P,e=a):i>-fw?(n=a,e=a.N):n=e=a;break}if(!a.R){n=a;break}a=a.R}!function(t){uw[t.index]={site:t,halfedges:[]}}(t);var f=Jx(t);if(iw.insert(n,f),n||e){if(n===e)return Zx(n),e=Jx(n.site),iw.insert(f,e),f.edge=e.edge=Yx(n.site,f.site),Wx(n),void Wx(e);if(e){Zx(n),Zx(e);var c=n.site,s=c[0],l=c[1],h=t[0]-s,d=t[1]-l,p=e.site,v=p[0]-s,g=p[1]-l,y=2*(h*g-d*v),_=h*h+d*d,b=v*v+g*g,m=[(g*_-d*b)/y+s,(h*b-v*_)/y+l];Ix(e.edge,c,p,m),f.edge=Yx(c,t,null,m),e.edge=Yx(t,p,null,m),Wx(n),Wx(e)}else f.edge=Yx(n.site,f.site)}}function ew(t,n){var e=t.site,r=e[0],i=e[1],u=i-n;if(!u)return r;var o=t.P;if(!o)return-1/0;var a=(e=o.site)[0],f=e[1],c=f-n;if(!c)return a;var s=a-r,l=1/u-1/c,h=s/c;return l?(-h+Math.sqrt(h*h-2*l*(s*s/(-2*c)-f+c/2+i-u/2)))/l+r:(r+a)/2}function rw(t,n){var e=t.N;if(e)return ew(e,n);var r=t.site;return r[1]===n?r[0]:1/0}var iw,uw,ow,aw,fw=1e-6,cw=1e-12;function sw(t,n,e){return(t[0]-e[0])*(n[1]-t[1])-(t[0]-n[0])*(e[1]-t[1])}function lw(t,n){return n[1]-t[1]||n[0]-t[0]}function hw(t,n){var e,r,i,u=t.sort(lw).pop();for(aw=[],uw=new Array(t.length),iw=new Ox,ow=new Ox;;)if(i=Vx,u&&(!i||u[1]<i.y||u[1]===i.y&&u[0]<i.x))u[0]===e&&u[1]===r||(nw(u),e=u[0],r=u[1]),u=t.pop();else{if(!i)break;tw(i.arc)}if(function(){for(var t,n,e,r,i=0,u=uw.length;i<u;++i)if((t=uw[i])&&(r=(n=t.halfedges).length)){var o=new Array(r),a=new Array(r);for(e=0;e<r;++e)o[e]=e,a[e]=jx(t,aw[n[e]]);for(o.sort(function(t,n){return a[n]-a[t]}),e=0;e<r;++e)a[e]=n[o[e]];for(e=0;e<r;++e)n[e]=a[e]}}(),n){var o=+n[0][0],a=+n[0][1],f=+n[1][0],c=+n[1][1];!function(t,n,e,r){for(var i,u=aw.length;u--;)Hx(i=aw[u],t,n,e,r)&&Fx(i,t,n,e,r)&&(Math.abs(i[0][0]-i[1][0])>fw||Math.abs(i[0][1]-i[1][1])>fw)||delete aw[u]}(o,a,f,c),function(t,n,e,r){var i,u,o,a,f,c,s,l,h,d,p,v,g=uw.length,y=!0;for(i=0;i<g;++i)if(u=uw[i]){for(o=u.site,a=(f=u.halfedges).length;a--;)aw[f[a]]||f.splice(a,1);for(a=0,c=f.length;a<c;)p=(d=Gx(u,aw[f[a]]))[0],v=d[1],l=(s=Xx(u,aw[f[++a%c]]))[0],h=s[1],(Math.abs(p-l)>fw||Math.abs(v-h)>fw)&&(f.splice(a,0,aw.push(Bx(o,d,Math.abs(p-t)<fw&&r-v>fw?[t,Math.abs(l-t)<fw?h:r]:Math.abs(v-r)<fw&&e-p>fw?[Math.abs(h-r)<fw?l:e,r]:Math.abs(p-e)<fw&&v-n>fw?[e,Math.abs(l-e)<fw?h:n]:Math.abs(v-n)<fw&&p-t>fw?[Math.abs(h-n)<fw?l:t,n]:null))-1),++c);c&&(y=!1)}if(y){var _,b,m,x=1/0;for(i=0,y=null;i<g;++i)(u=uw[i])&&(m=(_=(o=u.site)[0]-t)*_+(b=o[1]-n)*b)<x&&(x=m,y=u);if(y){var w=[t,n],M=[t,r],A=[e,r],T=[e,n];y.halfedges.push(aw.push(Bx(o=y.site,w,M))-1,aw.push(Bx(o,M,A))-1,aw.push(Bx(o,A,T))-1,aw.push(Bx(o,T,w))-1)}}for(i=0;i<g;++i)(u=uw[i])&&(u.halfedges.length||delete uw[i])}(o,a,f,c)}this.edges=aw,this.cells=uw,iw=ow=aw=uw=null}hw.prototype={constructor:hw,polygons:function(){var t=this.edges;return this.cells.map(function(n){var e=n.halfedges.map(function(e){return Xx(n,t[e])});return e.data=n.site.data,e})},triangles:function(){var t=[],n=this.edges;return this.cells.forEach(function(e,r){if(u=(i=e.halfedges).length)for(var i,u,o,a=e.site,f=-1,c=n[i[u-1]],s=c.left===a?c.right:c.left;++f<u;)o=s,s=(c=n[i[f]]).left===a?c.right:c.left,o&&s&&r<o.index&&r<s.index&&sw(a,o,s)<0&&t.push([a.data,o.data,s.data])}),t},links:function(){return this.edges.filter(function(t){return t.right}).map(function(t){return{source:t.left.data,target:t.right.data}})},find:function(t,n,e){for(var r,i,u=this,o=u._found||0,a=u.cells.length;!(i=u.cells[o]);)if(++o>=a)return null;var f=t-i.site[0],c=n-i.site[1],s=f*f+c*c;do{i=u.cells[r=o],o=null,i.halfedges.forEach(function(e){var r=u.edges[e],a=r.left;if(a!==i.site&&a||(a=r.right)){var f=t-a[0],c=n-a[1],l=f*f+c*c;l<s&&(s=l,o=a.index)}})}while(null!==o);return u._found=r,null==e||s<=e*e?i.site:null}};var dw=function(){var t=Px,n=zx,e=null;function r(r){return new hw(r.map(function(e,i){var u=[Math.round(t(e,i,r)/fw)*fw,Math.round(n(e,i,r)/fw)*fw];return u.index=i,u.data=e,u}),e)}return r.polygons=function(t){return r(t).polygons()},r.links=function(t){return r(t).links()},r.triangles=function(t){return r(t).triangles()},r.x=function(n){return arguments.length?(t="function"==typeof n?n:Cx(+n),r):t},r.y=function(t){return arguments.length?(n="function"==typeof t?t:Cx(+t),r):n},r.extent=function(t){return arguments.length?(e=null==t?null:[[+t[0][0],+t[0][1]],[+t[1][0],+t[1][1]]],r):e&&[[e[0][0],e[0][1]],[e[1][0],e[1][1]]]},r.size=function(t){return arguments.length?(e=null==t?null:[[0,0],[+t[0],+t[1]]],r):e&&[e[1][0]-e[0][0],e[1][1]-e[0][1]]},r},pw=function(t){return function(){return t}};function vw(t,n,e){this.k=t,this.x=n,this.y=e}vw.prototype={constructor:vw,scale:function(t){return 1===t?this:new vw(this.k*t,this.x,this.y)},translate:function(t,n){return 0===t&0===n?this:new vw(this.k,this.x+this.k*t,this.y+this.k*n)},apply:function(t){return[t[0]*this.k+this.x,t[1]*this.k+this.y]},applyX:function(t){return t*this.k+this.x},applyY:function(t){return t*this.k+this.y},invert:function(t){return[(t[0]-this.x)/this.k,(t[1]-this.y)/this.k]},invertX:function(t){return(t-this.x)/this.k},invertY:function(t){return(t-this.y)/this.k},rescaleX:function(t){return t.copy().domain(t.range().map(this.invertX,this).map(t.invert,t))},rescaleY:function(t){return t.copy().domain(t.range().map(this.invertY,this).map(t.invert,t))},toString:function(){return"translate("+this.x+","+this.y+") scale("+this.k+")"}};var gw=new vw(1,0,0);function yw(t){return t.__zoom||gw}function _w(){Vt.stopImmediatePropagation()}yw.prototype=vw.prototype;var bw=function(){Vt.preventDefault(),Vt.stopImmediatePropagation()};function mw(){return!Vt.button}function xw(){var t,n,e=this;return e instanceof SVGElement?(t=(e=e.ownerSVGElement||e).width.baseVal.value,n=e.height.baseVal.value):(t=e.clientWidth,n=e.clientHeight),[[0,0],[t,n]]}function ww(){return this.__zoom||gw}function Mw(){return-Vt.deltaY*(Vt.deltaMode?120:1)/500}function Aw(){return"ontouchstart"in this}function Tw(t,n,e){var r=t.invertX(n[0][0])-e[0][0],i=t.invertX(n[1][0])-e[1][0],u=t.invertY(n[0][1])-e[0][1],o=t.invertY(n[1][1])-e[1][1];return t.translate(i>r?(r+i)/2:Math.min(0,r)||Math.max(0,i),o>u?(u+o)/2:Math.min(0,u)||Math.max(0,o))}var Nw=function(){var t,n,e=mw,r=xw,i=Tw,u=Mw,o=Aw,a=[0,1/0],f=[[-1/0,-1/0],[1/0,1/0]],c=250,s=cr,l=[],h=ht("start","zoom","end"),d=500,p=150,v=0;function g(t){t.property("__zoom",ww).on("wheel.zoom",M).on("mousedown.zoom",A).on("dblclick.zoom",T).filter(o).on("touchstart.zoom",N).on("touchmove.zoom",S).on("touchend.zoom touchcancel.zoom",E).style("touch-action","none").style("-webkit-tap-highlight-color","rgba(0,0,0,0)")}function y(t,n){return(n=Math.max(a[0],Math.min(a[1],n)))===t.k?t:new vw(n,t.x,t.y)}function _(t,n,e){var r=n[0]-e[0]*t.k,i=n[1]-e[1]*t.k;return r===t.x&&i===t.y?t:new vw(t.k,r,i)}function b(t){return[(+t[0][0]+ +t[1][0])/2,(+t[0][1]+ +t[1][1])/2]}function m(t,n,e){t.on("start.zoom",function(){x(this,arguments).start()}).on("interrupt.zoom end.zoom",function(){x(this,arguments).end()}).tween("zoom",function(){var t=arguments,i=x(this,t),u=r.apply(this,t),o=e||b(u),a=Math.max(u[1][0]-u[0][0],u[1][1]-u[0][1]),f=this.__zoom,c="function"==typeof n?n.apply(this,t):n,l=s(f.invert(o).concat(a/f.k),c.invert(o).concat(a/c.k));return function(t){if(1===t)t=c;else{var n=l(t),e=a/n[2];t=new vw(e,o[0]-n[0]*e,o[1]-n[1]*e)}i.zoom(null,t)}})}function x(t,n){for(var e,r=0,i=l.length;r<i;++r)if((e=l[r]).that===t)return e;return new w(t,n)}function w(t,n){this.that=t,this.args=n,this.index=-1,this.active=0,this.extent=r.apply(t,n)}function M(){if(e.apply(this,arguments)){var t=x(this,arguments),n=this.__zoom,r=Math.max(a[0],Math.min(a[1],n.k*Math.pow(2,u.apply(this,arguments)))),o=hn(this);if(t.wheel)t.mouse[0][0]===o[0]&&t.mouse[0][1]===o[1]||(t.mouse[1]=n.invert(t.mouse[0]=o)),clearTimeout(t.wheel);else{if(n.k===r)return;t.mouse=[o,n.invert(o)],ei(this),t.start()}bw(),t.wheel=setTimeout(function(){t.wheel=null,t.end()},p),t.zoom("mouse",i(_(y(n,r),t.mouse[0],t.mouse[1]),t.extent,f))}}function A(){if(!n&&e.apply(this,arguments)){var t=x(this,arguments),r=un(Vt.view).on("mousemove.zoom",function(){if(bw(),!t.moved){var n=Vt.clientX-o,e=Vt.clientY-a;t.moved=n*n+e*e>v}t.zoom("mouse",i(_(t.that.__zoom,t.mouse[0]=hn(t.that),t.mouse[1]),t.extent,f))},!0).on("mouseup.zoom",function(){r.on("mousemove.zoom mouseup.zoom",null),bn(Vt.view,t.moved),bw(),t.end()},!0),u=hn(this),o=Vt.clientX,a=Vt.clientY;_n(Vt.view),_w(),t.mouse=[u,this.__zoom.invert(u)],ei(this),t.start()}}function T(){if(e.apply(this,arguments)){var t=this.__zoom,n=hn(this),u=t.invert(n),o=t.k*(Vt.shiftKey?.5:2),a=i(_(y(t,o),n,u),r.apply(this,arguments),f);bw(),c>0?un(this).transition().duration(c).call(m,a,n):un(this).call(g.transform,a)}}function N(){if(e.apply(this,arguments)){var n,r,i,u,o=x(this,arguments),a=Vt.changedTouches,f=a.length;for(_w(),r=0;r<f;++r)i=a[r],u=[u=pn(this,a,i.identifier),this.__zoom.invert(u),i.identifier],o.touch0?o.touch1||(o.touch1=u):(o.touch0=u,n=!0);if(t&&(t=clearTimeout(t),!o.touch1))return o.end(),void((u=un(this).on("dblclick.zoom"))&&u.apply(this,arguments));n&&(t=setTimeout(function(){t=null},d),ei(this),o.start())}}function S(){var n,e,r,u,o=x(this,arguments),a=Vt.changedTouches,c=a.length;for(bw(),t&&(t=clearTimeout(t)),n=0;n<c;++n)e=a[n],r=pn(this,a,e.identifier),o.touch0&&o.touch0[2]===e.identifier?o.touch0[0]=r:o.touch1&&o.touch1[2]===e.identifier&&(o.touch1[0]=r);if(e=o.that.__zoom,o.touch1){var s=o.touch0[0],l=o.touch0[1],h=o.touch1[0],d=o.touch1[1],p=(p=h[0]-s[0])*p+(p=h[1]-s[1])*p,v=(v=d[0]-l[0])*v+(v=d[1]-l[1])*v;e=y(e,Math.sqrt(p/v)),r=[(s[0]+h[0])/2,(s[1]+h[1])/2],u=[(l[0]+d[0])/2,(l[1]+d[1])/2]}else{if(!o.touch0)return;r=o.touch0[0],u=o.touch0[1]}o.zoom("touch",i(_(e,r,u),o.extent,f))}function E(){var t,e,r=x(this,arguments),i=Vt.changedTouches,u=i.length;for(_w(),n&&clearTimeout(n),n=setTimeout(function(){n=null},d),t=0;t<u;++t)e=i[t],r.touch0&&r.touch0[2]===e.identifier?delete r.touch0:r.touch1&&r.touch1[2]===e.identifier&&delete r.touch1;r.touch1&&!r.touch0&&(r.touch0=r.touch1,delete r.touch1),r.touch0?r.touch0[1]=this.__zoom.invert(r.touch0[0]):r.end()}return g.transform=function(t,n){var e=t.selection?t.selection():t;e.property("__zoom",ww),t!==e?m(t,n):e.interrupt().each(function(){x(this,arguments).start().zoom(null,"function"==typeof n?n.apply(this,arguments):n).end()})},g.scaleBy=function(t,n){g.scaleTo(t,function(){return this.__zoom.k*("function"==typeof n?n.apply(this,arguments):n)})},g.scaleTo=function(t,n){g.transform(t,function(){var t=r.apply(this,arguments),e=this.__zoom,u=b(t),o=e.invert(u),a="function"==typeof n?n.apply(this,arguments):n;return i(_(y(e,a),u,o),t,f)})},g.translateBy=function(t,n,e){g.transform(t,function(){return i(this.__zoom.translate("function"==typeof n?n.apply(this,arguments):n,"function"==typeof e?e.apply(this,arguments):e),r.apply(this,arguments),f)})},g.translateTo=function(t,n,e){g.transform(t,function(){var t=r.apply(this,arguments),u=this.__zoom,o=b(t);return i(gw.translate(o[0],o[1]).scale(u.k).translate("function"==typeof n?-n.apply(this,arguments):-n,"function"==typeof e?-e.apply(this,arguments):-e),t,f)})},w.prototype={start:function(){return 1==++this.active&&(this.index=l.push(this)-1,this.emit("start")),this},zoom:function(t,n){return this.mouse&&"mouse"!==t&&(this.mouse[1]=n.invert(this.mouse[0])),this.touch0&&"touch"!==t&&(this.touch0[1]=n.invert(this.touch0[0])),this.touch1&&"touch"!==t&&(this.touch1[1]=n.invert(this.touch1[0])),this.that.__zoom=n,this.emit("zoom"),this},end:function(){return 0==--this.active&&(l.splice(this.index,1),this.index=-1,this.emit("end")),this},emit:function(t){Jt(new function(t,n,e){this.target=t,this.type=n,this.transform=e}(g,t,this.that.__zoom),h.apply,h,[t,this.that,this.args])}},g.wheelDelta=function(t){return arguments.length?(u="function"==typeof t?t:pw(+t),g):u},g.filter=function(t){return arguments.length?(e="function"==typeof t?t:pw(!!t),g):e},g.touchable=function(t){return arguments.length?(o="function"==typeof t?t:pw(!!t),g):o},g.extent=function(t){return arguments.length?(r="function"==typeof t?t:pw([[+t[0][0],+t[0][1]],[+t[1][0],+t[1][1]]]),g):r},g.scaleExtent=function(t){return arguments.length?(a[0]=+t[0],a[1]=+t[1],g):[a[0],a[1]]},g.translateExtent=function(t){return arguments.length?(f[0][0]=+t[0][0],f[1][0]=+t[1][0],f[0][1]=+t[0][1],f[1][1]=+t[1][1],g):[[f[0][0],f[0][1]],[f[1][0],f[1][1]]]},g.constrain=function(t){return arguments.length?(i=t,g):i},g.duration=function(t){return arguments.length?(c=+t,g):c},g.interpolate=function(t){return arguments.length?(s=t,g):s},g.on=function(){var t=h.on.apply(h,arguments);return t===h?g:t},g.clickDistance=function(t){return arguments.length?(v=(t=+t)*t,g):Math.sqrt(v)},g};e.d(n,"version",function(){return"5.7.0"}),e.d(n,"bisect",function(){return f}),e.d(n,"bisectRight",function(){return o}),e.d(n,"bisectLeft",function(){return a}),e.d(n,"ascending",function(){return r}),e.d(n,"bisector",function(){return i}),e.d(n,"cross",function(){return l}),e.d(n,"descending",function(){return h}),e.d(n,"deviation",function(){return v}),e.d(n,"extent",function(){return g}),e.d(n,"histogram",function(){return C}),e.d(n,"thresholdFreedmanDiaconis",function(){return z}),e.d(n,"thresholdScott",function(){return R}),e.d(n,"thresholdSturges",function(){return k}),e.d(n,"max",function(){return L}),e.d(n,"mean",function(){return D}),e.d(n,"median",function(){return U}),e.d(n,"merge",function(){return q}),e.d(n,"min",function(){return O}),e.d(n,"pairs",function(){return c}),e.d(n,"permute",function(){return Y}),e.d(n,"quantile",function(){return P}),e.d(n,"range",function(){return w}),e.d(n,"scan",function(){return B}),e.d(n,"shuffle",function(){return I}),e.d(n,"sum",function(){return F}),e.d(n,"ticks",function(){return N}),e.d(n,"tickIncrement",function(){return S}),e.d(n,"tickStep",function(){return E}),e.d(n,"transpose",function(){return H}),e.d(n,"variance",function(){return p}),e.d(n,"zip",function(){return X}),e.d(n,"axisTop",function(){return rt}),e.d(n,"axisRight",function(){return it}),e.d(n,"axisBottom",function(){return ut}),e.d(n,"axisLeft",function(){return ot}),e.d(n,"brush",function(){return Nu}),e.d(n,"brushX",function(){return Au}),e.d(n,"brushY",function(){return Tu}),e.d(n,"brushSelection",function(){return Mu}),e.d(n,"chord",function(){return Lu}),e.d(n,"ribbon",function(){return $u}),e.d(n,"nest",function(){return Ju}),e.d(n,"set",function(){return oo}),e.d(n,"map",function(){return Qu}),e.d(n,"keys",function(){return ao}),e.d(n,"values",function(){return fo}),e.d(n,"entries",function(){return co}),e.d(n,"color",function(){return Fn}),e.d(n,"rgb",function(){return Gn}),e.d(n,"hsl",function(){return Zn}),e.d(n,"lab",function(){return se}),e.d(n,"hcl",function(){return _e}),e.d(n,"lch",function(){return ye}),e.d(n,"gray",function(){return ce}),e.d(n,"cubehelix",function(){return Ne}),e.d(n,"contours",function(){return mo}),e.d(n,"contourDensity",function(){return No}),e.d(n,"dispatch",function(){return ht}),e.d(n,"drag",function(){return Nn}),e.d(n,"dragDisable",function(){return _n}),e.d(n,"dragEnable",function(){return bn}),e.d(n,"dsvFormat",function(){return Ro}),e.d(n,"csvParse",function(){return Do}),e.d(n,"csvParseRows",function(){return Uo}),e.d(n,"csvFormat",function(){return qo}),e.d(n,"csvFormatRows",function(){return Oo}),e.d(n,"tsvParse",function(){return Bo}),e.d(n,"tsvParseRows",function(){return Io}),e.d(n,"tsvFormat",function(){return Fo}),e.d(n,"tsvFormatRows",function(){return Ho}),e.d(n,"easeLinear",function(){return li}),e.d(n,"easeQuad",function(){return pi}),e.d(n,"easeQuadIn",function(){return hi}),e.d(n,"easeQuadOut",function(){return di}),e.d(n,"easeQuadInOut",function(){return pi}),e.d(n,"easeCubic",function(){return yi}),e.d(n,"easeCubicIn",function(){return vi}),e.d(n,"easeCubicOut",function(){return gi}),e.d(n,"easeCubicInOut",function(){return yi}),e.d(n,"easePoly",function(){return mi}),e.d(n,"easePolyIn",function(){return _i}),e.d(n,"easePolyOut",function(){return bi}),e.d(n,"easePolyInOut",function(){return mi}),e.d(n,"easeSin",function(){return Ti}),e.d(n,"easeSinIn",function(){return Mi}),e.d(n,"easeSinOut",function(){return Ai}),e.d(n,"easeSinInOut",function(){return Ti}),e.d(n,"easeExp",function(){return Ei}),e.d(n,"easeExpIn",function(){return Ni}),e.d(n,"easeExpOut",function(){return Si}),e.d(n,"easeExpInOut",function(){return Ei}),e.d(n,"easeCircle",function(){return Pi}),e.d(n,"easeCircleIn",function(){return ki}),e.d(n,"easeCircleOut",function(){return Ci}),e.d(n,"easeCircleInOut",function(){return Pi}),e.d(n,"easeBounce",function(){return Hi}),e.d(n,"easeBounceIn",function(){return Fi}),e.d(n,"easeBounceOut",function(){return Hi}),e.d(n,"easeBounceInOut",function(){return ji}),e.d(n,"easeBack",function(){return Vi}),e.d(n,"easeBackIn",function(){return Xi}),e.d(n,"easeBackOut",function(){return Gi}),e.d(n,"easeBackInOut",function(){return Vi}),e.d(n,"easeElastic",function(){return Zi}),e.d(n,"easeElasticIn",function(){return Wi}),e.d(n,"easeElasticOut",function(){return Zi}),e.d(n,"easeElasticInOut",function(){return Qi}),e.d(n,"blob",function(){return Xo}),e.d(n,"buffer",function(){return Vo}),e.d(n,"dsv",function(){return Qo}),e.d(n,"csv",function(){return Jo}),e.d(n,"tsv",function(){return Ko}),e.d(n,"image",function(){return ta}),e.d(n,"json",function(){return ea}),e.d(n,"text",function(){return Wo}),e.d(n,"xml",function(){return ia}),e.d(n,"html",function(){return ua}),e.d(n,"svg",function(){return oa}),e.d(n,"forceCenter",function(){return aa}),e.d(n,"forceCollide",function(){return ma}),e.d(n,"forceLink",function(){return Ma}),e.d(n,"forceManyBody",function(){return ka}),e.d(n,"forceRadial",function(){return Ca}),e.d(n,"forceSimulation",function(){return Ea}),e.d(n,"forceX",function(){return Pa}),e.d(n,"forceY",function(){return za}),e.d(n,"formatDefaultLocale",function(){return $a}),e.d(n,"format",function(){return Ba}),e.d(n,"formatPrefix",function(){return Ia}),e.d(n,"formatLocale",function(){return Va}),e.d(n,"formatSpecifier",function(){return Ua}),e.d(n,"precisionFixed",function(){return Wa}),e.d(n,"precisionPrefix",function(){return Za}),e.d(n,"precisionRound",function(){return Qa}),e.d(n,"geoArea",function(){return jf}),e.d(n,"geoBounds",function(){return Uc}),e.d(n,"geoCentroid",function(){return $c}),e.d(n,"geoCircle",function(){return us}),e.d(n,"geoClipAntimeridian",function(){return gs}),e.d(n,"geoClipCircle",function(){return ys}),e.d(n,"geoClipExtent",function(){return Ts}),e.d(n,"geoClipRectangle",function(){return xs}),e.d(n,"geoContains",function(){return Hs}),e.d(n,"geoDistance",function(){return Ls}),e.d(n,"geoGraticule",function(){return Gs}),e.d(n,"geoGraticule10",function(){return Vs}),e.d(n,"geoInterpolate",function(){return Js}),e.d(n,"geoLength",function(){return Ps}),e.d(n,"geoPath",function(){return Zl}),e.d(n,"geoAlbers",function(){return vh}),e.d(n,"geoAlbersUsa",function(){return gh}),e.d(n,"geoAzimuthalEqualArea",function(){return mh}),e.d(n,"geoAzimuthalEqualAreaRaw",function(){return bh}),e.d(n,"geoAzimuthalEquidistant",function(){return wh}),e.d(n,"geoAzimuthalEquidistantRaw",function(){return xh}),e.d(n,"geoConicConformal",function(){return Eh}),e.d(n,"geoConicConformalRaw",function(){return Sh}),e.d(n,"geoConicEqualArea",function(){return ph}),e.d(n,"geoConicEqualAreaRaw",function(){return dh}),e.d(n,"geoConicEquidistant",function(){return zh}),e.d(n,"geoConicEquidistantRaw",function(){return Ph}),e.d(n,"geoEqualEarth",function(){return Yh}),e.d(n,"geoEqualEarthRaw",function(){return Oh}),e.d(n,"geoEquirectangular",function(){return Ch}),e.d(n,"geoEquirectangularRaw",function(){return kh}),e.d(n,"geoGnomonic",function(){return Ih}),e.d(n,"geoGnomonicRaw",function(){return Bh}),e.d(n,"geoIdentity",function(){return Hh}),e.d(n,"geoProjection",function(){return sh}),e.d(n,"geoProjectionMutator",function(){return lh}),e.d(n,"geoMercator",function(){return Ah}),e.d(n,"geoMercatorRaw",function(){return Mh}),e.d(n,"geoNaturalEarth1",function(){return Xh}),e.d(n,"geoNaturalEarth1Raw",function(){return jh}),e.d(n,"geoOrthographic",function(){return Vh}),e.d(n,"geoOrthographicRaw",function(){return Gh}),e.d(n,"geoStereographic",function(){return Wh}),e.d(n,"geoStereographicRaw",function(){return $h}),e.d(n,"geoTransverseMercator",function(){return Qh}),e.d(n,"geoTransverseMercatorRaw",function(){return Zh}),e.d(n,"geoRotation",function(){return es}),e.d(n,"geoStream",function(){return Uf}),e.d(n,"geoTransform",function(){return Ql}),e.d(n,"cluster",function(){return nd}),e.d(n,"hierarchy",function(){return rd}),e.d(n,"pack",function(){return Sd}),e.d(n,"packSiblings",function(){return wd}),e.d(n,"packEnclose",function(){return cd}),e.d(n,"partition",function(){return Rd}),e.d(n,"stratify",function(){return Yd}),e.d(n,"tree",function(){return Gd}),e.d(n,"treemap",function(){return Qd}),e.d(n,"treemapBinary",function(){return Jd}),e.d(n,"treemapDice",function(){return zd}),e.d(n,"treemapSlice",function(){return Vd}),e.d(n,"treemapSliceDice",function(){return Kd}),e.d(n,"treemapSquarify",function(){return Zd}),e.d(n,"treemapResquarify",function(){return tp}),e.d(n,"interpolate",function(){return Qe}),e.d(n,"interpolateArray",function(){return Be}),e.d(n,"interpolateBasis",function(){return ke}),e.d(n,"interpolateBasisClosed",function(){return Ce}),e.d(n,"interpolateDate",function(){return Ie}),e.d(n,"interpolateDiscrete",function(){return Je}),e.d(n,"interpolateHue",function(){return Ke}),e.d(n,"interpolateNumber",function(){return Fe}),e.d(n,"interpolateObject",function(){return He}),e.d(n,"interpolateRound",function(){return tr}),e.d(n,"interpolateString",function(){return Ze}),e.d(n,"interpolateTransformCss",function(){return ur}),e.d(n,"interpolateTransformSvg",function(){return or}),e.d(n,"interpolateZoom",function(){return cr}),e.d(n,"interpolateRgb",function(){return Ue}),e.d(n,"interpolateRgbBasis",function(){return Oe}),e.d(n,"interpolateRgbBasisClosed",function(){return Ye}),e.d(n,"interpolateHsl",function(){return lr}),e.d(n,"interpolateHslLong",function(){return hr}),e.d(n,"interpolateLab",function(){return dr}),e.d(n,"interpolateHcl",function(){return vr}),e.d(n,"interpolateHclLong",function(){return gr}),e.d(n,"interpolateCubehelix",function(){return _r}),e.d(n,"interpolateCubehelixLong",function(){return br}),e.d(n,"piecewise",function(){return mr}),e.d(n,"quantize",function(){return Mr}),e.d(n,"path",function(){return Fu}),e.d(n,"polygonArea",function(){return np}),e.d(n,"polygonCentroid",function(){return ep}),e.d(n,"polygonHull",function(){return op}),e.d(n,"polygonContains",function(){return ap}),e.d(n,"polygonLength",function(){return fp}),e.d(n,"quadtree",function(){return pa}),e.d(n,"randomUniform",function(){return sp}),e.d(n,"randomNormal",function(){return lp}),e.d(n,"randomLogNormal",function(){return hp}),e.d(n,"randomBates",function(){return pp}),e.d(n,"randomIrwinHall",function(){return dp}),e.d(n,"randomExponential",function(){return vp}),e.d(n,"scaleBand",function(){return xp}),e.d(n,"scalePoint",function(){return wp}),e.d(n,"scaleIdentity",function(){return Lp}),e.d(n,"scaleLinear",function(){return Rp}),e.d(n,"scaleLog",function(){return Fp}),e.d(n,"scaleOrdinal",function(){return mp}),e.d(n,"scaleImplicit",function(){return bp}),e.d(n,"scalePow",function(){return jp}),e.d(n,"scaleSqrt",function(){return Xp}),e.d(n,"scaleQuantile",function(){return Gp}),e.d(n,"scaleQuantize",function(){return Vp}),e.d(n,"scaleThreshold",function(){return $p}),e.d(n,"scaleTime",function(){return jy}),e.d(n,"scaleUtc",function(){return Xy}),e.d(n,"scaleSequential",function(){return Gy}),e.d(n,"scaleDiverging",function(){return Vy}),e.d(n,"schemeCategory10",function(){return Wy}),e.d(n,"schemeAccent",function(){return Zy}),e.d(n,"schemeDark2",function(){return Qy}),e.d(n,"schemePaired",function(){return Jy}),e.d(n,"schemePastel1",function(){return Ky}),e.d(n,"schemePastel2",function(){return t_}),e.d(n,"schemeSet1",function(){return n_}),e.d(n,"schemeSet2",function(){return e_}),e.d(n,"schemeSet3",function(){return r_}),e.d(n,"interpolateBrBG",function(){return o_}),e.d(n,"schemeBrBG",function(){return u_}),e.d(n,"interpolatePRGn",function(){return f_}),e.d(n,"schemePRGn",function(){return a_}),e.d(n,"interpolatePiYG",function(){return s_}),e.d(n,"schemePiYG",function(){return c_}),e.d(n,"interpolatePuOr",function(){return h_}),e.d(n,"schemePuOr",function(){return l_}),e.d(n,"interpolateRdBu",function(){return p_}),e.d(n,"schemeRdBu",function(){return d_}),e.d(n,"interpolateRdGy",function(){return g_}),e.d(n,"schemeRdGy",function(){return v_}),e.d(n,"interpolateRdYlBu",function(){return __}),e.d(n,"schemeRdYlBu",function(){return y_}),e.d(n,"interpolateRdYlGn",function(){return m_}),e.d(n,"schemeRdYlGn",function(){return b_}),e.d(n,"interpolateSpectral",function(){return w_}),e.d(n,"schemeSpectral",function(){return x_}),e.d(n,"interpolateBuGn",function(){return A_}),e.d(n,"schemeBuGn",function(){return M_}),e.d(n,"interpolateBuPu",function(){return N_}),e.d(n,"schemeBuPu",function(){return T_}),e.d(n,"interpolateGnBu",function(){return E_}),e.d(n,"schemeGnBu",function(){return S_}),e.d(n,"interpolateOrRd",function(){return C_}),e.d(n,"schemeOrRd",function(){return k_}),e.d(n,"interpolatePuBuGn",function(){return z_}),e.d(n,"schemePuBuGn",function(){return P_}),e.d(n,"interpolatePuBu",function(){return L_}),e.d(n,"schemePuBu",function(){return R_}),e.d(n,"interpolatePuRd",function(){return U_}),e.d(n,"schemePuRd",function(){return D_}),e.d(n,"interpolateRdPu",function(){return O_}),e.d(n,"schemeRdPu",function(){return q_}),e.d(n,"interpolateYlGnBu",function(){return B_}),e.d(n,"schemeYlGnBu",function(){return Y_}),e.d(n,"interpolateYlGn",function(){return F_}),e.d(n,"schemeYlGn",function(){return I_}),e.d(n,"interpolateYlOrBr",function(){return j_}),e.d(n,"schemeYlOrBr",function(){return H_}),e.d(n,"interpolateYlOrRd",function(){return G_}),e.d(n,"schemeYlOrRd",function(){return X_}),e.d(n,"interpolateBlues",function(){return $_}),e.d(n,"schemeBlues",function(){return V_}),e.d(n,"interpolateGreens",function(){return Z_}),e.d(n,"schemeGreens",function(){return W_}),e.d(n,"interpolateGreys",function(){return J_}),e.d(n,"schemeGreys",function(){return Q_}),e.d(n,"interpolatePurples",function(){return tb}),e.d(n,"schemePurples",function(){return K_}),e.d(n,"interpolateReds",function(){return eb}),e.d(n,"schemeReds",function(){return nb}),e.d(n,"interpolateOranges",function(){return ib}),e.d(n,"schemeOranges",function(){return rb}),e.d(n,"interpolateCubehelixDefault",function(){return ub}),e.d(n,"interpolateRainbow",function(){return cb}),e.d(n,"interpolateWarm",function(){return ob}),e.d(n,"interpolateCool",function(){return ab}),e.d(n,"interpolateSinebow",function(){return db}),e.d(n,"interpolateViridis",function(){return vb}),e.d(n,"interpolateMagma",function(){return gb}),e.d(n,"interpolateInferno",function(){return yb}),e.d(n,"interpolatePlasma",function(){return _b}),e.d(n,"create",function(){return on}),e.d(n,"creator",function(){return gt}),e.d(n,"local",function(){return fn}),e.d(n,"matcher",function(){return At}),e.d(n,"mouse",function(){return hn}),e.d(n,"namespace",function(){return vt}),e.d(n,"namespaces",function(){return pt}),e.d(n,"clientPoint",function(){return ln}),e.d(n,"select",function(){return un}),e.d(n,"selectAll",function(){return dn}),e.d(n,"selection",function(){return rn}),e.d(n,"selector",function(){return _t}),e.d(n,"selectorAll",function(){return mt}),e.d(n,"style",function(){return zt}),e.d(n,"touch",function(){return pn}),e.d(n,"touches",function(){return vn}),e.d(n,"window",function(){return Pt}),e.d(n,"event",function(){return Vt}),e.d(n,"customEvent",function(){return Jt}),e.d(n,"arc",function(){return Ob}),e.d(n,"area",function(){return jb}),e.d(n,"line",function(){return Hb}),e.d(n,"pie",function(){return Vb}),e.d(n,"areaRadial",function(){return Kb}),e.d(n,"radialArea",function(){return Kb}),e.d(n,"lineRadial",function(){return Jb}),e.d(n,"radialLine",function(){return Jb}),e.d(n,"pointRadial",function(){return tm}),e.d(n,"linkHorizontal",function(){return fm}),e.d(n,"linkVertical",function(){return cm}),e.d(n,"linkRadial",function(){return sm}),e.d(n,"symbol",function(){return Em}),e.d(n,"symbols",function(){return Sm}),e.d(n,"symbolCircle",function(){return lm}),e.d(n,"symbolCross",function(){return hm}),e.d(n,"symbolDiamond",function(){return vm}),e.d(n,"symbolSquare",function(){return mm}),e.d(n,"symbolStar",function(){return bm}),e.d(n,"symbolTriangle",function(){return wm}),e.d(n,"symbolWye",function(){return Nm}),e.d(n,"curveBasisClosed",function(){return Lm}),e.d(n,"curveBasisOpen",function(){return Um}),e.d(n,"curveBasis",function(){return zm}),e.d(n,"curveBundle",function(){return Om}),e.d(n,"curveCardinalClosed",function(){return Hm}),e.d(n,"curveCardinalOpen",function(){return Xm}),e.d(n,"curveCardinal",function(){return Im}),e.d(n,"curveCatmullRomClosed",function(){return Zm}),e.d(n,"curveCatmullRomOpen",function(){return Jm}),e.d(n,"curveCatmullRom",function(){return $m}),e.d(n,"curveLinearClosed",function(){return tx}),e.d(n,"curveLinear",function(){return Bb}),e.d(n,"curveMonotoneX",function(){return fx}),e.d(n,"curveMonotoneY",function(){return cx}),e.d(n,"curveNatural",function(){return hx}),e.d(n,"curveStep",function(){return px}),e.d(n,"curveStepAfter",function(){return gx}),e.d(n,"curveStepBefore",function(){return vx}),e.d(n,"stack",function(){return mx}),e.d(n,"stackOffsetExpand",function(){return xx}),e.d(n,"stackOffsetDiverging",function(){return wx}),e.d(n,"stackOffsetNone",function(){return yx}),e.d(n,"stackOffsetSilhouette",function(){return Mx}),e.d(n,"stackOffsetWiggle",function(){return Ax}),e.d(n,"stackOrderAscending",function(){return Tx}),e.d(n,"stackOrderDescending",function(){return Sx}),e.d(n,"stackOrderInsideOut",function(){return Ex}),e.d(n,"stackOrderNone",function(){return _x}),e.d(n,"stackOrderReverse",function(){return kx}),e.d(n,"timeInterval",function(){return Qp}),e.d(n,"timeMillisecond",function(){return Kp}),e.d(n,"timeMilliseconds",function(){return tv}),e.d(n,"utcMillisecond",function(){return Kp}),e.d(n,"utcMilliseconds",function(){return tv}),e.d(n,"timeSecond",function(){return iv}),e.d(n,"timeSeconds",function(){return uv}),e.d(n,"utcSecond",function(){return iv}),e.d(n,"utcSeconds",function(){return uv}),e.d(n,"timeMinute",function(){return av}),e.d(n,"timeMinutes",function(){return fv}),e.d(n,"timeHour",function(){return sv}),e.d(n,"timeHours",function(){return lv}),e.d(n,"timeDay",function(){return dv}),e.d(n,"timeDays",function(){return pv}),e.d(n,"timeWeek",function(){return gv}),e.d(n,"timeWeeks",function(){return Mv}),e.d(n,"timeSunday",function(){return gv}),e.d(n,"timeSundays",function(){return Mv}),e.d(n,"timeMonday",function(){return yv}),e.d(n,"timeMondays",function(){return Av}),e.d(n,"timeTuesday",function(){return _v}),e.d(n,"timeTuesdays",function(){return Tv}),e.d(n,"timeWednesday",function(){return bv}),e.d(n,"timeWednesdays",function(){return Nv}),e.d(n,"timeThursday",function(){return mv}),e.d(n,"timeThursdays",function(){return Sv}),e.d(n,"timeFriday",function(){return xv}),e.d(n,"timeFridays",function(){return Ev}),e.d(n,"timeSaturday",function(){return wv}),e.d(n,"timeSaturdays",function(){return kv}),e.d(n,"timeMonth",function(){return Pv}),e.d(n,"timeMonths",function(){return zv}),e.d(n,"timeYear",function(){return Lv}),e.d(n,"timeYears",function(){return Dv}),e.d(n,"utcMinute",function(){return qv}),e.d(n,"utcMinutes",function(){return Ov}),e.d(n,"utcHour",function(){return Bv}),e.d(n,"utcHours",function(){return Iv}),e.d(n,"utcDay",function(){return Hv}),e.d(n,"utcDays",function(){return jv}),e.d(n,"utcWeek",function(){return Gv}),e.d(n,"utcWeeks",function(){return Kv}),e.d(n,"utcSunday",function(){return Gv}),e.d(n,"utcSundays",function(){return Kv}),e.d(n,"utcMonday",function(){return Vv}),e.d(n,"utcMondays",function(){return tg}),e.d(n,"utcTuesday",function(){return $v}),e.d(n,"utcTuesdays",function(){return ng}),e.d(n,"utcWednesday",function(){return Wv}),e.d(n,"utcWednesdays",function(){return eg}),e.d(n,"utcThursday",function(){return Zv}),e.d(n,"utcThursdays",function(){return rg}),e.d(n,"utcFriday",function(){return Qv}),e.d(n,"utcFridays",function(){return ig}),e.d(n,"utcSaturday",function(){return Jv}),e.d(n,"utcSaturdays",function(){return ug}),e.d(n,"utcMonth",function(){return ag}),e.d(n,"utcMonths",function(){return fg}),e.d(n,"utcYear",function(){return sg}),e.d(n,"utcYears",function(){return lg}),e.d(n,"timeFormatDefaultLocale",function(){return Py}),e.d(n,"timeFormat",function(){return yg}),e.d(n,"timeParse",function(){return _g}),e.d(n,"utcFormat",function(){return bg}),e.d(n,"utcParse",function(){return mg}),e.d(n,"timeFormatLocale",function(){return vg}),e.d(n,"isoFormat",function(){return zy}),e.d(n,"isoParse",function(){return Ry}),e.d(n,"now",function(){return Rr}),e.d(n,"timer",function(){return Ur}),e.d(n,"timerFlush",function(){return qr}),e.d(n,"timeout",function(){return Ir}),e.d(n,"interval",function(){return Fr}),e.d(n,"transition",function(){return fi}),e.d(n,"active",function(){return nu}),e.d(n,"interrupt",function(){return ei}),e.d(n,"voronoi",function(){return dw}),e.d(n,"zoom",function(){return Nw}),e.d(n,"zoomTransform",function(){return yw}),e.d(n,"zoomIdentity",function(){return gw})}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,